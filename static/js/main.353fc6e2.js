/*! For license information please see main.353fc6e2.js.LICENSE.txt */
(()=>{var e={3915:function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map((e=>e.data()))),r.map((e=>e.dispose())),e.dispose()}async infer(e,t,r){const a=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=a.shape[1],i=a.shape[2],o=await this.model.executeAsync(a),l=o[0].dataSync(),u=o[1].dataSync();a.dispose(),n.dispose(o);const[c,d]=this.calculateMaxScores(l,o[0].shape[1],o[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(u,[o[1].shape[1],o[1].shape[3]]);return n.image.nonMaxSuppression(e,c,t,r,r)})),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(i,s,u,c,f,d)}buildDetectedObjects(e,t,n,a,s,i){const o=s.length,l=[];for(let u=0;u<o;u++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*s[u]+e];const c=o[0]*t,d=o[1]*e,h=o[2]*t,p=o[3]*e;o[0]=d,o[1]=c,o[2]=p-d,o[3]=h-c,l.push({bbox:o,class:r[i[s[u]]+1].displayName,score:a[s[u]]})}return l}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],i=r);r[s]=t,a[s]=i}return[r,a]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new a(t,r);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(5743))},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Ye,deregisterOp:()=>A,loadGraphModel:()=>qe,loadGraphModelSync:()=>Ke,registerOp:()=>C,version_converter:()=>Xe});var r={};n.r(r),n.d(r,{json:()=>L});var a={};n.r(a),n.d(a,{json:()=>P});var s={};n.r(s),n.d(s,{json:()=>B});var i={};n.r(i),n.d(i,{json:()=>W});var o={};n.r(o),n.d(o,{json:()=>V});var l={};n.r(l),n.d(l,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>G});var c={};n.r(c),n.d(c,{json:()=>j});var d={};n.r(d),n.d(d,{json:()=>H});var h={};n.r(h),n.d(h,{json:()=>Y});var p={};n.r(p),n.d(p,{json:()=>q});var f={};n.r(f),n.d(f,{json:()=>K});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>Q});var b={};n.r(b),n.d(b,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var S=n(5743);var T,N;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(T||(T={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const I={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function E(e){return I[e]}function A(e){delete I[e]}function $(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return _(t.inputNames[o],n,r,a);if("tensors"===s.type){const s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>_(e,n,r,a)))}const l=_(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:S.util.toNestedArray(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function _(e,t,n,r){const[a,s]=O(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[D(a,e)]));return void 0!==i?t[D(a,i)][s]:void 0}function R(e,t,n){return t[D(e,n.currentContextId)]}function F(e,t){const[n,r,a]=O(e,t);return[D(n,t&&t.currentContextId),r,a]}function D(e,t){return t?`${e}-${t}`:e}function O(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function M(e,t,n){let r=$("pad",e,t,n);if("explicit"===r){r=$("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function z(e){return e.kept?e:(0,S.clone)(e)}const L=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],W=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],V=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],H=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Y=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],q=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],K=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],X=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],J=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class re{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,i,o,l,u,c,d,h,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=F(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=F(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=F(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=se(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=oe(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=ye(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=ge(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=F(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:le(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=F(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=F(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ae(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return null!=a?ae(a.s,r):n}function ie(e,t,n){const r=e[t];return r?r.b:n}function oe(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function le(e){switch("string"===typeof e&&(e=T[e]),e){case T.DT_FLOAT:case T.DT_HALF:return"float32";case T.DT_INT32:case T.DT_INT64:case T.DT_INT8:case T.DT_UINT8:return"int32";case T.DT_BOOL:return"bool";case T.DT_DOUBLE:return"float32";case T.DT_STRING:return"string";case T.DT_COMPLEX64:case T.DT_COMPLEX128:return"complex64";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ce(e,t,n){const r=e[t];return r&&r.type?le(r.type):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>le(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const r=e[t];return r&&r.shape?he(r.shape):n}function fe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>ae(e,r))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>he(e))):n}function ye(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oe(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return ie(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ce(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9249);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];S.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function we(e){return"number"!==typeof e&&!e.some((e=>e<0))}function ke(e,t,n){let r=Se(e,n);const a=!we(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Se(e.shape,r)})),!we(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Te{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=(0,S.reshape)((0,S.slice)(t,i,o),this.elementShape)}return s}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}class Ne{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=r,(0,S.keep)(this.idTensor)}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xe(e,this.elementShape,"TensorList shape mismatch: ");const r=ke(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,r)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,xe(r.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ke(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(r)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],r)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Ie=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$("thenBranch",e,t,n),a=$("elseBranch",e,t,n),s=$("cond",e,t,n),i=$("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",e,t,n),a=$("cond",e,t,n),s=$("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[z($("pred",e,t,n))];case"Switch":{const r=$("pred",e,t,n);let a=$("data",e,t,n);return a.kept||(a=z(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==_(e,t,n)));if(r){return[z(_(r,t,n))]}return}case"Enter":{const r=$("frameName",e,t,n),a=$("tensor",e,t,n);return n.enterFrame(r),[z(a)]}case"Exit":{const r=$("tensor",e,t,n);return n.exitFrame(),[z(r)]}case"NextIteration":{const r=$("tensor",e,t,n);return n.nextIteration(),[z(r)]}case"TensorArrayV3":{const r=$("size",e,t,n),a=$("dtype",e,t,n),s=$("elementShape",e,t,n),i=$("dynamicSize",e,t,n),o=$("clearAfterRead",e,t,n),l=$("identicalElementShapes",e,t,n),u=$("name",e,t,n),c=new Te(u,a,r,s,l,i,o);return n.addTensorArray(c),[c.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=$("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",e,t,n),a=$("tensor",e,t,n),s=$("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Ne([],n,e.dtype,r),i=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}($("tensor",e,t,n),r,$("elementShape",e,t,n),$("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",e,t,n),a=$("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=$(s,e,t,n),o=function(e,t,n,r){return new Ne([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=$("tensorListId",e,t,n),a=$("indices",e,t,n),s=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n),i=$("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,S.unstack)(e);return new Ne(a,t,r)}($("tensor",e,t,n),$("elementShape",e,t,n),$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=$("tensorListId",e,t,n),a=n.getTensorList(r.id),s=$("dtype",e,t,n),i=$("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=$("tensorListId",e,t,n),a=$("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=$("tensor",e,t,n),a=$("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Se(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=(0,S.reshape)((0,S.slice)(e,o,l),s)}return e.dispose(),n})),l=new Ne([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,$("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=$("tensorListId",e,t,n),a=n.getTensorList(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorListResize":{const r=$("tensorListId",e,t,n),a=$("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ce(e,t,n){const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=$("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$("strides",e,t,n),d=M(e,t,n),h=$("dataFormat",e,t,n).toUpperCase(),p=$("dilations",e,t,n);let[f,m]=$("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:$("leakyreluAlpha",e,t,n)}}function Ee(e,t,n){return{boxes:$("boxes",e,t,n),scores:$("scores",e,t,n),maxOutputSize:$("maxOutputSize",e,t,n),iouThreshold:$("iouThreshold",e,t,n),scoreThreshold:$("scoreThreshold",e,t,n),softNmsSigma:$("softNmsSigma",e,t,n)}}var Ae=n(1997);class $e{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ae.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),r=n.length,a=e.length;S.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,S.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function _e(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add($("a",e,t,n),$("b",e,t,n))];case"AddN":return[r.addN($("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod($("a",e,t,n),$("b",e,t,n))];case"Mul":return[r.mul($("a",e,t,n),$("b",e,t,n))];case"RealDiv":case"Div":return[r.div($("a",e,t,n),$("b",e,t,n))];case"DivNoNan":return[r.divNoNan($("a",e,t,n),$("b",e,t,n))];case"FloorDiv":return[r.floorDiv($("a",e,t,n),$("b",e,t,n))];case"Sub":return[r.sub($("a",e,t,n),$("b",e,t,n))];case"Minimum":return[r.minimum($("a",e,t,n),$("b",e,t,n))];case"Maximum":return[r.maximum($("a",e,t,n),$("b",e,t,n))];case"Pow":return[r.pow($("a",e,t,n),$("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs($("x",e,t,n))];case"Acos":return[r.acos($("x",e,t,n))];case"Acosh":return[r.acosh($("x",e,t,n))];case"Asin":return[r.asin($("x",e,t,n))];case"Asinh":return[r.asinh($("x",e,t,n))];case"Atan":return[r.atan($("x",e,t,n))];case"Atan2":return[r.atan2($("x",e,t,n),$("y",e,t,n))];case"Atanh":return[r.atanh($("x",e,t,n))];case"Ceil":return[r.ceil($("x",e,t,n))];case"Complex":return[r.complex($("real",e,t,n),$("imag",e,t,n))];case"Cos":return[r.cos($("x",e,t,n))];case"Cosh":return[r.cosh($("x",e,t,n))];case"Elu":return[r.elu($("x",e,t,n))];case"Erf":return[r.erf($("x",e,t,n))];case"Exp":return[r.exp($("x",e,t,n))];case"Expm1":return[r.expm1($("x",e,t,n))];case"Floor":return[r.floor($("x",e,t,n))];case"Log":return[r.log($("x",e,t,n))];case"Log1p":return[r.log1p($("x",e,t,n))];case"Imag":return[r.imag($("x",e,t,n))];case"Neg":return[r.neg($("x",e,t,n))];case"Reciprocal":return[r.reciprocal($("x",e,t,n))];case"Real":return[r.real($("x",e,t,n))];case"Relu":return[r.relu($("x",e,t,n))];case"Round":return[r.round($("x",e,t,n))];case"Selu":return[r.selu($("x",e,t,n))];case"Sigmoid":return[r.sigmoid($("x",e,t,n))];case"Sin":return[r.sin($("x",e,t,n))];case"Sign":return[r.sign($("x",e,t,n))];case"Sinh":return[r.sinh($("x",e,t,n))];case"Softplus":return[r.softplus($("x",e,t,n))];case"Sqrt":return[r.sqrt($("x",e,t,n))];case"Square":return[r.square($("x",e,t,n))];case"Tanh":return[r.tanh($("x",e,t,n))];case"Tan":return[r.tan($("x",e,t,n))];case"ClipByValue":return[r.clipByValue($("x",e,t,n),$("clipValueMin",e,t,n),$("clipValueMax",e,t,n))];case"Relu6":return[r.relu6($("x",e,t,n))];case"Rsqrt":return[r.rsqrt(_(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu($("x",e,t,n),$("alpha",e,t,n))];case"Prelu":return[r.prelu($("x",e,t,n),$("alpha",e,t,n))];case"IsNan":return[r.isNaN(_(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(_(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(_(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Ie(e,t,n);case"convolution":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const a=$("stride",e,t,n),s=$("pad",e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilation",e,t,n);return[r.conv1d($("x",e,t,n),$("filter",e,t,n),a,s,i,o)]}case"Conv2D":{const a=$("strides",e,t,n),s=M(e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[r.conv2d($("x",e,t,n),$("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Ce(e,t,n);return[r.fused.conv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Ce(e,t,n);return[r.fused.depthwiseConv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=$("outputShape",e,t,n),s=$("strides",e,t,n),i=M(e,t,n);return[r.conv2dTranspose($("x",e,t,n),$("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=$("strides",e,t,n),s=M(e,t,n),i=$("dilations",e,t,n),o=$("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d($("input",e,t,n),$("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[r.conv3d($("x",e,t,n),$("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.avgPool($("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.maxPool($("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("kernelSize",e,t,n),o=$("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax($("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.avgPool3d($("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.maxPool3d($("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{const a=$("strides",e,t,n),s=$("pad",e,t,n),i=$("dilations",e,t,n),o=a[1],l=a[2],u=i[1],c=i[2];return[r.dilation2d($("x",e,t,n),$("filter",e,t,n),[o,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const a=$("shape",e,t,n),s=$("dtype",e,t,n),i=$("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{const a=$("start",e,t,n),s=$("stop",e,t,n),i=$("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{const a=$("logits",e,t,n),s=$("numSamples",e,t,n),i=$("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{const a=$("indices",e,t,n),s=$("depth",e,t,n),i=$("onValue",e,t,n),o=$("offValue",e,t,n),l=$("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones($("shape",e,t,n),$("dtype",e,t,n))];case"OnesLike":return[r.onesLike($("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal($("shape",e,t,n),$("dtype",e,t,n),$("seed",e,t,n))];case"RandomUniform":return[r.randomUniform($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("seed",e,t,n))];case"Range":{const a=$("start",e,t,n),s=$("stop",e,t,n),i=$("step",e,t,n);return[r.range(a,s,i,$("dtype",e,t,n))]}case"TruncatedNormal":{const a=$("shape",e,t,n),s=$("mean",e,t,n),i=$("stdDev",e,t,n),o=$("seed",e,t,n);return[r.truncatedNormal(a,s,i,$("dtype",e,t,n),o)]}case"Zeros":return[r.zeros($("shape",e,t,n),$("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Ee(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Ee(e,t,n),u=$("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Ee(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{const r=a.cast($("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync($("x",e,t,n),$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const a=$("sortedSequence",e,t,n),s=$("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{const a=$("x",e,t,n),s=$("k",e,t,n),i=$("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{const a=$("sortedSequence",e,t,n),s=$("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{const a=$("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{const a=$("x",e,t,n),s=$("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const a=$("images",e,t,n),s=$("size",e,t,n),i=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{const a=$("images",e,t,n),s=$("size",e,t,n),i=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{const a=$("image",e,t,n),s=$("boxes",e,t,n),i=$("boxInd",e,t,n),o=$("cropSize",e,t,n),l=$("method",e,t,n),u=$("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{const a=$("images",e,t,n),s=$("transforms",e,t,n),i=$("outputShape",e,t,n),o=$("fillValue",e,t,n),l=$("interpolation",e,t,n),u=$("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=$("default",e,t,n);return[_(e.name,t,n)||a];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[z($("x",e,t,n))];case"IdentityN":return $("x",e,t,n).map((e=>z(e)));case"Shape":return[r.tensor1d($("x",e,t,n).shape,"int32")];case"ShapeN":return $("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar($("x",e,t,n).size,"int32")];case"Rank":return[r.scalar($("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const s=$("x",e,t,n),i=$("data",e,t,n),o=$("message",e,t,n),l=$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[r.equal($("a",e,t,n),$("b",e,t,n))];case"NotEqual":return[r.notEqual($("a",e,t,n),$("b",e,t,n))];case"Greater":return[r.greater($("a",e,t,n),$("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual($("a",e,t,n),$("b",e,t,n))];case"Less":return[r.less($("a",e,t,n),$("b",e,t,n))];case"LessEqual":return[r.lessEqual($("a",e,t,n),$("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd($("a",e,t,n),$("b",e,t,n))];case"LogicalNot":return[r.logicalNot($("a",e,t,n))];case"LogicalOr":return[r.logicalOr($("a",e,t,n),$("b",e,t,n))];case"Select":case"SelectV2":return[r.where($("condition",e,t,n),$("a",e,t,n),$("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul($("a",e,t,n),$("b",e,t,n),$("transposeA",e,t,n),$("transposeB",e,t,n))];case"Einsum":return[r.einsum($("equation",e,t,n),...$("tensors",e,t,n))];case"Transpose":return[r.transpose($("x",e,t,n),$("perm",e,t,n))];case"_FusedMatMul":const[a,s]=$("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=$("numArgs",e,t,n),u=$("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=$("args",e,t,n);return[r.fused.matMul({a:$("a",e,t,n),b:$("b",e,t,n),transposeA:$("transposeA",e,t,n),transposeB:$("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart($("a",e,t,n),$("numLower",e,t,n),$("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm($("x",e,t,n),$("axis",e,t,n),$("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm($("x",e,t,n),$("mean",e,t,n),$("variance",e,t,n),$("offset",e,t,n),$("scale",e,t,n),$("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization($("x",e,t,n),$("radius",e,t,n),$("bias",e,t,n),$("alpha",e,t,n),$("beta",e,t,n))];case"Softmax":return[r.softmax($("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather($("paramsNestedSplits",e,t,n),$("paramsDenseValues",e,t,n),$("indices",e,t,n),$("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange($("starts",e,t,n),$("limits",e,t,n),$("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor($("shape",e,t,n),$("values",e,t,n),$("defaultValue",e,t,n),$("rowPartitionTensors",e,t,n),$("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.max($("x",e,t,n),a,s)]}case"Mean":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.mean($("x",e,t,n),a,s)]}case"Min":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.min($("x",e,t,n),a,s)]}case"Sum":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.sum($("x",e,t,n),a,s)]}case"All":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.all($("x",e,t,n),a,s)]}case"Any":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.any($("x",e,t,n),a,s)]}case"ArgMax":{const a=$("axis",e,t,n);return[r.argMax($("x",e,t,n),a)]}case"ArgMin":{const a=$("axis",e,t,n);return[r.argMin($("x",e,t,n),a)]}case"Prod":{const a=$("axis",e,t,n),s=$("keepDims",e,t,n);return[r.prod($("x",e,t,n),a,s)]}case"Cumprod":{const a=$("axis",e,t,n),s=$("exclusive",e,t,n),i=$("reverse",e,t,n);return[r.cumprod($("x",e,t,n),a,s,i)]}case"Cumsum":{const a=$("axis",e,t,n),s=$("exclusive",e,t,n),i=$("reverse",e,t,n);return[r.cumsum($("x",e,t,n),a,s,i)]}case"Bincount":const a=$("x",e,t,n),s=$("weights",e,t,n),i=$("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{const a=$("x",e,t,n),s=$("weights",e,t,n),i=$("size",e,t,n),o=$("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const a=$("n",e,t,n),s=$("axis",e,t,n);let i=$("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{const a=$("x",e,t,n),s=$("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{const a=$("axis",e,t,n),s=$("batchDims",e,t,n),i=$("x",e,t,n),o=$("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{const a=$("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);const i=$("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{const a=$("axis",e,t,n),s=$("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{const a=$("begin",e,t,n),s=$("size",e,t,n);return[r.slice($("x",e,t,n),a,s)]}case"StridedSlice":{const a=$("begin",e,t,n),s=$("end",e,t,n),i=$("strides",e,t,n),o=$("beginMask",e,t,n),l=$("endMask",e,t,n),u=$("ellipsisMask",e,t,n),c=$("newAxisMask",e,t,n),d=$("shrinkAxisMask",e,t,n),h=$("x",e,t,n);return[r.stridedSlice(h,a,s,i,o,l,u,c,d)]}case"Pack":return(0,S.tidy)((()=>{const a=$("axis",e,t,n),s=$("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{const t=S.util.arraysEqual(e.shape,i);if(!t&&!S.util.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{const a=$("axis",e,t,n),s=$("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{const a=$("reps",e,t,n);return[r.tile($("x",e,t,n),a)]}case"Split":case"SplitV":{const a=$("axis",e,t,n),s=$("numOrSizeSplits",e,t,n),i=$("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{const a=$("indices",e,t,n),s=$("values",e,t,n),i=$("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{const a=$("x",e,t,n),s=$("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{const a=$("sparseIndices",e,t,n),s=$("outputShape",e,t,n),i=$("sparseValues",e,t,n),o=$("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const a=$("indices",e,t,n),s=$("values",e,t,n),i=$("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows($("indices",e,t,n),$("values",e,t,n),$("denseShape",e,t,n),$("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{const{outputIndices:a,outputShape:s}=r.sparse.sparseReshape($("inputIndices",e,t,n),$("inputShape",e,t,n),$("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[r.fft($("x",e,t,n))];case"IFFT":return[r.ifft($("x",e,t,n))];case"RFFT":return[r.rfft($("x",e,t,n))];case"IRFFT":return[r.irfft($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace($("input",e,t,n),$("pattern",e,t,n),$("rewrite",e,t,n),$("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:s}=r.string.stringNGrams($("data",e,t,n),$("dataSplits",e,t,n),$("separator",e,t,n),$("nGramWidths",e,t,n),$("leftPad",e,t,n),$("rightPad",e,t,n),$("padWidth",e,t,n),$("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{const{indices:a,values:s,shape:i}=r.string.stringSplit($("input",e,t,n),$("delimiter",e,t,n),$("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast($("input",e,t,n),$("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[r.cast($("x",e,t,n),$("dtype",e,t,n))];case"ExpandDims":{const a=$("axis",e,t,n);return[r.expandDims($("x",e,t,n),a)]}case"Squeeze":{const a=$("axis",e,t,n);return[r.squeeze($("x",e,t,n),a)]}case"Reshape":return[r.reshape($("x",e,t,n),$("shape",e,t,n))];case"EnsureShape":return[r.ensureShape($("x",e,t,n),$("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad($("x",e,t,n),$("padding",e,t,n),$("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad($("x",e,t,n),$("padding",e,t,n),$("constantValue",e,t,n))];case"SpaceToBatchND":{const a=$("blockShape",e,t,n),s=$("paddings",e,t,n);return[r.spaceToBatchND($("x",e,t,n),a,s)]}case"BatchToSpaceND":{const a=$("blockShape",e,t,n),s=$("crops",e,t,n);return[r.batchToSpaceND($("x",e,t,n),a,s)]}case"DepthToSpace":{const a=$("blockSize",e,t,n),s=$("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace($("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo($("x",e,t,n),$("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs($("s0",e,t,n),$("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=$("keyDType",e,t,n),s=$("valueDType",e,t,n),i=new $e(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),i=$("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),i=$("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=$("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.util.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Re{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Fe(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>O(e)[0])));r=r||[];const c=new Set(r.map((e=>O(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Pe(e)||Be(e)||We(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function De(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>O(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),d={};for(const m of u){d[m.name]=d[m.name]||0;for(const e of m.children)i(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!a.has(s.name)&&(a.add(s.name),r.push(s.name))}const s=e.filter((e=>a.has(e.name)));return s}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),i=e=>s.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new Oe(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new Oe(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!a(o))for(const e of o.inputs){if(!n.has(e.name))throw new Oe(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new Oe(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class Oe extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Me=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),ze=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Le=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Pe(e){return Me.has(e.op)}function Be(e){return ze.has(e.op)}function We(e){return Le.has(e.op)}class Ve{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ve(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Fe(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}const i=De(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Pe(e)?n:t)),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=s[o];if(t===n)continue;const r=e[o],a=e[t];i.has(a.name)||i.set(a.name,[]),i.get(a.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[O(e)[0]])),a=t.map((e=>O(e)[0])),s=new Set(a);let i=a.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},c={};return(0,S.tidy)((()=>{const n=new Re(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,s]=O(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))}));const a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=_e(e,r,n,this._resourceManager);if(S.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>_(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!Pe(t)&&!s.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Pe(e))continue;const t=R(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(e){return Pe(e)||a.has(e.name)}if(!Pe(e)&&null!=s)for(const o of s){if(i(o))continue;const e=R(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Re(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>_(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[O(e)[0]])),i=n.map((e=>O(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:h}=Fe(e,l,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=O(t),a=[];a[r]=e[t],f[n]=a}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Pe(e)&&!_(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,a,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$("isConstant",e.node,r,n)&&([c]=F(e.node.name,n)),null==r[e.node.name]){const d=_e(e.node,r,n,this._resourceManager);c||([c]=F(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?u.push(d.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=F(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=O(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&S.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=O(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=O(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var Ge=n(285);const je="?tfjs-format=file",He="model.json";class Ye{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ue}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,Ge.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Ve(re.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=re.Instance.transformGraph(e.modelInitializer);this.initializer=new Ve(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,i;const o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function qe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${He}${je}`}(e));const r=new Ye(e,t,n);return await r.load(),r}function Ke(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const a=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,a,r);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Ye(t);return n.load(),n}const Xe="4.21.0"},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>r,uI:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},6692:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return l(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return l(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return l(e,t,n,r,a,s,!0)}function l(e,t,n,a,s,i){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let r=0;r<t.length;r++)t[r]>s&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let l=!1;for(let r=m.length-1;r>=o;--r){const n=u(e,i,m[r]);if(n>=a){l=!0;break}if(t.score=t.score*c(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,l||(t.score===n?(m.push(i),g.push(t.score)):t.score>s&&r(p,t,d))}const y=m.length,b=n-y;l&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return o&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function u(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(l-i),f=(d-u)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(l,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>s,ZS:()=>i,ut:()=>o})},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>a});var r=n(259);function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=(0,r.r)(e,"int32"),s=(0,r.r)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),i=r*e.length;s.values.set(t,i)}return s.toTensor()}},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var r=n(6790),a=n(5399),s=n(7926),i=n(9554),o=n(843),l=n(4124),u=n(8977),c=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,a._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"===typeof r?c.av(`${r}ms`,9):r.error,o=c.av(e,25),l=t.rank,u=t.size,d=c.av(t.shape.toString(),14);let h="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(l.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,o.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(i.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(i.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o._5)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=(0,o._5)(t,this.backendName);c.vA(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(u,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.vQ)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.Kg(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),i=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.SL)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.qY(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},l=(0,o.vQ)(e);null!=l&&(r=l.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.vA(a instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.FZ)((0,c.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!c.r1(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return c.vA(c.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;c.vA(r.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...r,n),c.vA(s.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.vA(c.Tn(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];c.vA(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.vA(a.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.L)();if(null==e._tfengine){const t=new a.OH(e);e._tfengine=new b(t)}return(0,a.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(i.OMN,n)}},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>l,OH:()=>s,_K:()=>o,tj:()=>u});var r=n(1426);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){e[a].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function o(){return l}let l=null;function u(e){l=e}},7926:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:()=>a,m:()=>s})},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>h,Hs:()=>I,IS:()=>u,ME:()=>f,Ok:()=>C,Sm:()=>o,W4:()=>T,aC:()=>y,fL:()=>c,gJ:()=>N,gY:()=>l,go:()=>S,jh:()=>v,jz:()=>w,kB:()=>b,m1:()=>p,rE:()=>k,rm:()=>d});var r=n(2164),a=n(5399),s=n(9494),i=n(8804);function o(){(0,a._K)().set("PROD",!0)}function l(){(0,a._K)().set("DEBUG",!0)}function u(){(0,a._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.T2.disposeVariables()}function h(){return r.T2}function p(){return r.T2.memory()}function f(e){return r.T2.profile(e)}function m(e,t){return r.T2.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.T2.keep(e)}function b(e){return r.T2.time(e)}function v(e){return r.T2.setBackend(e)}function x(){return r.T2.ready()}function w(){return r.T2.backendName}function k(e){r.T2.removeBackend(e)}function S(e){return r.T2.findBackend(e)}function T(e){return r.T2.findBackendFactory(e)}function N(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.T2.registerBackend(e,t,n)}function I(){return r.T2.backend}function C(e,t){(0,a._K)().setPlatform(e,t)}(0,s.B4)(c)},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>o,_X:()=>h,jY:()=>u,mu:()=>c,ok:()=>l,y7:()=>d});var r=n(2164),a=n(9494),s=n(4148),i=n(1426);function o(e){return i.vA(i.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s.YT)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,s.YT)(n,"dy","tf.grad"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(a)),[a],o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function l(e){return i.vA(i.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.j1)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,s.YT)(n,"dy","tf.grads"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(...a)),a,o);return null!=o&&i.O3(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function u(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.vA(t instanceof a.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.vA(null==n||n instanceof a.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.T2.gradients((()=>e(t)),[t],n);return p(s),{grad:s[0],value:o}}}function c(e){return i.vA(i.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.vA(Array.isArray(t)&&t.every((e=>e instanceof a.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.vA(null==n||n instanceof a.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.T2.gradients((()=>e(...t)),t,n);return null!=n&&i.O3(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){i.vA(i.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),i.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof a.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=r.T2.gradients(e,t,null,!0);i.vA(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.vA(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function h(e){return r.T2.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.ljI,Acos:()=>yt.Vvy,Acosh:()=>yt.PH8,AdadeltaOptimizer:()=>$e,AdagradOptimizer:()=>Re,AdamOptimizer:()=>Oe,AdamaxOptimizer:()=>Le,Add:()=>yt.OMN,AddN:()=>yt.EkD,All:()=>yt.u8Z,Any:()=>yt.FSt,ArgMax:()=>yt.Jp_,ArgMin:()=>yt.p_m,Asin:()=>yt.QKF,Asinh:()=>yt.epO,Atan:()=>yt.TyE,Atan2:()=>yt.lxb,Atanh:()=>yt.zP9,AvgPool:()=>yt.ho8,AvgPool3D:()=>yt.cS,AvgPool3DGrad:()=>yt.wwC,AvgPoolGrad:()=>yt.VCH,BatchMatMul:()=>yt.jAQ,BatchToSpaceND:()=>yt.Ik2,Bincount:()=>yt.N4F,BitwiseAnd:()=>yt.HNs,BroadcastArgs:()=>yt.vj7,BroadcastTo:()=>yt.LB5,Cast:()=>yt.KXH,Ceil:()=>yt.QDP,ClipByValue:()=>yt.vaV,Complex:()=>yt.pr3,ComplexAbs:()=>yt.$zE,Concat:()=>yt.$dB,Conv2D:()=>yt.p2J,Conv2DBackpropFilter:()=>yt.rFm,Conv2DBackpropInput:()=>yt.jfg,Conv3D:()=>yt.A1h,Conv3DBackpropFilterV2:()=>yt.iGz,Conv3DBackpropInputV2:()=>yt.gC7,Cos:()=>yt.Mn0,Cosh:()=>yt.MnK,CropAndResize:()=>yt.MRQ,Cumprod:()=>yt.jj_,Cumsum:()=>yt.nY8,DataStorage:()=>pr.GJ,DenseBincount:()=>yt.wNW,DepthToSpace:()=>yt.TMz,DepthwiseConv2dNative:()=>yt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>yt.X$8,DepthwiseConv2dNativeBackpropInput:()=>yt.nVu,Diag:()=>yt.ORI,Dilation2D:()=>yt.jxD,Dilation2DBackpropFilter:()=>yt.pk0,Dilation2DBackpropInput:()=>yt.bP9,Draw:()=>yt.XmO,ENV:()=>b.Km,Einsum:()=>yt.Qgm,Elu:()=>yt.Pah,EluGrad:()=>yt.rsH,Environment:()=>b.OH,Equal:()=>yt.BRl,Erf:()=>yt._s9,Exp:()=>yt.ox3,ExpandDims:()=>yt.ybN,Expm1:()=>yt.ybj,FFT:()=>yt.rGP,Fill:()=>yt.SQl,FlipLeftRight:()=>yt.BxF,Floor:()=>yt.ZgB,FloorDiv:()=>yt.ElG,FromPixels:()=>yt.awo,FusedBatchNorm:()=>yt.i5R,FusedConv2D:()=>yt.aAr,FusedDepthwiseConv2D:()=>yt.T7M,GatherNd:()=>yt.O4G,GatherV2:()=>yt.mxL,Greater:()=>yt.XhZ,GreaterEqual:()=>yt.lLS,IFFT:()=>yt.OAQ,Identity:()=>yt.lzr,Imag:()=>yt.dv8,IsFinite:()=>yt.gIW,IsInf:()=>yt.E3$,IsNan:()=>yt.iPs,KernelBackend:()=>pr.uI,LRN:()=>yt.jM4,LRNGrad:()=>yt.ToN,LeakyRelu:()=>yt.X0$,Less:()=>yt.mIA,LessEqual:()=>yt.CwD,LinSpace:()=>yt.mnI,Log:()=>yt.tG8,Log1p:()=>yt.Cg$,LogSoftmax:()=>yt.zfU,LogicalAnd:()=>yt.RUm,LogicalNot:()=>yt.nZd,LogicalOr:()=>yt.LXA,LogicalXor:()=>yt.RW8,LowerBound:()=>yt.yPW,MatrixBandPart:()=>yt.WRv,Max:()=>yt.VAI,MaxPool:()=>yt.t3d,MaxPool3D:()=>yt.ySp,MaxPool3DGrad:()=>yt.cHb,MaxPoolGrad:()=>yt.RXX,MaxPoolWithArgmax:()=>yt.TL8,Maximum:()=>yt.LDN,Mean:()=>yt.g5A,Min:()=>yt.lNG,Minimum:()=>yt.LG0,MirrorPad:()=>yt.x7F,Mod:()=>yt.BLA,MomentumOptimizer:()=>Be,Multinomial:()=>yt.WT3,Multiply:()=>yt.xu7,Neg:()=>yt.l0G,NonMaxSuppressionV3:()=>yt.SDM,NonMaxSuppressionV4:()=>yt.Zl4,NonMaxSuppressionV5:()=>yt.e0f,NotEqual:()=>yt.ylV,OP_SCOPE_SUFFIX:()=>Zt.BTT,OneHot:()=>yt.urI,OnesLike:()=>yt.LWX,Optimizer:()=>Ae,OptimizerConstructors:()=>Kt,Pack:()=>yt.mM$,PadV2:()=>yt.ODT,Pool:()=>yt.bCz,Pow:()=>yt.pyJ,Prelu:()=>yt.Ncv,Prod:()=>yt.kdj,RMSPropOptimizer:()=>We,RaggedGather:()=>yt.oJ2,RaggedRange:()=>yt.CQC,RaggedTensorToTensor:()=>yt.mH5,Range:()=>yt.Q6t,Rank:()=>Xt.rg,Real:()=>yt.LRy,RealDiv:()=>yt.sDr,Reciprocal:()=>yt.huO,Reduction:()=>Qt.i,Relu:()=>yt.fUj,Relu6:()=>yt.P_L,Reshape:()=>yt.R23,ResizeBilinear:()=>yt.hgw,ResizeBilinearGrad:()=>yt.FCQ,ResizeNearestNeighbor:()=>yt.jOE,ResizeNearestNeighborGrad:()=>yt.XQy,Reverse:()=>yt.D7i,RotateWithOffset:()=>yt.BK4,Round:()=>yt.hVg,Rsqrt:()=>yt.TOR,SGDOptimizer:()=>Pe,ScatterNd:()=>yt.pJc,SearchSorted:()=>yt.uWl,Select:()=>yt.l6P,Selu:()=>yt.u$b,Sigmoid:()=>yt.vI1,Sign:()=>yt.YVe,Sin:()=>yt.hql,Sinh:()=>yt.J3C,Slice:()=>yt.JiE,Softmax:()=>yt.rFG,Softplus:()=>yt.Fin,SpaceToBatchND:()=>yt.A8B,SparseFillEmptyRows:()=>yt.C8s,SparseReshape:()=>yt.BoJ,SparseSegmentMean:()=>yt.L6G,SparseSegmentSum:()=>yt.DvZ,SparseToDense:()=>yt.jgd,SplitV:()=>yt.Blb,Sqrt:()=>yt.dFH,Square:()=>yt.M6A,SquaredDifference:()=>yt.Ddj,StaticRegexReplace:()=>yt.GZp,Step:()=>yt.pnw,StridedSlice:()=>yt.UcO,StringNGrams:()=>yt.YAb,StringSplit:()=>yt.iW0,StringToHashBucketFast:()=>yt.$jE,Sub:()=>yt.PbM,Sum:()=>yt.WuN,Tan:()=>yt.oFs,Tanh:()=>yt.iuW,Tensor:()=>he.qY,TensorBuffer:()=>he.yl,TensorScatterUpdate:()=>yt.X4r,Tile:()=>yt.FAs,TopK:()=>yt.TBb,Transform:()=>yt.dLy,Transpose:()=>yt.wx0,Unique:()=>yt.EwU,Unpack:()=>yt.dXR,UnsortedSegmentSum:()=>yt.pPe,UpperBound:()=>yt.RMm,Variable:()=>he.rT,ZerosLike:()=>yt.xJ3,_FusedMatMul:()=>yt.Dr,abs:()=>Zt.tnl,acos:()=>Zt.HQu,acosh:()=>Zt.FqL,add:()=>Zt.WQq,addN:()=>Zt.QiD,all:()=>Zt.Q7R,any:()=>Zt.bzn,argMax:()=>Zt.FLi,argMin:()=>Zt.XRg,asin:()=>Zt.qRo,asinh:()=>Zt.yHs,atan:()=>Zt.rYl,atan2:()=>Zt.FPz,atanh:()=>Zt.rfv,avgPool:()=>Zt.$jT,avgPool3d:()=>Zt.sub,backend:()=>fe.Hs,backend_util:()=>d,basicLSTMCell:()=>Zt.lZX,batchNorm:()=>Zt.$v7,batchNorm2d:()=>Zt.BFc,batchNorm3d:()=>Zt.kSi,batchNorm4d:()=>Zt.T5N,batchToSpaceND:()=>Zt.GTe,bincount:()=>Zt.HbZ,bitwiseAnd:()=>Zt.vjT,booleanMaskAsync:()=>Zt.ftb,broadcastArgs:()=>Zt.ROE,broadcastTo:()=>Zt.hOW,broadcast_util:()=>gt,browser:()=>o,buffer:()=>Zt.ra8,cast:()=>Zt.wgE,ceil:()=>Zt.mkO,clipByValue:()=>Zt.zQh,clone:()=>Zt.o8B,complex:()=>Zt.faB,concat:()=>Zt.xWs,concat1d:()=>Zt.I1m,concat2d:()=>Zt.RPU,concat3d:()=>Zt.O5O,concat4d:()=>Zt.P1l,conv1d:()=>Zt.kA9,conv2d:()=>Zt.Xtf,conv2dTranspose:()=>Zt.wX9,conv3d:()=>Zt.IPL,conv3dTranspose:()=>Zt.jIJ,copyRegisteredKernels:()=>bt.Cf,cos:()=>Zt.gnS,cosh:()=>Zt.yIG,cosineWindow:()=>Zt._jP,cumprod:()=>Zt.Lp0,cumsum:()=>Zt.rCv,customGrad:()=>we._X,denseBincount:()=>Zt.aOp,deprecationWarn:()=>fe.fL,depthToSpace:()=>Zt.Rj8,depthwiseConv2d:()=>Zt.Gl3,device_util:()=>r,diag:()=>Zt.smy,dilation2d:()=>Zt.X7t,disableDeprecationWarnings:()=>fe.IS,dispose:()=>fe.AS,disposeVariables:()=>fe.rm,div:()=>Zt.y4m,divNoNan:()=>Zt.ek5,dot:()=>Zt.Omf,dropout:()=>Zt.EZY,einsum:()=>Zt._3C,elu:()=>Zt.Pqc,enableDebugMode:()=>fe.gY,enableProdMode:()=>fe.Sm,enclosingPowerOfTwo:()=>Zt.FJY,engine:()=>fe.Hi,ensureShape:()=>Zt.QP2,env:()=>b._K,equal:()=>Zt.LCg,erf:()=>Zt.Y12,euclideanNorm:()=>Zt.p4S,exp:()=>Zt.oNF,expandDims:()=>Zt.UG6,expm1:()=>Zt.IYd,eye:()=>Zt.y5U,fft:()=>Zt.hVP,fill:()=>Zt.GSj,findBackend:()=>fe.go,findBackendFactory:()=>fe.W4,floor:()=>Zt.RIf,floorDiv:()=>Zt.wh_,fused:()=>Zt.cZk,gather:()=>Zt.kgh,gatherND:()=>Zt.SY9,gather_util:()=>l,getBackend:()=>fe.jz,getGradient:()=>bt.vQ,getKernel:()=>bt._5,getKernelsForBackend:()=>bt.Op,grad:()=>we.Dv,grads:()=>we.ok,greater:()=>Zt.rhj,greaterEqual:()=>Zt.DQN,ifft:()=>Zt.KGM,imag:()=>Zt.ngS,image:()=>Zt.Slp,inTopKAsync:()=>Zt.U4u,io:()=>s,irfft:()=>Zt.ggX,isFinite:()=>Zt.MIs,isInf:()=>Zt.EN4,isNaN:()=>Zt.yrW,keep:()=>fe.aC,kernel_impls:()=>h,leakyRelu:()=>Zt.H8d,less:()=>Zt.M7h,lessEqual:()=>Zt.InN,linalg:()=>Zt.mPL,linspace:()=>Zt.mT8,localResponseNormalization:()=>Zt.Kgs,log:()=>Zt.Rm2,log1p:()=>Zt.Kko,logSigmoid:()=>Zt.nqI,logSoftmax:()=>Zt.HPB,logSumExp:()=>Zt.VZ,logicalAnd:()=>Zt.n76,logicalNot:()=>Zt.NSZ,logicalOr:()=>Zt.ztW,logicalXor:()=>Zt.rxB,losses:()=>Zt.YYh,lowerBound:()=>Zt.yzS,matMul:()=>Zt.NoW,math:()=>i,max:()=>Zt.T9B,maxPool:()=>Zt.jgi,maxPool3d:()=>Zt.NYV,maxPoolWithArgmax:()=>Zt.RO,maximum:()=>Zt.PhQ,mean:()=>Zt.i2o,memory:()=>fe.m1,meshgrid:()=>Zt.OYQ,min:()=>Zt.jkA,minimum:()=>Zt.BpO,mirrorPad:()=>Zt.FFZ,mod:()=>Zt.ziu,moments:()=>Zt.Clk,movingAverage:()=>Zt.CRk,mul:()=>Zt.lKK,multiRNNCell:()=>Zt.YDF,multinomial:()=>Zt.OjQ,neg:()=>Zt.HZy,nextFrame:()=>tn,norm:()=>Zt.xbf,notEqual:()=>Zt.Ec,oneHot:()=>Zt.Mw0,ones:()=>Zt.SaS,onesLike:()=>Zt.P61,op:()=>Zt.op,outerProduct:()=>Zt.X4o,pad:()=>Zt.eVF,pad1d:()=>Zt.BZs,pad2d:()=>Zt.grY,pad3d:()=>Zt.XHu,pad4d:()=>Zt.WLX,pool:()=>Zt.dzn,pow:()=>Zt.n7C,prelu:()=>Zt.NsG,print:()=>Zt.yyV,prod:()=>Zt._eU,profile:()=>fe.ME,raggedGather:()=>Zt.whe,raggedRange:()=>Zt.iyU,raggedTensorToTensor:()=>Zt.Q0_,rand:()=>Zt._9M,randomGamma:()=>Zt.pR9,randomNormal:()=>Zt.FE$,randomStandardNormal:()=>Zt.m0H,randomUniform:()=>Zt.YeY,randomUniformInt:()=>Zt.HYA,range:()=>Zt.y17,ready:()=>fe.Gc,real:()=>Zt.xav,reciprocal:()=>Zt.VOZ,registerBackend:()=>fe.gJ,registerGradient:()=>bt.kr,registerKernel:()=>bt.tA,relu:()=>Zt.VVh,relu6:()=>Zt.j__,removeBackend:()=>fe.rE,reshape:()=>Zt.tQQ,reverse:()=>Zt.BEg,reverse1d:()=>Zt.QD2,reverse2d:()=>Zt.LMr,reverse3d:()=>Zt.I2l,reverse4d:()=>Zt.JYU,rfft:()=>Zt.z8$,round:()=>Zt.LIG,rsqrt:()=>Zt.Z$r,scalar:()=>Zt.d_2,scatterND:()=>Zt.NFr,scatter_util:()=>$t,searchSorted:()=>Zt.sZg,selu:()=>Zt.WfX,separableConv2d:()=>Zt.wdz,serialization:()=>a,setBackend:()=>fe.jh,setPlatform:()=>fe.Ok,setdiff1dAsync:()=>Zt.F12,sigmoid:()=>Zt.ry7,sign:()=>Zt._SZ,signal:()=>Zt.vPA,sin:()=>Zt.F8e,sinh:()=>Zt.L0l,slice:()=>Zt.dik,slice1d:()=>Zt.Q$M,slice2d:()=>Zt.zAd,slice3d:()=>Zt.wck,slice4d:()=>Zt.R0O,slice_util:()=>_t,softmax:()=>Zt.Vs9,softplus:()=>Zt.lw0,spaceToBatchND:()=>Zt.eDJ,sparse:()=>Zt.lMo,sparseToDense:()=>Zt.Zhr,spectral:()=>Zt.lOn,split:()=>Zt.lDo,sqrt:()=>Zt.RZD,square:()=>Zt.EwI,squaredDifference:()=>Zt.Pbu,squeeze:()=>Zt.r2V,stack:()=>Zt.t$z,step:()=>Zt.PMw,stridedSlice:()=>Zt.Ym9,string:()=>Zt.YjP,sub:()=>Zt.jbE,sum:()=>Zt.czq,sumOutType:()=>Xt.ch,tan:()=>Zt.Mlm,tanh:()=>Zt.ymU,tensor:()=>Zt.OEK,tensor1d:()=>Zt.tGX,tensor2d:()=>Zt.KtR,tensor3d:()=>Zt.$_$,tensor4d:()=>Zt.g9W,tensor5d:()=>Zt.Lpo,tensor6d:()=>Zt.yxw,tensorScatterUpdate:()=>Zt.NNh,tensor_util:()=>Rt,test_util:()=>u,tidy:()=>fe.DZ,tile:()=>Zt.Vsq,time:()=>fe.kB,topk:()=>Zt.rfw,train:()=>Jt,transpose:()=>Zt.mgz,truncatedNormal:()=>Zt.efE,unique:()=>Zt.AmM,unregisterGradient:()=>bt.rY,unregisterKernel:()=>bt.iP,unsortedSegmentSum:()=>Zt.zAU,unstack:()=>Zt.K$i,upcastType:()=>Xt.Tu,upperBound:()=>Zt.rni,util:()=>Ft,valueAndGrad:()=>we.jY,valueAndGrads:()=>we.mu,variable:()=>Zt.bvq,variableGrads:()=>we.y7,version_core:()=>qt,where:()=>Zt._M9,whereAsync:()=>Zt.YJN,zeros:()=>Zt.Ul9,zerosLike:()=>Zt.POl});var r={};n.r(r),n.d(r,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var a={};n.r(a),n.d(a,{Serializable:()=>Ne,SerializationMap:()=>Ie,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>I.D,browserFiles:()=>He,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>te,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>it,fromMemorySync:()=>ot,getLoadHandlers:()=>N,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>T,getWeightSpecs:()=>x.Xf,http:()=>tt,isHTTPScheme:()=>Je,listModels:()=>J,loadWeights:()=>Xe,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Ze,withSaveHandler:()=>lt,withSaveHandlerSync:()=>ut});var i={};n.r(i),n.d(i,{confusionMatrix:()=>mt});var o={};n.r(o),n.d(o,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>Tt,toPixels:()=>It});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>At});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>Ot,createVideoElement:()=>Ht,encodeStrings:()=>jt,expectArrayBuffersEqual:()=>Gt,expectArraysClose:()=>Mt,expectArraysEqual:()=>Bt,expectNumbersClose:()=>Wt,expectPromiseToFail:()=>Pt,expectValuesInRange:()=>Ut,play:()=>Yt,testEpsilon:()=>zt});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>lr,computeOutShape:()=>or,segOpComputeOptimalWindowSize:()=>ir});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>Tn,ERF_A3:()=>Nn,ERF_A4:()=>In,ERF_A5:()=>Cn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>pn,RowPartitionType:()=>sn,SELU_SCALE:()=>wn.X,SELU_SCALEALPHA:()=>wn.j,applyActivation:()=>ln.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>rn,assignToTypedArray:()=>Dn,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>$t.calculateShapes,checkEinsumDimSizes:()=>Un,checkPadOnDimRoundingMode:()=>on.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>un,complexWithEvenIndex:()=>_n,complexWithOddIndex:()=>Rn,computeConv2DInfo:()=>on.uf,computeConv3DInfo:()=>on.p$,computeDefaultPad:()=>on.G8,computeDilation2DInfo:()=>on.YQ,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>an,computePool2DInfo:()=>on.E6,computePool3DInfo:()=>on.l5,convertConv2DDataFormat:()=>on.$Q,decodeEinsumEquation:()=>Wn,eitherStridesOrDilationsAreOne:()=>on.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>Mn,exponents:()=>On,fromStringArrayToUint8:()=>cr,fromUint8ToStringArray:()=>ur,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Fn,getEinsumComputePath:()=>Gn,getEinsumPermutation:()=>Vn,getFusedBiasGradient:()=>ln.Do,getFusedDyActivation:()=>ln.XB,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>cn,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>qn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Kn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Xn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Jn,getSparseReshapeInputOutputMismatchErrorMessage:()=>tr,getSparseReshapeInputOutputMultipleErrorMessage:()=>er,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Zn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Qn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>sr,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>nr,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>rr,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ar,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>jn,log:()=>En.R,mergeRealAndImagArrays:()=>An,prepareAndValidate:()=>At,prepareSplitSize:()=>Yn,segment_util:()=>c,shouldFuse:()=>ln.zE,slice_util:()=>_t,splitRealAndImagArrays:()=>$n,stridesOrDilationsArePositive:()=>on.qk,tupleValuesAreOne:()=>on.Dh,upcastType:()=>Xt.Tu,validateDefaultValueShape:()=>hn,validateInput:()=>$t.validateInput,validateUpdateShape:()=>$t.validateUpdateShape,warn:()=>En.i});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>dr.c7,nonMaxSuppressionV4Impl:()=>dr.ZS,nonMaxSuppressionV5Impl:()=>dr.ut,whereImpl:()=>hr.Y});var p=n(2164);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5399);const v=(0,b._K)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(285);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),T=e=>w.getSaveHandlers(e),N=(e,t)=>w.getLoadHandlers(e,t);var I=n(7131);const C="tensorflowjs",E="models_store",A="model_info_store";function $(){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore(A,{keyPath:"modelPath"})}class R{constructor(e){if(this.indexedDB=$(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(E,"readonly"),r=t.objectStore(E).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=I.D.join(t.weightData);const r=(0,x.oR)(t),i=a.transaction(A,"readwrite");let o,l,u=i.objectStore(A);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(s){return n(s)}o.onsuccess=()=>{l=a.transaction(E,"readwrite");const o=l.objectStore(E);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(s){return n(s)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=i.objectStore(A);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(c.error)),t.onerror=e=>(a.close(),n(c.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}R.URL_SCHEME="indexeddb://";const F=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(R.URL_SCHEME)?(t=e.slice(R.URL_SCHEME.length),new R(t)):null;var t};w.registerSaveRouter(F),w.registerLoadRouter(F);class D{constructor(){this.indexedDB=$()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>_(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(A,"readonly"),s=a.objectStore(A).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(R.URL_SCHEME)?t.slice(R.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(A,"readwrite"),i=s.objectStore(A),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(E,"readwrite");const r=l.objectStore(E).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var O=n(1426);const M="/",z="tensorflowjs_models",L="info",P="model_topology",B="weight_specs",W="weight_data",V="model_metadata";function U(e){return{info:[z,e,L].join(M),topology:[z,e,P].join(M),weightSpecs:[z,e,B].join(M),weightData:[z,e,W].join(M),modelMetadata:[z,e,V].join(M)}}function G(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function j(e){const t=e.split(M);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(M)}class H{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=U(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=(0,x.oR)(e),s=I.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,x.l3)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw G(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,x.jf)(s),t}}H.URL_SCHEME="localstorage://";const Y=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(H.URL_SCHEME)?(t=e.slice(H.URL_SCHEME.length),new H(t)):null;var t};w.registerSaveRouter(Y),w.registerLoadRouter(Y);class q{constructor(){(0,O.vA)((0,b._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,O.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=z+M,n=M+L;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[j(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=U(e=(t=e).startsWith(H.URL_SCHEME)?t.slice(H.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return G(n),r}}const K="://";class X{constructor(){this.managers={}}static getInstance(){return null==X.instance&&(X.instance=new X),X.instance}static registerManager(e,t){(0,O.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(K)&&(e=e.slice(0,e.indexOf(K))),(0,O.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=X.getInstance();(0,O.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=X.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(X.getInstance().managers)}}function Z(e){if(-1===e.indexOf(K))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${X.getSchemes().join(",")}`);return{scheme:e.split(K)[0],path:e.split(K)[1]}}async function Q(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,O.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=w.getLoadHandlers(e);(0,O.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,O.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=w.getSaveHandlers(t);(0,O.vA)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,O.vA)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=Z(e).scheme,l=Z(e).path,u=o===Z(e).scheme,c=await a.load();n&&u&&await X.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await X.getManager(o).removeModel(l),d.modelArtifactsInfo}async function J(){const e=X.getSchemes(),t={};for(const n of e){const e=await X.getManager(n).listModels();for(const r in e){t[n+K+r]=e[r]}}return t}async function ee(e){const t=Z(e);return X.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return Q(e,t,!1)}async function ne(e,t){return Q(e,t,!0)}var re=n(5767);class ae{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,re.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new ae);try{X.registerManager(H.URL_SCHEME,new q)}catch(fr){}try{X.registerManager(R.URL_SCHEME,new D)}catch(fr){}}const se=()=>n(5817);let ie;class oe{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==ie&&(ie=se()),ie(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new oe);var le=n(259),ue=n(7794),ce=n(9820),de=n(6574),he=n(9494);(0,p.Ye)();const pe={buffer:le.r,cast:ue.w,clone:ce.o,print:de.y};(0,he.Q5)(pe);var fe=n(8046),me=n(7242),ge=n(4974),ye=n(803),be=n(191),ve=n(7738),xe=n(3290),we=n(1839),ke=n(1997);const Se=new Map,Te=new Map;class Ne{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ie{constructor(){this.classNameMap={}}static getMap(){return null==Ie.instance&&(Ie.instance=new Ie),Ie.instance}static register(e){Ie.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,O.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,O.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,O.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Ie.register(e),Se.set(r,e),Te.set(e,r),e}function Ee(e){return Te.has(e)?Te.get(e):e.className}class Ae extends Ne{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,fe.AS)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.y7)(e,t)}dispose(){null!=this.iterations_&&(0,fe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ae,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class $e extends Ae{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(i,this.rho),(0,ye.l)((0,ve.E)(s),1-this.rho)),t=(0,ye.l)((0,ge.y)((0,be.R)((0,me.W)(o,this.epsilon)),(0,be.R)((0,me.W)(i,this.epsilon))),s),n=(0,me.W)((0,ye.l)(o,this.rho),(0,ye.l)((0,ve.E)(t),1-this.rho));i.assign(e),o.assign(n);const a=(0,me.W)((0,ye.l)(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var _e=n(4660);class Re extends Ae{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,fe.DZ)((()=>(0,_e.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)(s,(0,ve.E)(a));s.assign(e);const t=(0,me.W)((0,ye.l)((0,ge.y)(a,(0,be.R)((0,me.W)(e,p.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Fe=n(7587),De=n(7951);class Oe extends Ae{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.DZ)((()=>{this.accBeta1=(0,ke.d)(t).variable(),this.accBeta2=(0,ke.d)(n).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,De.j)(1,this.accBeta1),r=(0,De.j)(1,this.accBeta2);t.forEach(((t,a)=>{const s=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(i)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=(0,me.W)((0,ye.l)(l,this.beta1),(0,ye.l)(o,1-this.beta1)),d=(0,me.W)((0,ye.l)(u,this.beta2),(0,ye.l)((0,ve.E)(o),1-this.beta2)),h=(0,ge.y)(c,n),f=(0,ge.y)(d,r);l.assign(c),u.assign(d);const m=(0,me.W)((0,ye.l)((0,ge.y)(h,(0,me.W)((0,be.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)})),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.DZ)((()=>{this.accBeta1.assign((0,Fe.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Fe.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Me=n(3753),ze=n(2131);class Le extends Ae{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.DZ)((()=>{this.iteration=(0,ke.d)(0).variable(),this.accBeta1=(0,ke.d)(t).variable()})),null==r&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,De.j)(1,this.accBeta1),r=(0,ge.y)(-this.learningRate,(0,me.W)((0,ye.l)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=p.T2.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,xe.P)(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,xe.P)(s).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=(0,me.W)((0,ye.l)(l,this.beta1),(0,ye.l)(o,1-this.beta1)),d=(0,ye.l)(u,this.beta2),h=(0,Me.t)(o),f=(0,ze.P)(d,h);l.assign(c),u.assign(f);const m=(0,me.W)((0,ye.l)((0,ge.y)(r,n),(0,ge.y)(c,(0,me.W)(f,this.epsilon))),s);s.assign(m)})),this.iteration.assign((0,me.W)(this.iteration,1)),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Pe extends Ae{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=p.T2.registeredVariables[t];(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.aC)((0,ke.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Be extends Pe{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.DZ)((()=>{let e;const t=(0,me.W)((0,ye.l)(this.m,a),s);e=this.useNesterov?(0,me.W)((0,ye.l)(this.c,(0,me.W)(s,(0,ye.l)(t,this.m))),r):(0,me.W)((0,ye.l)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class We extends Ae{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=p.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=p.T2.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(i,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,me.W)((0,ye.l)(t,this.decay),(0,ye.l)(s,1-this.decay)),l=(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,De.j)(e,(0,me.W)((0,ve.E)(a),this.epsilon)))),u=(0,me.W)((0,ye.l)(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);const c=(0,De.j)(r,u);r.assign(c)}else{const e=(0,me.W)((0,ye.l)(i,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay)),t=(0,me.W)((0,ye.l)(o,this.momentum),(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,me.W)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,De.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ve=[$e,Re,Oe,Le,Be,We,Pe];function Ue(e){return new Promise((e=>setTimeout(e))).then(e)}class Ge{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ge.URL_SCHEME)&&(e=e.slice(Ge.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=I.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,x.zV)(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Ue((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ue((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.oR)(e)}}}}Ge.URL_SCHEME="downloads://";class je{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=(0,x.Ej)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.P8)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=(0,x.P8)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function He(e){return new je(e)}function Ye(e,t,n,r){!function(e){(0,O.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,O.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,O.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,O.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}w.registerSaveRouter((e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ge.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ge(e)}(e.slice(Ge.URL_SCHEME.length)):null));var qe=n(1042);async function Ke(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ye(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ye(a,t.onProgress,.5,1)}async function Xe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Ze((e=>Ke(e,{requestInit:r})))(e,t,n)}function Ze(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=qe.i[l]*O.Ze(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let h=0;return l.forEach((e=>{const n=t[e].paths.length,r=new I.D(c.slice(h,h+n));s[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.CY)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]})),h+=n})),d}}class Qe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,O.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,O.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,O.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,x.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=I.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:(0,x.oR)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc;let a,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){if(!a){const n=(await r(e[s],t.requestInit,{isBinary:!0})).body;a=n.getReader()}const{done:o,value:l}=await a.read();if(!o)return void n.enqueue(l);s++,a=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.Xf)(e),await Ke(t,this.loadOptions)]}}function Je(e){return null!=e.match(Qe.URL_SCHEME_REGEX)}Qe.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Je(e))):Je(e),n)return tt(e,t)}return null};function tt(e,t){return new Qe(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class rt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class at{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function it(e,t,n,r){return new st(ot(...arguments))}function ot(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new rt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function lt(e){return new at(e)}function ut(e){return new at(e)}var ct=n(4148),dt=n(5162),ht=n(6865),pt=n(7892),ft=n(2154);const mt=(0,pt.op)({confusionMatrix_:function(e,t,n){const r=(0,ct.YT)(e,"labels","confusionMatrix"),a=(0,ct.YT)(t,"predictions","confusionMatrix");O.vA(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),O.vA(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),O.vA(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),O.vA(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),O.vA(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,ht.M)((0,ue.w)(r,"int32"),n),i=(0,ht.M)((0,ue.w)(a,"int32"),n),o=(0,ft.m)(s),l=(0,dt.N)(o,i);return(0,ue.w)(l,"int32")}});var gt=n(8805),yt=n(9554),bt=n(843),vt=n(5395);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,bt._5)(yt.awo,p.T2.backendName)){const n={pixels:e},r={numChannels:t};return p.T2.runKernel(yt.awo,n,r)}const[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(s||a||o){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=l,xt.canvas.height=u,xt.drawImage(e,0,0,l,u),c=xt.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}const h=[u,l,t];return(0,vt.$)(d,h,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function Nt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function It(e,t){let n=(0,ct.YT)(e,"img","toPixels");if(!(e instanceof he.qY)){const e=n;n=(0,ue.w)(e,"int32"),e.dispose()}Nt(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=i[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt._5)(yt.XmO,p.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Ct(e,t,n){let r=(0,ct.YT)(e,"img","draw");if(!(e instanceof he.qY)){const e=r;r=(0,ue.w)(e,"int32"),e.dispose()}Nt(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);const a={image:r},s={canvas:t,options:n};p.T2.runKernel(yt.XmO,a,s)}const Et=(0,pt.op)({fromPixels_:kt});function At(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,O.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=e.shape,l=a.slice();l.pop();let u=1;for(let d=s;d<n;++d)u*=o[d],l.push(o[d]);const c=[...(0,O.Ur)(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}var $t=n(4083),_t=n(4642),Rt=n(8804),Ft=n(8977);const Dt=.001,Ot=.1;function Mt(e,t,n){return null==n&&(n=zt()),Lt(e,t,((e,t)=>Vt(e,t,n)))}function zt(){return 32===p.T2.backend.floatPrecision()?Dt:Ot}function Lt(e,t,n){let r=!0;if(((0,Ft.isTypedArray)(e)||(0,Ft.isTypedArray)(t))&&(r=!1),(0,Ft.isTypedArray)(e)&&(0,Ft.isTypedArray)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ct.MZ)(e),r=(0,ct.MZ)(t);if(!(0,O.r1)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,Ft.isTypedArray)(e)?e:(0,Ft.flatten)(e),s=(0,Ft.isTypedArray)(t)?t:(0,Ft.flatten)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){const e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!==typeof expect&&expect().nothing()}function Pt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,O.Kg)(e)||(0,O.Kg)(e[0])||(0,O.Kg)(t)||(0,O.Kg)(t[0])?Lt(e,n,((e,t)=>e==t)):Lt(e,t,((e,t)=>Vt(e,t,0)))}function Wt(e,t,n){if(null==n&&(n=zt()),!Vt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!==typeof expect&&expect().nothing()}function Vt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ut(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Gt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function jt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?jt(n):e[t]=(0,Ft.encodeString)(n)}return e}function Ht(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const qt="4.21.0";class Kt{static sgd(e){return new Pe(e)}static momentum(e,t){return new Be(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new We(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Oe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new $e(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Le(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Re(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Xt=n(8075),Zt=n(9249),Qt=n(1667);const Jt=Kt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(9235);function rn(e,t){const n=e[0].length;e.forEach(((e,t)=>{O.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),O.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)O.vA(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function an(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var sn,on=n(7538),ln=n(7905);function un(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function cn(e){const t={FIRST_DIM_SIZE:sn.FIRST_DIM_SIZE,VALUE_ROWIDS:sn.VALUE_ROWIDS,ROW_LENGTHS:sn.ROW_LENGTHS,ROW_SPLITS:sn.ROW_SPLITS,ROW_LIMITS:sn.ROW_LIMITS,ROW_STARTS:sn.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function dn(e){return 0===e.length?0:e[0]===sn.FIRST_DIM_SIZE?e.length-1:e.length}function hn(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(sn||(sn={}));const pn=30;function fn(e){return e<=pn?e:(0,O.lK)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function bn(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function vn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function xn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var wn=n(3765);const kn=.3275911,Sn=.254829592,Tn=-.284496736,Nn=1.421413741,In=-1.453152027,Cn=1.061405429;var En=n(4124);function An(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function $n(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _n(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Rn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Fn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Dn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function On(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Mn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const zn="->",Ln=/->/g,Pn=",",Bn="...";function Wn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ln,"").length)/zn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${zn}").`);const[r,a]=e.split(zn);(0,O.vA)(-1===r.indexOf(Bn),(()=>`The ellipsis notation ("${Bn}") is not supported yet.`));const s=r.split(Pn),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&e!==Pn&&o.push(e)}const l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(o.indexOf(s[d][e]))}const u=o.length,c=[];for(let d=a.length;d<u;++d)c.push(d);return{allDims:o,summedDims:c,idDims:l}}function Vn(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Un(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:(0,O.vA)(r[t[a][n]]===e[n],(()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Gn(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const e=Hn(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function jn(e){return e.every(((e,t)=>e===t))}function Hn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Yn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)(0,O.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,O.vA)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,O.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function qn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Kn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Xn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Zn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Qn(e,t){return`size ${e} must be non-negative, not ${t}`}function Jn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function er(e,t){return`Input to reshape is a SparseTensor with ${(0,O.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,O.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function tr(e,t){return`Input to reshape is a tensor with ${(0,O.Ze)(e)} dense values, but the requested shape has ${(0,O.Ze)(t)}. inputShape=${e} outputShape=${t}`}function nr(){return"segment ids must be >= 0"}function rr(){return"segment ids are not increasing"}function ar(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function sr(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ir(e,t){let n,r=!1;for(e<=pn?(n=e,r=!0):n=(0,O.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,O.lK)(e,n+1);return n}function or(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function lr(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let d=0;d<r;++d)o.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),c*=e.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function ur(e){try{return e.map((e=>(0,Ft.decodeString)(e)))}catch(fr){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${fr}`)}}function cr(e){return e.map((e=>(0,Ft.encodeString)(e)))}var dr=n(6692),hr=n(9286),pr=n(6790);!function(){for(const e of Ve)Ce(e)}()},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>a});var r=n(8977);class a{static join(e){return new a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(a.set(u,o),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>h,Ej:()=>C,P8:()=>T,Rl:()=>I,Xf:()=>A,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>E,s5:()=>y,zV:()=>N});var r=n(6149),a=n(8032),s=n(1426),i=n(1042),o=n(7131),l=n(8046),u=n(5399);const c=4;async function d(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+c*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=c,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:b(await Promise.all(r)),specs:n}}function h(e,t){const n=new o.D(e),r={};let a=0;for(const s of t){const e=p(s,((e,t)=>n.slice(a+e,a+t)));r[s.name]=m(s,n.slice(a,a+e)),a+=e}return r}function p(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}async function f(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=i.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(await t(e,e+c))[0];return e}r=i.i[e.dtype]}return n*r}function m(e,t){const n=e.name,o=e.dtype,l=e.shape,u=(0,s.Ze)(l);let d,h=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const a=i.i[r.dtype],s="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}();d=e(s)}}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${n}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*r.scale+r.min)}}h+=u*a}else if("string"===o){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+c))[0];h+=c;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=i.i[o];if("float32"===o)d=new Float32Array(t);else if("int32"===o)d=new Int32Array(t);else{if("bool"!==o){if("complex64"===o){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,a.O)(e,l,"float32"),i=(0,a.O)(n,l,"float32"),o=(0,r.f)(s,i);return s.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${o}`)}d=new Uint8Array(t)}h+=u*e}return(0,a.O)(d,l,o)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:a}=await e.read();if(t&&null==a){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function y(e,t){const n={},r=e.getReader();let a=new ArrayBuffer(0);for(const i of t){const e=await f(i,(async(e,t)=>(a=await g(r,a,t),a.slice(e,t))));a=await g(r,a,e);const t=a.slice(0,e);a=a.slice(e);const o=m(i,t);if(n[i.name]=o,"webgpu"===(0,l.jz)()){const e=(0,l.Hs)();"uploadToGPU"in e&&(0,s.Ze)(o.shape)>=(0,u._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function b(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function S(e){return o.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function C(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),I(e,n,r)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.D(e.weightData).byteLength}}function A(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>R,$jE:()=>nn,$zE:()=>_,A1h:()=>M,A8B:()=>Vt,BK4:()=>bn,BLA:()=>Ze,BRl:()=>se,Blb:()=>Ut,BoJ:()=>Ht,BxF:()=>de,C8s:()=>jt,CQC:()=>ft,Cg$:()=>$e,CwD:()=>Ce,D7i:()=>It,Ddj:()=>Xt,Dr:()=>vn,DvZ:()=>qt,E3$:()=>Se,EkD:()=>o,ElG:()=>pe,EwU:()=>dn,FAs:()=>on,FCQ:()=>Tt,FSt:()=>u,Fin:()=>Pt,GZp:()=>Qt,HNs:()=>T,Ik2:()=>k,J3C:()=>Mt,JiE:()=>Dt,Jp_:()=>c,KXH:()=>C,L6G:()=>Yt,LB5:()=>N,LDN:()=>We,LG0:()=>Ke,LRy:()=>yt,LWX:()=>st,LXA:()=>Fe,M6A:()=>Zt,MRQ:()=>U,Mn0:()=>P,MnK:()=>B,N4F:()=>S,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>xe,ODT:()=>lt,OMN:()=>i,ORI:()=>K,PH8:()=>s,P_L:()=>Nt,Pah:()=>ne,PbM:()=>rn,Q6t:()=>gt,QDP:()=>E,QKF:()=>h,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>_e,RW8:()=>De,RXX:()=>Ue,SDM:()=>nt,SQl:()=>ce,T7M:()=>wn,TBb:()=>ln,TL8:()=>He,TMz:()=>j,TOR:()=>Et,ToN:()=>Le,TyE:()=>f,UcO:()=>Jt,VAI:()=>Be,VCH:()=>b,Vvy:()=>a,WRv:()=>Pe,WT3:()=>Qe,WuN:()=>Wt,X$8:()=>Y,X0$:()=>Ne,X4r:()=>$t,XQy:()=>kt,XhZ:()=>ye,XmO:()=>J,YAb:()=>en,YVe:()=>zt,ZgB:()=>he,Zl4:()=>rt,_s9:()=>ae,aAr:()=>xn,awo:()=>yn,bCz:()=>ut,bP9:()=>Z,cHb:()=>je,cS:()=>v,dFH:()=>Bt,dLy:()=>un,dXR:()=>hn,dv8:()=>we,e0f:()=>at,epO:()=>p,fUj:()=>vt,g5A:()=>Ye,gC7:()=>L,gIW:()=>ke,hVg:()=>Ct,hgw:()=>St,ho8:()=>y,hql:()=>Ot,huO:()=>bt,i5R:()=>fe,iGz:()=>z,iPs:()=>Te,iW0:()=>tn,iuW:()=>sn,jAQ:()=>w,jM4:()=>ze,jOE:()=>wt,jfg:()=>O,jgd:()=>Kt,jj_:()=>W,jxD:()=>X,kdj:()=>ht,l0G:()=>et,l6P:()=>Rt,lLS:()=>be,lNG:()=>qe,ljI:()=>r,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Ie,mM$:()=>ot,mnI:()=>Ee,mxL:()=>me,nVu:()=>q,nY8:()=>V,nZd:()=>Re,oFs:()=>an,oJ2:()=>pt,ox3:()=>ie,p2J:()=>F,pJc:()=>At,pPe:()=>pn,p_m:()=>d,pk0:()=>Q,pnw:()=>gn,pr3:()=>$,pyJ:()=>ct,rFG:()=>Gt,rFm:()=>D,rGP:()=>ue,rsH:()=>re,sDr:()=>ee,t3d:()=>Ve,tG8:()=>Ae,tGH:()=>H,u$b:()=>Ft,u8Z:()=>l,uWl:()=>_t,urI:()=>it,vI1:()=>Lt,vaV:()=>A,vj7:()=>I,wNW:()=>G,wwC:()=>x,wx0:()=>cn,x7F:()=>Xe,xJ3:()=>mn,xu7:()=>Je,yPW:()=>Me,ySp:()=>Ge,ybN:()=>oe,ybj:()=>le,ylV:()=>tt,zP9:()=>m,zfU:()=>Oe});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BitwiseAnd",N="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",$="Complex",_="ComplexAbs",R="Concat",F="Conv2D",D="Conv2DBackpropFilter",O="Conv2DBackpropInput",M="Conv3D",z="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",P="Cos",B="Cosh",W="Cumprod",V="Cumsum",U="CropAndResize",G="DenseBincount",j="DepthToSpace",H="DepthwiseConv2dNative",Y="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",X="Dilation2D",Z="Dilation2DBackpropInput",Q="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",ae="Erf",se="Equal",ie="Exp",oe="ExpandDims",le="Expm1",ue="FFT",ce="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Te="IsNan",Ne="LeakyRelu",Ie="Less",Ce="LessEqual",Ee="LinSpace",Ae="Log",$e="Log1p",_e="LogicalAnd",Re="LogicalNot",Fe="LogicalOr",De="LogicalXor",Oe="LogSoftmax",Me="LowerBound",ze="LRN",Le="LRNGrad",Pe="MatrixBandPart",Be="Max",We="Maximum",Ve="MaxPool",Ue="MaxPoolGrad",Ge="MaxPool3D",je="MaxPool3DGrad",He="MaxPoolWithArgmax",Ye="Mean",qe="Min",Ke="Minimum",Xe="MirrorPad",Ze="Mod",Qe="Multinomial",Je="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",rt="NonMaxSuppressionV4",at="NonMaxSuppressionV5",st="OnesLike",it="OneHot",ot="Pack",lt="PadV2",ut="Pool",ct="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",Tt="ResizeBilinearGrad",Nt="Relu6",It="Reverse",Ct="Round",Et="Rsqrt",At="ScatterNd",$t="TensorScatterUpdate",_t="SearchSorted",Rt="Select",Ft="Selu",Dt="Slice",Ot="Sin",Mt="Sinh",zt="Sign",Lt="Sigmoid",Pt="Softplus",Bt="Sqrt",Wt="Sum",Vt="SpaceToBatchND",Ut="SplitV",Gt="Softmax",jt="SparseFillEmptyRows",Ht="SparseReshape",Yt="SparseSegmentMean",qt="SparseSegmentSum",Kt="SparseToDense",Xt="SquaredDifference",Zt="Square",Qt="StaticRegexReplace",Jt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",rn="Sub",an="Tan",sn="Tanh",on="Tile",ln="TopK",un="Transform",cn="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>c,_5:()=>l,iP:()=>p,kr:()=>h,rY:()=>f,tA:()=>d,vQ:()=>u});var r=n(5399),a=n(7926),s=n(4124);const i=(0,a.m)("kernelRegistry",(()=>new Map)),o=(0,a.m)("gradRegistry",(()=>new Map));function l(e,t){const n=g(e,t);return i.get(n)}function u(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=g(t,n);i.has(r)&&s.i(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function h(e){const{kernelName:t}=e;o.has(t)&&(0,r._K)().getBool("DEBUG")&&s.i(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>a});var r=n(5399);function a(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...arguments)}function s(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...arguments)}},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(a.$zE,e)}{const e={x:t};return r.T2.runKernel(a.ljI,e)}}})},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({acos_:function(e){const t={x:(0,s.YT)(e,"x","acos")};return r.T2.runKernel(a.Vvy,t)}})},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({acosh_:function(e){const t={x:(0,s.YT)(e,"x","acosh")};return r.T2.runKernel(a.PH8,t)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({add_:function(e,t){let n=(0,i.YT)(e,"a","add"),o=(0,i.YT)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.OMN,l)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,s.YT)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(a.u8Z,i,o)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,s.YT)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.T2.runKernel(a.FSt,i,o)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMax")},i={axis:t};return r.T2.runKernel(a.Jp_,n,i)}})},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMin")},i={axis:t};return r.T2.runKernel(a.p_m,n,i)}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({asin_:function(e){const t={x:(0,s.YT)(e,"x","asin")};return r.T2.runKernel(a.QKF,t)}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({asinh_:function(e){const t={x:(0,s.YT)(e,"x","asinh")};return r.T2.runKernel(a.epO,t)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({atan_:function(e){const t={x:(0,s.YT)(e,"x","atan")};return r.T2.runKernel(a.TyE,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({atan2_:function(e,t){let n=(0,i.YT)(e,"a","atan2"),o=(0,i.YT)(t,"b","atan2");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.lxb,l)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({atanh_:function(e){const t={x:(0,s.YT)(e,"x","atanh")};return r.T2.runKernel(a.zP9,t)}})},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7794),l=n(7538),u=n(7892),c=n(5583);const d=(0,u.op)({avgPool_:function(e,t,n,u,d){const h=(0,s.YT)(e,"x","avgPool","float32");i.vA(l.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.vA(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),l.s_("avgPool",u,d);const m={x:p},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let y=r.T2.runKernel(a.ho8,m,g);return y=(0,o.w)(y,h.dtype),f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>u,SM:()=>o,WC:()=>l,WH:()=>a,aF:()=>s,fK:()=>d,gx:()=>c,lb:()=>i});var r=n(1426);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function l(e,t,n){r.vA(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const o=(0,s.YT)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));i.vA(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.vA(o.shape[0]%l===0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:o},c={blockShape:t,crops:n};return r.T2.runKernel(a.Ik2,u,c)}})},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(5583);const l=(0,n(7892).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const d=(0,s.YT)(e,"x","batchNorm"),h=(0,s.YT)(t,"mean","batchNorm"),p=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=u&&(f=(0,s.YT)(u,"scale","batchNorm")),null!=l&&(m=(0,s.YT)(l,"offset","batchNorm")),i.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.vA(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.t)(e,[1,1,1,e.size]):2===e.rank?(0,o.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},y={varianceEpsilon:c},b=r.T2.runKernel(a.i5R,g,y);return(0,o.t)(b,d.shape)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(9820),l=n(7892),u=n(5583);const c=(0,l.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const l=n.shape;if((0,i.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.t)(n,e)}const c=n.shape,d=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])d[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${l}] cannot be broadcast to [${t}].`);if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.o)(n);const h={x:n},p={reps:d};return r.T2.runKernel(a.FAs,h,p)}})},8805:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=s}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>r,getReductionAxes:()=>a})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var r=n(9494),a=n(1426);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",a.SA(e),new r.yl(e,t,n)}},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!i.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return r.T2.runKernel(a.KXH,o,l)}})},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({ceil_:function(e){const t={x:(0,s.YT)(e,"x","ceil","float32")};return r.T2.runKernel(a.QDP,t)}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(4660);const l=(0,n(7892).op)({clipByValue_:function(e,t,n){const l=(0,s.YT)(e,"x","clipByValue");if(i.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.G)(l.shape,t,l.dtype);const u={x:l},c={clipValueMin:t,clipValueMax:n};return r.T2.runKernel(a.vaV,u,c)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(a.lzr,t)}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),o=(0,s.YT)(t,"imag","complex");i.O3(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return r.T2.runKernel(a.pr3,l)}})},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>l});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(9820);const l=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,i.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.o)(n[0]);const l=n,u={axis:t};return r.T2.runKernel(a.$dB,l,u)}})},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>u});var r=n(4148),a=n(1426),s=n(4969),i=n(7538),o=n(7892),l=n(5583);const u=(0,o.op)({conv1d_:function(e,t,n,o){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,r.YT)(e,"x","conv1d"),p=(0,r.YT)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,l.t)(h,[1,h.shape[0],h.shape[1]])),a.vA(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.vA(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),i.s_("conv1d",o,d),a.vA(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),a.vA(i.G0(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.vA(i.qk(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),a.vA(i.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),a.vA("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,l.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,c],x=(0,s.X)(y,g,b,o,"NHWC",v,d);return m?(0,l.t)(x,[x.shape[2],x.shape[3]]):(0,l.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>c});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({conv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.vA(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.s_("conv2d",l,h);const y="NHWC"===c?m.shape[3]:m.shape[1];i.vA(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.vA(o.G0(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.vA(o.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.vA(o.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h},x=r.T2.runKernel(a.p2J,b,v);return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>u});var r=n(2164),a=n(9554),s=n(1426),i=n(7538),o=n(7892),l=n(5583);const u=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,l.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),s.vA(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?h.shape[3]:h.shape[1],m="NHWC"===c?p.shape[3]:p.shape[1];s.vA(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),s.vA(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.s_("conv2dDerFilter",u,d);const g={x:h,dy:p},y={strides:o,pad:u,dataFormat:c,dimRoundingMode:d,filterShape:n};return r.T2.runKernel(a.rFm,g,y)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(2164),a=n(9554),s=n(1426),i=n(7538),o=n(7892),l=n(5583);const u=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.vA(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),s.vA(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?h[3]:h[1],g="NHWC"===c?p.shape[3]:p.shape[1];s.vA(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.vA(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.s_("conv2dDerInput",u,d);const y={dy:p,filter:n},b={strides:o,pad:u,dataFormat:c,dimRoundingMode:d,inputShape:h},v=r.T2.runKernel(a.jfg,y,b);return f?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(4148),a=n(1565);const s=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,s,i,o){const l=(0,r.YT)(e,"x","conv2dTranspose"),u=(0,r.YT)(t,"filter","conv2dTranspose");return(0,a.v)(n,l,u,s,i,"NHWC",o)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>l});var r=n(2164),a=n(9554),s=n(1426),i=n(7892),o=n(5583);const l=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,l){s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const h=u[4],p=c.shape[4];s.vA(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),s.vA(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.vA(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.vA(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:i,inputShape:u},g=r.T2.runKernel(a.gC7,f,m);return d?(0,o.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>u,YQ:()=>a,l5:()=>i,p$:()=>l,qk:()=>g,s_:()=>b,uf:()=>o});var r=n(1426);function a(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return o(e,[...t,e[3]],n,s,r,null,null,y(a))}function s(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[l,u]=c(t);let d;if("channelsLast"===i)d=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);d=[l,u,e[1],e[1]]}return o(e,d,n,r,a,s,!1,i)}function i(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,u,c]=d(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,u,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[o,u,c,e[1],e[1]]}return l(e,h,n,r,a,!1,p,s)}function o(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,d,f]=e}const[g,y,,b]=t,[v,x]=c(n),[w,k]=c(r),S=h(g,w),T=h(y,k),{padInfo:N,outHeight:I,outWidth:C}=function(e,t,n,r,a,s,i,o,l){let c,d,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[0],i=e[1],o=p((s-t+2*r)/n+1,a),l=p((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+u+f)/r+1,o),h=p((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:d,outWidth:h}}(a,d,f,v,x,S,T,s,o),E=i?b*m:b;let A;return"channelsFirst"===o?A=[l,E,I,C]:"channelsLast"===o&&(A=[l,I,C,E]),{batchSize:l,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:I,outWidth:C,outChannels:E,padInfo:N,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function l(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,c,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[T,N,I]=d(r),C=h(y,T),E=h(b,N),A=h(v,I),{padInfo:$,outDepth:_,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,i,o,l,c,d){let h,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,a,s){null==a&&(a=u(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=p((e[o]-t[o]+2*a)/r[o]+1,s));return i}([t,n,r,1],[o,l,c],1,[a,s,i],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+l-n,d=(g-1)*i+c-r,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),v=u-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:p,back:y,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(a,c,f,m,w,k,S,C,E,A,o),D=s?x*g:x;let O;return"channelsFirst"===i?O=[l,D,_,R,F]:"channelsLast"===i&&(O=[l,_,R,F,D]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:R,outWidth:F,outChannels:D,padInfo:$,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:T,dilationHeight:N,dilationWidth:I,inShape:e,outShape:O,filterShape:t}}function u(e,t,n){const r=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({cos_:function(e){const t={x:(0,s.YT)(e,"x","cos","float32")};return r.T2.runKernel(a.Mn0,t)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({cosh_:function(e){const t={x:(0,s.YT)(e,"x","cosh","float32")};return r.T2.runKernel(a.MnK,t)}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o={x:(0,s.YT)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:i};return r.T2.runKernel(a.jj_,o,l)}})},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o={x:(0,s.YT)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:i};return r.T2.runKernel(a.nY8,o,l)}})},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const o=(0,s.YT)(e,"x","depthToSpace","float32"),l="NHWC"===n?o.shape[1]:o.shape[2],u="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.vA(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.vA(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.vA(c%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const d={x:o},h={blockSize:t,dataFormat:n};return r.T2.runKernel(a.TMz,d,h)}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>c});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({depthwiseConv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.vA(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.vA(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.vA(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.s_("depthwiseConv2d",l,h);const b={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h},x=r.T2.runKernel(a.tGH,b,v);return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(2164),a=n(9554),s=n(7892),i=n(5583);const o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=e;3===e.rank&&(c=(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:c,dy:d},p={strides:s,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return r.T2.runKernel(a.X$8,h,p)}})},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2164),a=n(9554),s=n(7892),i=n(5583);const o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=t,d=!1;3===t.rank&&(d=!0,c=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:c,filter:n},p={strides:s,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},f=r.T2.runKernel(a.nVu,h,p);return d?(0,i.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7892),l=n(5583);const u=(0,o.op)({dilation2d_:function(e,t,n,o){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s.YT)(e,"x","dilation2d"),h=(0,s.YT)(t,"filter","dilation2d");i.vA(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.vA(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.vA("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let p=d,f=!1;3===d.rank&&(p=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),i.vA(p.shape[3]===h.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${p.shape[3]} vs ${h.shape[2]}`));const m={x:p,filter:h},g={strides:n,pad:o,dilations:u},y=r.T2.runKernel(a.jxD,m,g);return f?(0,l.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(3612);const l=(0,n(7892).op)({div_:function(e,t){let n=(0,i.YT)(e,"a","div"),l=(0,i.YT)(t,"b","div");if([n,l]=(0,s.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.w)(n,l);const u={a:n,b:l};return r.T2.runKernel(a.sDr,u,{})}})},44:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(8804),a=n(4148),s=n(4974),i=n(7457),o=n(7892),l=n(3986),u=n(3290);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,a.YT)(e,"a","div"),o=(0,a.YT)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,s.y)(n,o),d=(0,u.P)(c),h=(0,i.L)(o,d);return(0,l._)(h,d,c)}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>l});var r=n(4148),a=n(1426),s=n(5162),i=n(7892),o=n(5583);const l=(0,i.op)({dot_:function(e,t){const n=(0,r.YT)(e,"t1","dot"),i=(0,r.YT)(t,"t2","dot");a.vA((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===i.rank?i.size:i.shape[0];if(a.vA(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===i.rank){const e=(0,o.t)(n,[1,-1]),t=(0,o.t)(i,[-1,1]),r=(0,s.N)(e,t);return(0,o.t)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.t)(n,[1,-1]),t=(0,o.t)(i,[i.shape[0],i.shape[1]]),r=(0,s.N)(e,t);return(0,o.t)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.t)(i,[-1,1]),t=(0,s.N)(n,e);return(0,o.t)(t,[t.size])}{const e=(0,o.t)(i,[i.shape[0],i.shape[1]]);return(0,s.N)(n,e)}}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return r.T2.runKernel(a.Pah,t)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({equal_:function(e,t){let n=(0,i.YT)(e,"a","equal","string_or_numeric"),l=(0,i.YT)(t,"b","equal","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.BRl,u)}})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7794);const l=(0,n(7892).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");i.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.w)(t,"float32"));const n={x:t};return r.T2.runKernel(a._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(2155);const a=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,r.x)(e,"euclidean",t,n)}})},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return r.T2.runKernel(a.ox3,t)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");i.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return r.T2.runKernel(a.ybN,o,l)}})},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({expm1_:function(e){const t={x:(0,s.YT)(e,"x","expm1")};return r.T2.runKernel(a.ybj,t)}})},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(2164),a=n(9554),s=n(1426);function i(e,t,n){(0,s.SA)(e);const i={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return r.T2.runKernel(a.SQl,{},i)}},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return r.T2.runKernel(a.ZgB,t)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,i.YT)(e,"a","floorDiv"),o=(0,i.YT)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.ElG,l)}})},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var r=n(8805),a=n(3645),s=n(8076),i=n(803),o=n(9855),l=n(5251),u=n(9721),c=n(5583),d=n(4213),h=n(319),p=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.l)(e,(0,h.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,p.c)(n,a)),(0,c.t)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.V)(e);if("elu"===t)return(0,a.P)(e);if("relu6"===t)return(0,u.j)(e);if("prelu"===t)return(0,o.N)(e,n);if("leakyrelu"===t)return(0,s.H)(e,r);if("sigmoid"===t)return(0,d.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const o={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},l={axis:n,batchDims:i};return r.T2.runKernel(a.mxL,o,l)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({greater_:function(e,t){let n=(0,i.YT)(e,"a","greater","string_or_numeric"),l=(0,i.YT)(t,"b","greater","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.XhZ,u)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,i.YT)(e,"a","greaterEqual","string_or_numeric"),l=(0,i.YT)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.lLS,u)}})},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return r.T2.runKernel(a.dv8,t)}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7892),l=n(5583);const u=(0,o.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,s.YT)(e,"images","resizeBilinear");i.vA(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.vA(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.T2.runKernel(a.hgw,h,p);return d?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7892),l=n(5583);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,s.YT)(e,"images","resizeNearestNeighbor");i.vA(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.vA("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.vA(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.T2.runKernel(a.jOE,h,p);return d?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,s.YT)(e,"x","isFinite")};return r.T2.runKernel(a.gIW,t)}})},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({isInf_:function(e){const t={x:(0,s.YT)(e,"x","isInf")};return r.T2.runKernel(a.E3$,t)}})},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,s.YT)(e,"x","isNaN")};return r.T2.runKernel(a.iPs,t)}})},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s.YT)(e,"x","leakyRelu")},i={alpha:t};return r.T2.runKernel(a.X0$,n,i)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({less_:function(e,t){let n=(0,i.YT)(e,"a","less","string_or_numeric"),l=(0,i.YT)(t,"b","less","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.mIA,u)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,i.YT)(e,"a","lessEqual","string_or_numeric"),l=(0,i.YT)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.CwD,u)}})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>u});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7892),l=n(5583);const u=(0,o.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const c=(0,s.YT)(e,"x","localResponseNormalization");i.vA(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.vA(i.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=c,h=!1;3===c.rank&&(h=!0,d=(0,l.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:o,beta:u},m=r.T2.runKernel(a.jM4,p,f);return h?(0,l.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return r.T2.runKernel(a.tG8,t)}})},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return r.T2.runKernel(a.Cg$,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>c});var r=n(1839),a=n(4148),s=n(803),i=n(1011),o=n(7892),l=n(4213),u=n(9973);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,a.YT)(e,"x","logSigmoid");return(0,r._X)((e=>({value:(0,i.H)((0,u.l)((0,i.H)(e))),gradFunc:t=>(0,s.l)(t,(0,l.r)((0,i.H)(e)))})))(t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var r=n(1839),a=n(4148),s=n(7794),i=n(5462),o=n(5911),l=n(891),u=n(803),c=n(7892),d=n(7951),h=n(7382);const p=(0,c.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,a.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r._X)(((e,n)=>{const r=(0,l.T)(e,t,!0),a=(0,d.j)(e,r),c=(0,d.j)((0,s.w)(a,"float32"),(0,o.R)((0,h.c)((0,i.o)(a),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.o)(r);return(0,d.j)(e,(0,u.l)((0,h.c)(e,t,!0),a))}}}))(n)}})},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var r=n(4148),a=n(1426),s=n(7242),i=n(9235),o=n(5462),l=n(5911),u=n(891),c=n(7892),d=n(5583),h=n(7951),p=n(7382);const f=(0,c.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const c=(0,r.YT)(e,"x","logSumExp"),f=(0,a.Y6)(t,c.shape),m=(0,u.T)(c,f,!0),g=(0,h.j)(c,m),y=(0,o.o)(g),b=(0,p.c)(y,f),v=(0,l.R)(b),x=(0,s.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,i.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(8805);const o=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),o=(0,s.YT)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.T2.runKernel(a.RUm,l)}})},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,s.YT)(e,"x","logicalNot","bool")};return r.T2.runKernel(a.nZd,t)}})},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(8805);const o=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,s.YT)(e,"a","logicalOr","bool"),o=(0,s.YT)(t,"b","logicalOr","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.T2.runKernel(a.LXA,l)}})},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(4148),a=n(8805),s=n(5692),i=n(5344),o=n(7920);const l=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,r.YT)(e,"a","logicalXor","bool"),l=(0,r.YT)(t,"b","logicalXor","bool");return(0,a.assertAndGetBroadcastShape)(n.shape,l.shape),(0,s.n)((0,o.z)(e,t),(0,i.N)((0,s.n)(e,t)))}})},1667:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],l=(0,i.YT)(e,"a","matMul"),u=(0,i.YT)(t,"b","matMul");[l,u]=(0,s.makeTypesMatch)(l,u);const c={a:l,b:u},d={transposeA:n,transposeB:o};return r.T2.runKernel(a.jAQ,c,d)}})},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,s.YT)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.T2.runKernel(a.VAI,i,o)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>c});var r=n(2164),a=n(9554),s=n(4148),i=n(1426),o=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const d=(0,s.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,u.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.vA(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.vA(o.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.s_("maxPool",l,c);const f={x:h},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=r.T2.runKernel(a.t3d,f,m);return p?(0,u.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805),l=n(7794);const u=(0,n(7892).op)({maximum_:function(e,t){let n=(0,i.YT)(e,"a","maximum"),u=(0,i.YT)(t,"b","maximum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(a.LDN,c)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,s.YT)(e,"x","mean")},o={axis:t,keepDims:n};return r.T2.runKernel(a.g5A,i,o)}})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i={x:(0,s.YT)(e,"x","min")},o={axis:t,keepDims:n};return r.T2.runKernel(a.lNG,i,o)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805),l=n(7794);const u=(0,n(7892).op)({minimum_:function(e,t){let n=(0,i.YT)(e,"a","minimum"),u=(0,i.YT)(t,"b","minimum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(a.LG0,c)}})},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({mirrorPad_:function(e,t,n){i.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,s.YT)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.vA(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.vA(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.vA(t[r][0]>=0&&t[r][0]<=o.shape[r]-l&&t[r][1]>=0&&t[r][1]<=o.shape[r]-l,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-l} or less than 0 for input of shape ${o.shape}`));const u={paddings:t,mode:n},c={x:o};return r.T2.runKernel(a.x7F,c,u)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({mod_:function(e,t){let n=(0,i.YT)(e,"a","mod"),o=(0,i.YT)(t,"b","mod");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.BLA,l)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({mul_:function(e,t){let n=(0,i.YT)(e,"a","mul"),o=(0,i.YT)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.xu7,l)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return r.T2.runKernel(a.l0G,t)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var r=n(4148),a=n(1426),s=n(3753),i=n(9235),o=n(891),l=n(1465),u=n(7892),c=n(7587),d=n(5583),h=n(1997),p=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,o.T)((0,s.t)(e),n);if(t===-1/0)return(0,l.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,m.c)((0,c.n)((0,s.t)(e),(0,h.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,l.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,m.c)((0,f.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,u.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=g(e=(0,r.YT)(e,"x","norm"),t,n);let l=o.shape;if(s){const t=(0,a.Y6)(n,e.shape);l=i.SM(o.shape,t)}return(0,d.t)(o,l)}})},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,i.YT)(e,"a","notEqual","string_or_numeric"),l=(0,i.YT)(t,"b","notEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.ylV,u)}})},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,s.YT)(e,"indices","oneHot","int32")},u={dtype:o,depth:t,onValue:n,offValue:i};return r.T2.runKernel(a.urI,l,u)}})},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(2164),a=n(1426),s=n(6149),i=n(4218);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,a.SA)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,a.FZ)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return r.T2.runKernel(a.LWX,t)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>s,op:()=>i});var r=n(2164),a=n(1426);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=function(){r.T2.startScope(n);try{const e=i(...arguments);return(0,a.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(e),e}catch(e){throw r.T2.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},9249:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>h.B,tnl:()=>a.t,HQu:()=>s.H,FqL:()=>i.F,WQq:()=>o.W,QiD:()=>p,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>w.F,rfv:()=>k.r,$jT:()=>S.$,sub:()=>C,lZX:()=>D,$v7:()=>M.$,BFc:()=>z,kSi:()=>L,T5N:()=>P,GTe:()=>O.G,HbZ:()=>B,vjT:()=>W,ftb:()=>nr,ROE:()=>V,hOW:()=>U.h,ra8:()=>G.r,wgE:()=>T.w,mkO:()=>j.m,zQh:()=>H.z,o8B:()=>Y.o,faB:()=>q.f,xWs:()=>E.x,I1m:()=>K,RPU:()=>X,O5O:()=>Z,P1l:()=>Q,kA9:()=>J.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>ae,gnS:()=>se.g,yIG:()=>ie.y,_jP:()=>hr,Lp0:()=>oe.L,rCv:()=>le.r,aOp:()=>ue,Rj8:()=>ce.R,Gl3:()=>de.G,smy:()=>he,X7t:()=>pe.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>cr,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>dr,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>we.Y,p4S:()=>ke.p,oNF:()=>Se.o,UG6:()=>Te.U,IYd:()=>Ne.I,y5U:()=>Ce,hVP:()=>wn.h,GSj:()=>Ee.G,RIf:()=>Ae.R,wh_:()=>$e.w,cZk:()=>r,kgh:()=>_e.k,SY9:()=>ur,rhj:()=>Re.r,DQN:()=>Fe.D,KGM:()=>kn.K,ngS:()=>De.n,Slp:()=>ga,U4u:()=>pr,ggX:()=>Sn.g,MIs:()=>Oe.M,EN4:()=>Me.E,yrW:()=>ze.y,H8d:()=>Le.H,M7h:()=>Pe.M,InN:()=>Be.I,mPL:()=>ya,mT8:()=>We,Kgs:()=>Ve.K,Rm2:()=>Ue.R,Kko:()=>Ge.K,nqI:()=>je.n,HPB:()=>He.H,VZ:()=>Ye.V,n76:()=>qe.n,NSZ:()=>Ke.N,ztW:()=>Xe.z,rxB:()=>Ze.r,YYh:()=>ba,yzS:()=>et,NoW:()=>A.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>rt,RO:()=>at,PhQ:()=>st.P,i2o:()=>it.i,OYQ:()=>ut,jkA:()=>ct.j,BpO:()=>dt.B,FFZ:()=>ht.F,ziu:()=>pt.z,Clk:()=>yt,CRk:()=>ir,lKK:()=>$.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ar.x,Ec:()=>wt.E,Mw0:()=>kt.M,SaS:()=>ot.S,P61:()=>St.P,op:()=>h.op,X4o:()=>Tt,eVF:()=>Nt.e,BZs:()=>It,grY:()=>Ct,XHu:()=>Et,WLX:()=>At,dzn:()=>$t.d,n7C:()=>_t.n,NsG:()=>Rt.N,yyV:()=>Ft.y,_eU:()=>Dt._,whe:()=>Ot,iyU:()=>Mt,Q0_:()=>zt,_9M:()=>Lt,pR9:()=>Ut,FE$:()=>Gt,m0H:()=>jt,YeY:()=>Ht,HYA:()=>Yt,y17:()=>qt,xav:()=>Kt.x,VOZ:()=>Xt.V,VVh:()=>Zt.V,j__:()=>Qt.j,tQQ:()=>I.t,BEg:()=>Jt.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>rn,z8$:()=>Tn.z,LIG:()=>an.L,Z$r:()=>sn.Z,d_2:()=>on.d,NFr:()=>or,sZg:()=>Je,WfX:()=>ln.W,wdz:()=>un.w,F12:()=>cn,ry7:()=>_.r,_SZ:()=>dn._,vPA:()=>ma,F8e:()=>hn.F,L0l:()=>pn.L,dik:()=>R.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>va,Zhr:()=>lr,lOn:()=>fa,lDo:()=>Nn.l,RZD:()=>In.R,EwI:()=>mt.E,Pbu:()=>Cn.P,r2V:()=>En.r,t$z:()=>An.t,PMw:()=>$n.P,Ym9:()=>_n.Y,YjP:()=>xa,jbE:()=>gt.j,czq:()=>Rn.c,Mlm:()=>Fn.M,ymU:()=>F.y,OEK:()=>Dn.O,tGX:()=>Mn,KtR:()=>zn,$_$:()=>Ln.$,g9W:()=>Pn,Lpo:()=>Bn,yxw:()=>Wn,NNh:()=>Un,Vsq:()=>Ie.V,rfw:()=>Gn.r,mgz:()=>rr.m,efE:()=>jn,AmM:()=>Hn.A,zAU:()=>Yn.z,K$i:()=>qn.K,rni:()=>Kn,bvq:()=>Xn,_M9:()=>Zn._,YJN:()=>Jn,Ul9:()=>er.U,POl:()=>tr.P});var r={};n.r(r),n.d(r,{conv2d:()=>vr,depthwiseConv2d:()=>kr,matMul:()=>Sr});var a=n(3753),s=n(4759),i=n(983),o=n(7242),l=n(2164),u=n(9554),c=n(4148),d=n(1426),h=n(7892);const p=(0,h.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return l.T2.runKernel(u.EkD,r)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),w=n(6349),k=n(8147),S=n(8650),T=n(7794),N=n(7538),I=n(5583);const C=(0,h.op)({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=(0,c.YT)(e,"x","avgPool3d","float32");let o=i,h=!1;4===i.rank&&(h=!0,o=(0,I.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d.vA("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.s_)("avgPool3d",r,a);const p={x:o},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let m=l.T2.runKernel(u.cS,p,f);return m=(0,T.w)(m,o.dtype),h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4429),A=n(5162),$=n(803),_=n(4213),R=n(463),F=n(6532);const D=(0,h.op)({basicLSTMCell_:function(e,t,n,r,a,s){const i=(0,c.YT)(e,"forgetBias","basicLSTMCell"),l=(0,c.YT)(t,"lstmKernel","basicLSTMCell"),u=(0,c.YT)(n,"lstmBias","basicLSTMCell"),d=(0,c.YT)(r,"data","basicLSTMCell"),h=(0,c.YT)(a,"c","basicLSTMCell"),p=(0,c.YT)(s,"h","basicLSTMCell"),f=(0,E.x)([d,p],1),m=(0,A.N)(f,l),g=(0,o.W)(m,u),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,R.d)(g,[0,0],v),w=(0,R.d)(g,[0,b],v),k=(0,R.d)(g,[0,2*b],v),S=(0,R.d)(g,[0,3*b],v),T=(0,o.W)((0,$.l)((0,_.r)(x),(0,F.y)(w)),(0,$.l)(h,(0,_.r)((0,o.W)(i,k))));return[T,(0,$.l)((0,F.y)(T),(0,_.r)(S))]}});var O=n(2557),M=n(7237);const z=(0,h.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d.vA(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,s)}});const L=(0,h.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d.vA(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,s)}});const P=(0,h.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,c.YT)(e,"x","batchNorm"),o=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,h;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(h=(0,c.YT)(r,"offset","batchNorm")),d.vA(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d.vA(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&d.vA(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),(0,M.$)(i,o,l,h,u,s)}});const B=(0,h.op)({bincount_:function(e,t,n){const r=(0,c.YT)(e,"x","bincount"),a=(0,c.YT)(t,"weights","bincount");d.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return l.T2.runKernel(u.N4F,s,i)}});const W=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,c.YT)(e,"x","bitwiseAnd"),r=(0,c.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const a={a:n,b:r};return l.T2.runKernel(u.HNs,a)}});const V=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,c.YT)(e,"s0","broadcastArgs","int32"),r=(0,c.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return l.T2.runKernel(u.vj7,a)}});var U=n(4920),G=n(259),j=n(5396),H=n(3829),Y=n(9820),q=n(6149);const K=(0,h.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const X=(0,h.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const Z=(0,h.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const Q=(0,h.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var J=n(9870),ee=n(4969),te=n(1137);const ne=(0,h.op)({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=(0,c.YT)(e,"x","conv3d"),o=(0,c.YT)(t,"filter","conv3d");let h=i,p=!1;4===i.rank&&(p=!0,h=(0,I.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===h.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`)),d.vA(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d.vA(h.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d.vA((0,N.G0)(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),d.vA("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),d.vA((0,N.qk)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,N.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:o},m={strides:n,pad:r,dataFormat:a,dilations:s},g=l.T2.runKernel(u.A1h,f,m);return p?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var re=n(6410);const ae=(0,h.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,c.YT)(e,"x","conv3dTranspose"),i=(0,c.YT)(t,"filter","conv3dTranspose");return(0,re.c)(n,s,i,r,a)}});var se=n(5894),ie=n(1164),oe=n(3739),le=n(7167);const ue=(0,h.op)({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=(0,c.YT)(e,"x","denseBincount"),s=(0,c.YT)(t,"weights","denseBincount");d.vA("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),d.vA(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return l.T2.runKernel(u.wNW,i,o)}});var ce=n(1719),de=n(9899);const he=(0,h.op)({diag_:function(e){const t={x:(0,c.YT)(e,"x","diag")};return l.T2.runKernel(u.ORI,t)}});var pe=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const a=n.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"einsum"))),s={equation:e};return l.T2.runKernel(u.Qgm,a,s)}});var be=n(3645);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,c.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var xe=n(7457),we=n(8810),ke=n(8826),Se=n(5462),Te=n(4023),Ne=n(2520),Ie=n(3017);const Ce=(0,h.op)({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=(0,G.r)([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);const i=(0,I.t)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Ie.V)((0,Te.U)(i,0),[n[0],1,1]);if(2===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)((0,Te.U)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ee=n(4660),Ae=n(8587),$e=n(3612),_e=n(6178),Re=n(2759),Fe=n(9996),De=n(1047),Oe=n(9027),Me=n(6005),ze=n(3467),Le=n(8076),Pe=n(8320),Be=n(827);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return l.T2.runKernel(u.mnI,{},r)}var Ve=n(6584),Ue=n(5911),Ge=n(1386),je=n(4824),He=n(1194),Ye=n(2175),qe=n(5692),Ke=n(5344),Xe=n(7920),Ze=n(3708);const Qe=2147483648;const Je=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=(0,c.YT)(e,"sortedSequence","searchSorted"),a=(0,c.YT)(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=(0,I.t)(r,[-1,s]),h=(0,I.t)(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=Qe)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Qe)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const p={sortedSequence:o,values:h},f={side:n};return l.T2.runKernel(u.uWl,p,f)}});function et(e,t){return Je(e,t,"left")}var tt=n(891),nt=n(6044);const rt=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=(0,c.YT)(e,"x","maxPool3d");let o=i,h=!1;4===i.rank&&(h=!0,o=(0,I.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d.vA(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d.vA("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),(0,N.s_)("maxPool3d",r,a);const p={x:o},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},m=l.T2.runKernel(u.ySp,p,f);return h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const at=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,c.YT)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=l.T2.runKernel(u.TL8,s,i);return{result:o[0],indexes:o[1]}}});var st=n(2131),it=n(3015),ot=n(4616),lt=n(9494);function ut(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,c.YT)(e,"x","meshgrid",e instanceof lt.qY?e.dtype:"float32");if(void 0===t)return[r];let a=(0,c.YT)(t,"y","meshgrid",t instanceof lt.qY?t.dtype:"float32");const s=(0,d.Ze)(r.shape),i=(0,d.Ze)(a.shape);return"xy"===n?(r=(0,I.t)(r,[1,-1]),a=(0,I.t)(a,[-1,1]),[(0,A.N)((0,ot.S)([i,1],r.dtype),r),(0,A.N)(a,(0,ot.S)([1,s],a.dtype))]):(r=(0,I.t)(r,[-1,1]),a=(0,I.t)(a,[1,-1]),[(0,A.N)(r,(0,ot.S)([1,i],r.dtype)),(0,A.N)((0,ot.S)([s,1],a.dtype),a)])}var ct=n(1465),dt=n(6561),ht=n(4252),pt=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,c.YT)(e,"x","moments");const r=(0,d.Y6)(t,e.shape),a=(0,it.i)(e,r,n);let s=a.shape;n||(s=(0,ft.SM)(a.shape,r));const i=(0,mt.E)((0,gt.j)((0,T.w)(e,"float32"),(0,I.t)(a,s)));return{mean:a,variance:(0,it.i)(i,r,n)}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,r){const a=(0,c.YT)(t,"data","multiRNNCell"),s=(0,c.j1)(n,"c","multiRNNCell"),i=(0,c.j1)(r,"h","multiRNNCell");let o=a;const l=[];for(let c=0;c<e.length;c++){const t=e[c](o,s[c],i[c]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],d=[];for(let c=0;c<l.length;c+=2)u.push(l[c]),d.push(l[c+1]);return[u,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=(0,c.YT)(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,I.t)(a,[1,-1]):a},d={numSamples:t,seed:n,normalized:r},h=l.T2.runKernel(u.WT3,o,d);return 1===i?(0,I.t)(h,[h.size]):h}});var xt=n(1011),wt=n(135),kt=n(6865),St=n(4100);const Tt=(0,h.op)({outerProduct_:function(e,t){const n=(0,c.YT)(e,"v1","outerProduct"),r=(0,c.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,I.t)(n,[-1,1]),s=(0,I.t)(r,[1,-1]);return(0,A.N)(a,s)}});var Nt=n(5048);const It=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.e)(e,[t],n)}});const Ct=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const Et=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const At=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});var $t=n(7751),_t=n(7587),Rt=n(9855),Ft=n(6574),Dt=n(9556);const Ot=(0,h.op)({raggedGather_:function(e,t,n,r){const a={paramsNestedSplits:e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,c.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,c.YT)(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},i=l.T2.runKernel(u.oJ2,a,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Mt=(0,h.op)({raggedRange_:function(e,t,n){const r=(0,c.YT)(e,"starts","raggedRange"),a={starts:r,limits:(0,c.YT)(t,"limits","raggedRange",r.dtype),deltas:(0,c.YT)(n,"deltas","raggedRange",r.dtype)},s=l.T2.runKernel(u.CQC,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const zt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,r,a){const s=(0,c.YT)(e,"shape","raggedTensorToTensor","int32"),i=(0,c.YT)(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:(0,c.YT)(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},d={rowPartitionTypes:a};return l.T2.runKernel(u.mH5,o,d)}});const Lt=(0,h.op)({rand_:function(e,t,n){(0,d.SA)(e);const r=(0,d.Ze)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return l.T2.makeTensor(a,e,n)}});var Pt=n(4334);class Bt{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Pt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Pt.alea(a.toString()),this.randn=new Bt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Pt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Wt(t,n,r,a),i=(0,G.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const Gt=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Bt(t,n,r,!1,a),i=(0,G.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const jt=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Gt(e,0,1,t,n)}});const Ht=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const s=(0,G.r)(e,r),i=new Vt(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});const Yt=(0,h.op)({randomUniformInt_:function(e,t,n,r){return Ht(e,t,n,"int32",r)}});function qt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return l.T2.runKernel(u.Q6t,{},a)}var Kt=n(9477),Xt=n(6309),Zt=n(5251),Qt=n(9721),Jt=n(7419);const en=(0,h.op)({reverse1d_:function(e){const t=(0,c.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Jt.B)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const rn=(0,h.op)({reverse4d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});var an=n(6509),sn=n(6777),on=n(1997),ln=n(2022),un=n(3117);const cn=async function(e,t){const n=(0,c.YT)(e,"x","setdiff1d"),r=(0,c.YT)(t,"y","setdiff1d");d.vA(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),d.vA(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),d.vA(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const l=new lt.yl([o],n.dtype),u=new lt.yl([o],"int32");for(let c=0,d=0;c<a.length;c++)i.has(a[c])||(l.values[d]=a[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]};var dn=n(5740),hn=n(9519),pn=n(8143);const fn=(0,h.op)({slice1d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice1d");return d.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice2d");return d.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice3d");return d.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice4d");return d.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),wn=n(3062),kn=n(1405),Sn=n(7307),Tn=n(9486),Nn=n(5181),In=n(191),Cn=n(208),En=n(613),An=n(901),$n=n(319),_n=n(1231),Rn=n(7382),Fn=n(4894),Dn=n(8032),On=n(9914);function Mn(e,t){(0,d.HO)(e);const n=(0,c.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,On.Q)(e,null,n,t)}function zn(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,c.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,On.Q)(e,t,r,n)}var Ln=n(5395);function Pn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,c.MZ)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,On.Q)(e,t,r,n)}function Bn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,c.MZ)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,On.Q)(e,t,r,n)}function Wn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,c.MZ)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,On.Q)(e,t,r,n)}var Vn=n(4083);const Un=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,c.YT)(e,"tensor","tensorScatterupdate"),a=(0,c.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,c.YT)(n,"updates","tensorScatterupdate");if(Vn.validateInput(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);const i={tensor:r,indices:a,updates:s};return l.T2.runKernel(u.X4r,i,{})}});var Gn=n(2765);const jn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Bt(t,n,r,!0,a),i=(0,G.r)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Hn=n(9694),Yn=n(5149),qn=n(3984);function Kn(e,t){return Je(e,t,"right")}function Xn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return l.T2.makeVariable(e,t,n,r)}var Zn=n(3986),Qn=n(9286);const Jn=async function(e){const t=(0,c.YT)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,Qn.Y)(t.shape,n);return e!==t&&t.dispose(),r};var er=n(4218),tr=n(3290);const nr=async function(e,t,n){const r=(0,c.YT)(e,"tensor","boolMask"),a=(0,c.YT)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;d.vA(i>0,(()=>"mask cannot be scalar")),d.O3(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let c=s;c<s+i;c++)l*=o[c];const u=o.slice(0,s).concat([l],o.slice(s+i)),h=(0,I.t)(r,u),p=(0,I.t)(a,[-1]),f=await Jn(p),m=(0,En.r)(f,[1]),g=(0,_e.k)(h,m,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var rr=n(2154),ar=n(2155),sr=n(8804);const ir=(0,h.op)({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,c.YT)(e,"v","movingAverage"),i=(0,c.YT)(t,"x","movingAverage"),l=(0,c.YT)(n,"decay","movingAverage");(0,sr.assertTypesMatch)(s,i),d.vA(d.r1(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=(0,on.d)(1),h=(0,gt.j)(u,l);let p=(0,$.l)((0,gt.j)(i,s),h);if(a){d.vA(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,c.YT)(r,"step","movingAverage");p=(0,fe.y)(p,(0,gt.j)(u,(0,_t.n)(l,e)))}return(0,o.W)(s,p)}});const or=(0,h.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const r=(0,c.YT)(e,"indices","scatterND","int32"),a=(0,c.YT)(t,"updates","scatterND");Vn.validateInput(a,r,n);const s={indices:r,updates:a},i={shape:n};return l.T2.runKernel(u.pJc,s,i)}});const lr=(0,h.op)({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const a=(0,c.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,c.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,c.YT)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},h={outputShape:n};return l.T2.runKernel(u.jgd,o,h)}});const ur=(0,h.op)({gatherND_:function(e,t){const n=(0,c.YT)(t,"indices","gatherND","int32"),r={params:(0,c.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return l.T2.runKernel(u.O4G,r)}});const cr=(0,h.op)({dropout_:function(e,t,n,r){const a=(0,c.YT)(e,"x","dropout");if(d.vA("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),d.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lt.qY?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,l=(0,fe.y)((0,Ae.R)((0,o.W)(Ht(s,0,1,"float32",r),i)),i);return(0,$.l)(a,l)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Mn(a,"float32")}const pr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=(0,c.YT)(e,"predictions","inTopK"),a=(0,c.YT)(t,"targets","inTopK");(0,d.vA)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,d.vA)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,d.O3)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,d.vA)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=(0,d.ce)("bool",l);for(let c=0;c<l;c++){const e=c*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),h[c]=0;for(let a=0;a<n;a++)if(r[a].index===o[c]){h[c]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,Dn.O)(h,a.shape,"bool")};var fr=n(1839),mr=n(8805),gr=n(6927),yr=n(1565),br=n(7905);const vr=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,br.zE)(l.T2.state.gradientDepth,f)){d.vA("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=(0,ee.X)(t,n,r,a,s,i,h);return null!=p&&(e=(0,o.W)(e,p)),(0,br.f2)(e,f,m,g)}const y=(0,c.YT)(t,"x","conv2d","float32"),b=(0,c.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${b.rank}.`)),N.s_("fused conv2d",a,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.vA(b.shape[2]===w,(()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${b.shape[2]}.`)),d.vA(N.G0(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`));const k=N.uf(v.shape,b.shape,r,i,a,h);let S,T;if(null!=p&&(S=(0,c.YT)(p,"bias","fused conv2d"),[S]=(0,sr.makeTypesMatch)(S,y),"NHWC"===s?mr.assertAndGetBroadcastShape(k.outShape,S.shape):(d.vA(S.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`)),d.vA(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${k.outChannels})`)))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)d.vA(1===e[0]||e[0]===k.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${k.outChannels}).`));else if(3===e.length)try{mr.assertAndGetBroadcastShape(e,k.outShape)}catch($){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${k.outShape}).`;throw Error(t)}T=(0,c.YT)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.vA("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[n,o,l,u]=t,c=(0,br.XB)(e,l,f);d.vA(N.Dh(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[(0,yr.v)(o.shape,c,n,r,a),(0,gr.H)(o,c,n.shape,r,a)];if(null!=u){const e=(0,br.Do)(u,c);h.push(e)}return h},E={x:v,filter:b,bias:S,preluActivationWeights:T},A={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fr._X)(((e,t,n)=>{let r=l.T2.runKernel(u.aAr,E,A);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b)}{const e=(0,fr._X)(((e,t,n,r)=>{let a=l.T2.runKernel(u.aAr,E,A);return r([t,e,a,n]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b,S)}}});var xr=n(7399),wr=n(261);const kr=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,br.zE)(l.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,r,a,s,i,h);return null!=p&&(e=(0,o.W)(e,p)),(0,br.f2)(e,f,m,g)}const y=(0,c.YT)(t,"x","depthwiseConv2d","float32"),b=(0,c.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`)),d.vA(v.shape[3]===b.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${b.shape[2]}.`)),null==i&&(i=[1,1]),d.vA(N.G0(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),N.s_("fused depthwiseConv2d",a,h);const w=N.uf(v.shape,b.shape,r,i,a,h,!0);let k,S;null!=p&&(k=(0,c.YT)(p,"bias","fused conv2d"),[k]=(0,sr.makeTypesMatch)(k,y),mr.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,c.YT)(m,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{d.vA(N.Dh(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,s,o,l]=t,u=(0,br.XB)(e,o,f),c=(0,wr.l)(s.shape,u,n,r,a,i,h),p=(0,xr.x)(s,u,n.shape,r,a,i,h);if(null!=l){return[c,p,(0,br.Do)(k,u)]}return[c,p]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fr._X)(((e,t,n)=>{let r=l.T2.runKernel(u.T7M,C,E);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(v,b)}{const e=(0,fr._X)(((e,t,n,r)=>{let a=l.T2.runKernel(u.T7M,C,E);return r([t,e,a,n]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}}));return e(v,b,k)}}});const Sr=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,br.zE)(l.T2.state.gradientDepth,i)){let e=(0,A.N)(t,n,r,a);return null!=s&&(e=(0,o.W)(e,s)),(0,br.f2)(e,i,h,p)}let f=(0,c.YT)(t,"a","fused matMul"),m=(0,c.YT)(n,"b","fused matMul");[f,m]=(0,sr.makeTypesMatch)(f,m);const g=r?f.shape[f.rank-2]:f.shape[f.rank-1],y=a?m.shape[m.rank-1]:m.shape[m.rank-2],b=r?f.shape[f.rank-1]:f.shape[f.rank-2],v=a?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.Ze(x),S=d.Ze(w);d.vA(g===y,(()=>`Error in fused matMul: inner shapes (${g}) and (${y}) of Tensors with shapes ${f.shape} and ${m.shape} and transposeA=${r} and transposeB=${a} must match.`));const T=mr.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),N=r?(0,I.t)(f,[k,g,b]):(0,I.t)(f,[k,b,g]),C=a?(0,I.t)(m,[S,v,y]):(0,I.t)(m,[S,y,v]);let E,$;null!=s&&(E=(0,c.YT)(s,"bias","fused matMul"),[E]=(0,sr.makeTypesMatch)(E,f),mr.assertAndGetBroadcastShape(T,E.shape)),null!=h&&($=(0,c.YT)(h,"prelu weights","fused matMul"));const _=(e,t)=>{const[n,o,l,u]=t,c=(0,br.XB)((0,I.t)(e,l.shape),l,i);let d,h;if(r||a?!r&&a?(d=(0,A.N)(c,o,!1,!1),h=(0,A.N)(c,n,!0,!1)):r&&!a?(d=(0,A.N)(o,c,!1,!0),h=(0,A.N)(n,c,!1,!1)):(d=(0,A.N)(o,c,!0,!0),h=(0,A.N)(c,n,!0,!0)):(d=(0,A.N)(c,o,!1,!0),h=(0,A.N)(n,c,!0,!1)),null!=s){return[d,h,(0,br.Do)(u,c)]}return[d,h]},R={a:N,b:C,bias:E,preluActivationWeights:$},F={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:p};if(null==s){const e=(0,fr._X)(((e,t,n)=>{const r=l.T2.runKernel(u.Dr,R,F);return n([e,t,r]),{value:(0,I.t)(r,T),gradFunc:_}}));return e(N,C)}{const e=(0,fr._X)(((e,t,n,r)=>{const a=l.T2.runKernel(u.Dr,R,F);return r([e,t,a,n]),{value:(0,I.t)(a,T),gradFunc:_}}));return e(N,C,E)}}});const Tr=(0,h.op)({hammingWindow_:function(e){return hr(e,.54,.46)}});const Nr=(0,h.op)({hannWindow_:function(e){return hr(e,.5,.5)}});const Ir=(0,h.op)({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push((0,R.d)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=(0,E.x)([(0,R.d)(e,s,t-r),(0,Ee.G)([r],a)]);i.push(o),s+=n}return 0===i.length?zn([],[0,t]):(0,I.t)((0,E.x)(i),[i.length,t])}});const Cr=(0,h.op)({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr;null==r&&(r=dr(t));const s=Ir(e,t,n),i=(0,$.l)(s,a(t));return(0,Tn.z)(i,r)}});const Er=(0,h.op)({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"image","cropAndResize"),o=(0,c.YT)(t,"boxes","cropAndResize","float32"),h=(0,c.YT)(n,"boxInd","cropAndResize","int32"),p=o.shape[0];d.vA(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),d.vA(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`)),d.vA(1===h.rank&&h.shape[0]===p,(()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`)),d.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d.vA("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const f={image:i,boxes:o,boxInd:h},m={method:a,extrapolationValue:s,cropSize:r};return l.T2.runKernel(u.MRQ,f,m)}});const Ar=(0,h.op)({flipLeftRight_:function(e){const t=(0,c.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return l.T2.runKernel(u.BxF,n,{})}});const $r=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,c.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,Ie.V)(t,a)}});const _r=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,c.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,s=(0,T.w)(t,"float32"),i=Mn([.2989,.587,.114]);let o;switch(t.rank){case 2:o=ye("ij,j->i",s,i);break;case 3:o=ye("ijk,k->ij",s,i);break;case 4:o=ye("ijkl,l->ijk",s,i);break;case 5:o=ye("ijklm,m->ijkl",s,i);break;case 6:o=ye("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=(0,Te.U)(o,-1),(0,T.w)(o,a)}});const Rr=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=(0,c.YT)(e,"image","rotateWithOffset","float32");d.vA(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return l.T2.runKernel(u.BK4,s,i)}});function Fr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),d.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d.vA(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Dr=(0,h.op)({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,c.YT)(e,"boxes","nonMaxSuppression","float32"),i=(0,c.YT)(t,"scores","nonMaxSuppression","float32"),o=Fr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return l.T2.runKernel(u.SDM,{boxes:s,scores:i},d)}});var Or=n(6692);const Mr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),o=Fr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=(0,Or.c7)(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Mn(h,"int32")};const zr=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"boxes","nonMaxSuppression"),o=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(i,o,n,r,a,s);n=d.maxOutputSize,r=d.iouThreshold,a=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:i,scores:o},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},f=l.T2.runKernel(u.e0f,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Lr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:f}=(0,Or.ut)(d,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(p,"int32"),selectedScores:Mn(f)}};const Pr=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,c.YT)(e,"boxes","nonMaxSuppression"),o=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(i,o,n,r,a,null),h={boxes:i,scores:o},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=l.T2.runKernel(u.Zl4,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Br=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,Or.ZS)(p,f,u,d,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Wr=n(2214),Vr=n(2823);const Ur=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=(0,c.YT)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,l,u,h,p=(0,$.l)(Mn([r]),255);if(d.vA(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),d.vA(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),d.vA("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),d.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,l,u]=(0,Nn.l)(a,[1,1,1],-1);const e=(0,$.l)(i,.2989),t=(0,$.l)(l,.587),n=(0,$.l)(u,.114);h=(0,o.W)((0,o.W)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,r,a,s,i,l,u=Mn([-1]),c=Mn([0]),d=Mn([0]);for(let h=0;h<e.size-1;h++){n=(0,R.d)(e,0,h+1),r=(0,R.d)(e,h+1),i=(0,fe.y)((0,Rn.c)(n),t),l=(0,fe.y)((0,Rn.c)(r),t);const p=(0,Rn.c)((0,$.l)(n,qt(0,n.size)));a=(0,fe.y)(p,(0,Rn.c)(n));const f=(0,Ee.G)(r.shape,n.size),m=(0,o.W)(qt(0,r.size),f),g=(0,$.l)(r,m);s=(0,fe.y)((0,Rn.c)(g),(0,Rn.c)(r));const y=(0,gt.j)(a,s),b=(0,gt.j)(a,s),v=(0,$.l)(i,l);d=(0,$.l)((0,$.l)(v,y),b);const x=(0,Re.r)(d,c);c=(0,Zn._)(x,d,c),u=(0,Zn._)(x,Mn([h]),u)}return u}(B((0,T.w)((0,an.L)(h),"int32"),(0,Dn.O)([]),256),s)}const f=n?(0,Be.I)(h,p):(0,Re.r)(h,p);return(0,T.w)((0,$.l)(f,255),"int32")}});const Gr=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const i=(0,c.YT)(e,"image","transform","float32"),o=(0,c.YT)(t,"transforms","transform","float32");d.vA(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),d.vA(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const h={image:i,transforms:o},p={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return l.T2.runKernel(u.dLy,h,p)}});const jr=(0,h.op)({bandPart_:function(e,t,n){const r=(0,c.YT)(e,"a","bandPart");(0,d.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);let o,l;"number"===typeof t?((0,d.vA)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,d.vA)(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),o=(0,c.YT)(t<0?s:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=(0,Zn._)((0,Pe.M)(t,0),s,(0,dt.B)(t,s))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,d.vA)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=(0,c.YT)(n<0?i:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=(0,Zn._)((0,Pe.M)(n,0),i,(0,dt.B)(n,i)));const u=(0,I.t)(qt(0,s,1,"int32"),[-1,1]),h=qt(0,i,1,"int32"),p=(0,gt.j)(u,h),f=(0,qe.n)((0,Be.I)(p,o),(0,Fe.D)(p,(0,xt.H)(l))),m=(0,er.U)([s,i],r.dtype);return(0,I.t)((0,An.t)((0,qn.K)((0,I.t)(r,[-1,s,i])).map((e=>(0,Zn._)(f,e,m)))),a)}});const Hr=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Nn.l)(e,e.shape[0],0).map((e=>(0,En.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let a=0;a<e.length;++a)n.push(l.T2.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=(0,$.l)((0,Rn.c)((0,$.l)(n[t],e)),n[t]);e=(0,gt.j)(e,r)}return(0,fe.y)(e,(0,ar.x)(e,"euclidean"))})));return t?(0,An.t)(n,0):n}});var Yr=n(8046);function qr(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return l.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Ce(n),s=(0,Y.o)(e);const i=zn([[1]],[1,1]);let o=(0,Y.o)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=l.T2.tidy((()=>{const t=(0,R.d)(s,[e,e],[n-e,1]),l=(0,ar.x)(t),u=(0,R.d)(s,[e,e],[1,1]),c=(0,Zn._)((0,Re.r)(u,0),zn([[-1]]),zn([[1]])),d=(0,gt.j)(u,(0,$.l)(c,l)),h=(0,fe.y)(t,d);o=1===h.shape[0]?(0,Y.o)(i):(0,E.x)([i,(0,R.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.H)((0,fe.y)((0,A.N)(c,d),l)),f=(0,R.d)(s,[e,0],[n-e,r]),m=(0,$.l)(p,o),g=(0,rr.m)(o);if(0===e)s=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));else{const t=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));s=(0,E.x)([(0,R.d)(s,[0,0],[e,r]),t],0)}const y=(0,rr.m)(m),b=(0,R.d)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,gt.j)(b,(0,A.N)((0,A.N)(b,o),y));else{const t=(0,gt.j)(b,(0,A.N)((0,A.N)(b,o),y));a=(0,E.x)([(0,R.d)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,Yr.AS)([t,u,c])}return!t&&n>r&&(a=(0,R.d)(a,[0,0],[n,r]),s=(0,R.d)(s,[0,0],[r,r])),[a,s]}))}const Kr=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,qn.K)((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=qr(e,t);a.push(n),s.push(r)}));return[(0,I.t)((0,An.t)(a,0),e.shape),(0,I.t)((0,An.t)(s,0),e.shape)]}}});var Xr=n(1667);const Zr=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,c.YT)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,c.YT)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,$.l)(r,a);if(n===Xr.i.NONE)return s;if(n===Xr.i.SUM)return(0,Rn.c)(s);if(n===Xr.i.MEAN){if(null==a)return(0,it.i)(s);{const e=r.size/a.size,t=(0,fe.y)((0,Rn.c)(s),(0,Rn.c)(a));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Xr.i.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,fe.y)((0,Rn.c)(s),(0,on.d)(r.size));{const e=(0,$.l)(a,(0,ot.S)(r.shape)),t=(0,T.w)((0,Rn.c)((0,wt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Rn.c)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const Qr=(0,h.op)({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","absoluteDifference"),i=(0,c.YT)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c.YT)(n,"weights","absoluteDifference")),(0,d.O3)(s.shape,i.shape,"Error in absoluteDifference: ");const l=(0,a.t)((0,gt.j)(s,i));return Zr(l,o,r)}});const Jr=(0,h.op)({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","cosineDistance"),i=(0,c.YT)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,c.YT)(r,"weights","cosineDistance")),(0,d.O3)(s.shape,i.shape,"Error in cosineDistance: ");const l=(0,on.d)(1),u=(0,gt.j)(l,(0,Rn.c)((0,$.l)(s,i),n,!0));return Zr(u,o,a)}});const ea=(0,h.op)({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS,a=(0,c.YT)(e,"labels","hingeLoss");const s=(0,c.YT)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c.YT)(n,"weights","hingeLoss")),(0,d.O3)(a.shape,s.shape,"Error in hingeLoss: ");const o=(0,on.d)(1);a=(0,gt.j)((0,$.l)((0,on.d)(2),a),o);const l=(0,Zt.V)((0,gt.j)(o,(0,$.l)(a,s)));return Zr(l,i,r)}});const ta=(0,h.op)({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const i=(0,c.YT)(e,"labels","huberLoss"),l=(0,c.YT)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,c.YT)(n,"weights","huberLoss")),(0,d.O3)(i.shape,l.shape,"Error in huberLoss: ");const h=(0,on.d)(r),p=(0,a.t)((0,gt.j)(l,i)),f=(0,dt.B)(p,h),m=(0,gt.j)(p,f),g=(0,o.W)((0,$.l)((0,on.d)(.5),(0,mt.E)(f)),(0,$.l)(h,m));return Zr(g,u,s)}});const na=(0,h.op)({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","logLoss"),i=(0,c.YT)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,c.YT)(n,"weights","logLoss")),(0,d.O3)(s.shape,i.shape,"Error in logLoss: ");const u=(0,on.d)(1),h=(0,on.d)(r),p=(0,xt.H)((0,$.l)(s,(0,Ue.R)((0,o.W)(i,h)))),f=(0,$.l)((0,gt.j)(u,s),(0,Ue.R)((0,o.W)((0,gt.j)(u,i),h))),m=(0,gt.j)(p,f);return Zr(m,l,a)}});const ra=(0,h.op)({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,c.YT)(e,"labels","meanSquaredError"),s=(0,c.YT)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c.YT)(n,"weights","meanSquaredError")),(0,d.O3)(a.shape,s.shape,"Error in meanSquaredError: ");const o=(0,Cn.P)(a,s);return Zr(o,i,r)}});const aa=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS,i=(0,c.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,c.YT)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,c.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(i.shape,l.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(.5);i=(0,o.W)((0,$.l)(i,(0,gt.j)(t,e)),(0,$.l)(n,e))}const h=function(e,t){const n=(0,c.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,c.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Zt.V)(r),i=(0,$.l)(r,n),l=(0,Ge.K)((0,Se.o)((0,xt.H)((0,a.t)(r))));return(0,o.W)((0,gt.j)(s,i),l)}(i,l);return Zr(h,u,s)}});const sa=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS,s=(0,c.YT)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c.YT)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,c.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(s.shape[1]);s=(0,o.W)((0,$.l)(s,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,fr._X)(((e,t,r)=>{const a=(0,Ye.V)(t,[n],!0),s=(0,gt.j)((0,T.w)(t,"float32"),a);r([e,s]);const i=(0,xt.H)((0,$.l)(s,e));return{value:(0,Rn.c)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,ft.SM)(e.shape,[n]);return[(0,$.l)((0,I.t)(e,s),(0,gt.j)((0,T.w)(r,"float32"),(0,Se.o)(a))),(0,$.l)((0,I.t)(e,s),(0,gt.j)((0,Se.o)(a),(0,T.w)(r,"float32")))]}}}));return r(e,t)}(s,i);return Zr(u,l,a)}});const ia=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,c.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,c.YT)(t,"values","sparseFillEmptyRows"),i=(0,c.YT)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,c.YT)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const d={indices:a,values:s,denseShape:i,defaultValue:o},h=l.T2.runKernel(u.C8s,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const oa=(0,h.op)({sparseReshape_:function(e,t,n){const r=(0,c.YT)(e,"inputIndices","sparseReshape","int32"),a=(0,c.YT)(t,"inputShape","sparseReshape","int32"),s=(0,c.YT)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=l.T2.runKernel(u.BoJ,i);return{outputIndices:o[0],outputShape:o[1]}}});const la=(0,h.op)({sparseSegmentMean_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentMean"),a=(0,c.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,c.YT)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return l.T2.runKernel(u.L6G,i)}});const ua=(0,h.op)({sparseSegmentSum_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentSum"),a=(0,c.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,c.YT)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return l.T2.runKernel(u.DvZ,i)}});const ca=(0,h.op)({stringNGrams_:function(e,t,n,r,a,s,i,o){const d=(0,c.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const h=(0,c.YT)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},f={data:d,dataSplits:h},m=l.T2.runKernel(u.YAb,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const da=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=(0,c.YT)(e,"input","stringSplit","string"),a=(0,c.YT)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=l.T2.runKernel(u.iW0,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});const ha=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,c.YT)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return l.T2.runKernel(u.$jE,a,r)}});const pa=(0,h.op)({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=(0,c.YT)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return l.T2.runKernel(u.GZp,{x:a},s)}}),fa={fft:wn.h,ifft:kn.K,rfft:Tn.z,irfft:Sn.g},ma={hammingWindow:Tr,hannWindow:Nr,frame:Ir,stft:Cr},ga={flipLeftRight:Ar,grayscaleToRGB:$r,resizeNearestNeighbor:Vr.b,resizeBilinear:Wr.v,rgbToGrayscale:_r,rotateWithOffset:Rr,cropAndResize:Er,nonMaxSuppression:Dr,nonMaxSuppressionAsync:Mr,nonMaxSuppressionWithScore:zr,nonMaxSuppressionWithScoreAsync:Lr,nonMaxSuppressionPadded:Pr,nonMaxSuppressionPaddedAsync:Br,threshold:Ur,transform:Gr},ya={bandPart:jr,gramSchmidt:Hr,qr:Kr},ba={absoluteDifference:Qr,computeWeightedLoss:Zr,cosineDistance:Jr,hingeLoss:ea,huberLoss:ta,logLoss:na,meanSquaredError:ra,sigmoidCrossEntropy:aa,softmaxCrossEntropy:sa},va={sparseFillEmptyRows:ia,sparseReshape:oa,sparseSegmentMean:la,sparseSegmentSum:ua},xa={stringNGrams:ca,stringSplit:da,stringToHashBucketFast:ha,staticRegexReplace:pa}},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i=(0,s.YT)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:i};return r.T2.runKernel(a.ODT,l,o)}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var r=n(4148),a=n(1426),s=n(8650),i=n(2557),o=n(7538),l=n(6044),u=n(7892),c=n(5583),d=n(3585);const h=(0,u.op)({pool_:function(e,t,n,u,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===u&&(u="valid");const m=(0,r.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),a.vA(o.G0(p,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`));const b=o.E6(g.shape,t,p,h,u),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),s=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],s[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([b.inHeight,b.inWidth],v,x),T=w?u:"valid",N=w?g:(0,d.e)(g,v,k),I=("avg"===n?()=>(0,s.$)(N,t,p,T,f):()=>(0,l.j)(N,t,p,T,f))(),C=w?I:(0,i.G)(I,v,S);return y?(0,c.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({pow_:function(e,t){let n=(0,i.YT)(e,"base","pow"),o=(0,i.YT)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.pyJ,l)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return r.T2.runKernel(a.Ncv,n)}})},6574:(e,t,n)=>{"use strict";function r(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>r})},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(7794);const o=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=(0,s.YT)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.T2.runKernel(a.kdj,l,u)}})},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return r.T2.runKernel(a.LRy,t)}})},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,s.YT)(e,"x","reciprocal")};return r.T2.runKernel(a.huO,t)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return r.T2.runKernel(a.fUj,t)}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return r.T2.runKernel(a.P_L,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.T2.runKernel(a.R23,n,i)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},i={dims:t};return r.T2.runKernel(a.D7i,n,i)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return r.T2.runKernel(a.hVg,t)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,s.YT)(e,"x","rsqrt","float32")};return r.T2.runKernel(a.TOR,t)}})},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(8977),a=n(9914);function s(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.Q)(e,[],[],t)}},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>i,validateInput:()=>s,validateUpdateShape:()=>a});var r=n(1426);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const l=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.Ze)(t.shape)/l,sliceSize:o,strides:[...(0,r.Ur)(n.slice(0,s)),1],outputSize:(0,r.Ze)(n)}}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return r.T2.runKernel(a.u$b,t)}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>a,j:()=>r});const r=1.7580993408473768,a=1.0507009873554805},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>u});var r=n(4148),a=n(1426),s=n(4969),i=n(9899),o=n(7892),l=n(5583);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,r.YT)(e,"x","separableConv2d"),p=(0,r.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,r.YT)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.vA(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.vA(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),a.vA(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),a.vA(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.vA(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=p.shape[2],b=p.shape[3];a.vA(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const v=(0,i.G)(m,p,o,u,d,c),x=(0,s.X)(v,f,1,"valid",d);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(a.vI1,t)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({sign_:function(e){const t={x:(0,s.YT)(e,"x","sign")};return r.T2.runKernel(a.YVe,t)}})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({sin_:function(e){const t={x:(0,s.YT)(e,"x","sin","float32")};return r.T2.runKernel(a.hql,t)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({sinh_:function(e){const t={x:(0,s.YT)(e,"x","sinh")};return r.T2.runKernel(a.J3C,t)}})},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({slice_:function(e,t,n){const i=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},l={begin:t,size:n};return r.T2.runKernel(a.JiE,o,l)}})},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>i,computeFlatOffset:()=>v,computeOutShape:()=>l,getNormalizedAxes:()=>h,isSliceContinous:()=>b,maskToAxes:()=>o,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>u});var r=n(1426);const a=-2,s=-1;function i(e,t,n){const a=e.shape.length;r.vA(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.vA(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.vA(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function l(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function u(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function c(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function h(e,t,n,r,a,s,i,o,l){const c=e.length;let d=new Array(c),h=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;d=p(i,l,c,r,e),h=f(o,l,c,a,e),b=u(s,l,c,e)}else for(let u=0;u<c;u++)d[u]=g(i,r,s,e,u,l),h[u]=y(o,a,s,e,u,l),b[u]=m(s,u,l);return{begin:d,end:h,strides:b}}function p(e,t,n,r,a){const s=[...a],i=d(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=c(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function f(e,t,n,a,s){const i=[...s],o=d(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=c(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let l=0;l<i.length;l++){const e=s[l];i[l]<0&&(i[l]+=e),i[l]=r.qE(0,i[l],s[l])}return i}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,a,s,i){let o=t[s];const l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[s];return o<0&&(o+=u),o=r.qE(0,o,u-1),o}function y(e,t,n,a,s,i){let o=t[s];const l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[s];return o<0&&(o+=u),o=l>0?r.qE(0,o,u):r.qE(-1,o,u-1),o}function b(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function x(e,t,n){let a;const s=e.shape.length;let i;return a="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function w(e,t,n,r,i,o,l,u,c){let d;if(null==r?(d=new Array(t.length),d.fill(1)):d=r,null!=l&&0!==(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:i,endMask:o,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:c};for(let a=0;a<p.dims;a++)h&&0!==(1<<a&u)&&p.numAddAxisAfterEllipsis++,1<<a&l&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let a=0;a<e.length;++a){if(0===f.strides[a])throw Error(`strides[${a}] must be non-zero`);const t=!!(f.shrinkAxisMask&1<<a),n=e[a];if(-1===n){b.push(t?1:-1);continue}const r=[f.beginMask&1<<a,f.endMask&1<<a],s=[f.strides[a]>0?0:-1,f.strides[a]>0?n:n-1];if(t&&f.strides[a]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[a];const i=!!(f.beginMask&1<<a&&f.endMask&1<<a);if(f.beginValid&&f.endValid){if(t){const e=f.begin[a]<0?n+f.begin[a]:f.begin[a];if(f.begin[a]=e,f.end[a]=f.begin[a]+1,e<0||e>=n)throw Error(`slice index ${f.begin[a]} of dimension ${a} out of bounds.`)}else f.begin[a]=k(f.begin[a],0,f.strides[a],n,r,s),f.end[a]=k(f.end[a],1,f.strides[a],n,r,s);const e=1===f.strides[a]&&0===f.begin[a]&&f.end[a]===n;m=m&&e,g=g&&(0===a&&1===f.strides[a]||e)}else m=m&&1===f.strides[a]&&i,g=g&&(0===a&&1===f.strides[a]||i);let o,l=!1;if(f.beginValid&&f.endValid?(o=f.end[a]-f.begin[a],l=!0):t?(o=1,l=!0):i&&n>=0&&(o=f.strides[a]<0?-n:n,l=!0),l){let e;e=0===o||o<0!==f.strides[a]<0?0:Math.trunc(o/f.strides[a])+(o%f.strides[a]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===a&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==a)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.T2.runKernel(a.rFG,i,o)}})},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return r.T2.runKernel(a.Fin,t)}})},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const o=(0,s.YT)(e,"x","spaceToBatchND");i.vA(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.vA(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:o},u={blockShape:t,paddings:n};return r.T2.runKernel(a.A8B,l,u)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(2164),a=n(9554),s=n(1426);const i=(0,n(7892).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.rGP,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(2164),a=n(9554),s=n(1426);const i=(0,n(7892).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.OAQ,t)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var r=n(6149),a=n(4429),s=n(1047),i=n(803),o=n(7892),l=n(9477),u=n(5583),c=n(7419),d=n(1997),h=n(463),p=n(1405);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,u.t)(e,[n,t]);o=(0,p.K)(r)}else{const f=[n,2*(t-1)],m=(0,u.t)((0,l.x)(e),[n,t]),g=(0,u.t)((0,s.n)(e),[n,t]),y=(0,c.B)((0,h.d)(m,[0,1],[n,t-2]),1),b=(0,i.l)((0,c.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,a.x)([m,y],1),x=(0,a.x)([g,b],1),w=(0,u.t)((0,r.f)(v,x),[f[0],f[1]]);o=(0,p.K)(w)}if(o=(0,l.x)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.t)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var r=n(1426),a=n(6149),s=n(4429),i=n(1047),o=n(7892),l=n(9477),u=n(5583),c=n(463),d=n(5181),h=n(4218),p=n(3290),f=n(3062);const m=(0,o.op)({rfft_:function(e,t){(0,r.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.d)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,h.U)(r)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,u.t)((0,a.f)(m,g),[o,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,l.x)(b),w=(0,i.n)(b),k=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(w,[v,n-v],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,u.t)((0,a.f)(k[0],S[0]),T)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i={x:(0,s.YT)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.T2.runKernel(a.Blb,i,o)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(a.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r=n(2164),a=n(4148);const s=(0,n(7892).op)({square_:function(e){const t=(0,a.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(2164),a=n(9554),s=n(8804),i=n(4148),o=n(8805);const l=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,i.YT)(e,"a","squaredDifference"),l=(0,i.YT)(t,"b","squaredDifference");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.Ddj,u,{})}})},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(4148),a=n(1426),s=n(7892),i=n(5583);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r.YT)(e,"x","squeeze","string_or_numeric");return(0,i.t)(n,(0,a.gx)(n.shape,t).newShape)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");i.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return r.T2.runKernel(a.mM$,o,l)}})},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","step")},i={alpha:t};return r.T2.runKernel(a.pnw,n,i)}})},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({stridedSlice_:function(e,t,n,i){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,s.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:d};return r.T2.runKernel(a.UcO,h,p)}})},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(2164),a=n(9554),s=n(8804),i=n(4148);const o=(0,n(7892).op)({sub_:function(e,t){let n=(0,i.YT)(e,"a","sub"),o=(0,i.YT)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.T2.runKernel(a.PbM,l)}})},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(7794);const o=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=(0,s.YT)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.w)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.T2.runKernel(a.WuN,l,u)}})},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({tan_:function(e){const t={x:(0,s.YT)(e,"x","tan","float32")};return r.T2.runKernel(a.oFs,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return r.T2.runKernel(a.iuW,t)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var r=n(4148),a=n(9914);function s(e,t,n){const s=(0,r.MZ)(e,n);return(0,a.Q)(e,t,s,n)}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(4148),a=n(1426),s=n(9914);function i(e,t,n){if((0,a.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.MZ)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,i,n)}},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(2164),a=n(8075),s=n(1426),i=n(8977);function o(e,t,n,o){if(null==o)o=(0,s.X$)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,a.Nw)(e)||(0,a.Oj)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),r=(0,s.Ze)(n);(0,s.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==(0,s.Ze)(t.slice(a));(0,s.vA)(n[a]===t[a]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),r.T2.makeTensor(e,t,o)}},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");i.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return r.T2.runKernel(a.FAs,o,l)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const i=(0,s.YT)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const l={x:i},u={k:t,sorted:n},[c,d]=r.T2.runKernel(a.TBb,l,u);return{values:c,indices:d}}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var r=n(2164),a=n(8046),s=n(9554),i=n(4148),o=n(1426),l=n(6149),u=n(1047),c=n(1011),d=n(7892),h=n(9477);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,i.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),o.vA(d.rank===t.length,(()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and "+(d.rank-1)+` but got ${t}`))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,a.DZ)((()=>{let e=(0,h.x)(d),t=(0,u.n)(d);return e=r.T2.runKernel(s.wx0,{x:e},f),t=r.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,c.H)(t)),(0,l.f)(e,t)})):r.T2.runKernel(s.wx0,p,f)}})},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unique","string_or_numeric");(0,i.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},l={axis:t},[u,c]=r.T2.runKernel(a.EwU,o,l);return{values:u,indices:c}}})},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,s.YT)(e,"x","unsortedSegmentSum"),l=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.vA)((0,i.E6)(n),(()=>"numSegments must be of dtype int"));const u={x:o,segmentIds:l},c={numSegments:n};return r.T2.runKernel(a.pPe,u,c)}})},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(2164),a=n(9554),s=n(4148),i=n(1426);const o=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unstack","string_or_numeric");i.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return r.T2.runKernel(a.dXR,o,l)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(2164),a=n(9554),s=n(4148),i=n(4920),o=n(8805);const l=(0,n(7892).op)({where_:function(e,t,n){const l=(0,s.YT)(t,"a","where"),u=(0,s.YT)(n,"b","where"),c=(0,s.YT)(e,"condition","where","bool"),d=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),h={condition:(0,i.h)(c,d),t:(0,i.h)(l,d),e:(0,i.h)(u,d)};return r.T2.runKernel(a.l6P,h)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(2164),a=n(1426),s=n(6149);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,a.SA)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.f)(t,n)}const n=(0,a.Ty)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2164),a=n(9554),s=n(4148);const i=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return r.T2.runKernel(a.xJ3,t)}})},5767:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>r})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>w,yl:()=>f,rT:()=>S,tp:()=>k,B4:()=>x,Q5:()=>v,qP:()=>b});var r=n(7926),a=n(1426);const s=20,i=3,o=7;function l(e,t,n,r){const s=(0,a.Ur)(t),i=function(e,t,n,r){const s=(0,a.Ze)(t),i=r[r.length-1],o=new Array(i).fill(0),l=t.length,c="complex64"===n?h(e):e;if(l>1)for(let a=0;a<s/i;a++){const e=a*i;for(let t=0;t<i;t++)o[t]=Math.max(o[t],u(c[e+t],0,n).length)}return o}(e,t,n,s),o=t.length,l=d(e,t,n,s,i),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${o}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(l.map((e=>"    "+e)).join("\n")),c.join("\n")}function u(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(o))} + ${parseFloat(e[1].toFixed(o))}j`:(0,a.Kg)(e)?`'${e}'`:"bool"===n?c(e):parseFloat(e.toFixed(o)).toString(),(0,a.av)(r,t)}function c(e){return 0===e?"false":"true"}function d(e,t,n,r,a){let o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const l="complex64"===n?2:1,p=t[0],f=t.length;if(0===f){if("complex64"===n){return[u(h(e)[0],0,n)]}return"bool"===n?[c(e[0])]:[e[0].toString()]}if(1===f){if(p>s){const t=i*l;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-i)*l,p*l));return"complex64"===n&&(r=h(r),s=h(s)),["["+r.map(((e,t)=>u(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>u(e,a[p-i+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>u(e,a[t],n))).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*l,b=[];if(p>s){for(let t=0;t<i;t++){const r=t*y,s=r+y;b.push(...d(e.slice(r,s),m,n,g,a,!1))}b.push("...");for(let t=p-i;t<p;t++){const r=t*y,s=r+y;b.push(...d(e.slice(r,s),m,n,g,a,t===p-1))}}else for(let s=0;s<p;s++){const t=s*y,r=t+y;b.push(...d(e.slice(t,r),m,n,g,a,s===p-1))}const v=2===f?",":"";b[0]="["+(p>0?b[0]+v:"");for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+v;let x=",\n";for(let s=2;s<f;s++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(o?"":x),b}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var p=n(8977);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.Ze(e),null!=n){const e=n.length;a.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.Ab(t,this.size),this.strides=(0,a.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a.vA(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const s of t){if(s<0||s>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=this.strides[s]*t[s];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function v(e){g=e}function x(e){y=e}class w{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.Ze(e),this.strides=(0,a.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return l(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,r.m)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class S extends w{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>i});var r=n(9494),a=n(8075),s=n(1426);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),c(e,t,n))}}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>u,YT:()=>h,j1:()=>p});var r=n(2164),a=n(5399),s=n(9494),i=n(8075),o=n(8977),l=n(1426);function u(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.Nw)(e))return[e.buffer.size/(null==t?4:(0,l.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,l.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,l.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,l.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let a=0;a<e.length;++a)c(e[a],r,n.concat(a))}function d(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.tp)())return d(a,e.dtype,t,n),e;let i=(0,l.X$)(e);if("string"!==i&&["bool","int32","float32"].indexOf(a)>=0&&(i=a),d(a,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=u(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.T2.makeTensor(h,c,i)}function p(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>h(e,`${t}[${a}]`,n,r)))}},8075:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>u,ch:()=>c,rg:()=>r}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:a,bool:s,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>N,distSquared:()=>s.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>l,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>I,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>k,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>w});var r=n(5399),a=n(5767),s=n(1426),i=n(8818);const o=n.n(i)()||i;function l(e){return o.fromString(e,!0,16)}const u=l("c3a5c85c97cb3127"),c=l("b492b66fbe98f273"),d=l("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function b(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=g(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(g(a,44)),[a.add(r),s.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8);return y(g(a,37).mul(n).add(r),g(r,25).add(a).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(d.mul(n).xor(u.mul(r))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(c),a=f(e,8),s=f(e,t-8).mul(n),i=f(e,t-16).mul(d);return y(g(r.add(a),43).add(g(s,30)).add(i),r.add(g(a.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),s=f(e,t-8).mul(n),i=f(e,t-16).mul(d),o=g(r.add(a),43).add(g(s,30)).add(i),l=y(o,r.add(g(a.add(d),18)).add(s),n),u=f(e,16).mul(n),c=f(e,24),h=o.add(f(e,t-32)).mul(n),p=l.add(f(e,t-24)).mul(n);return y(g(u.add(c),43).add(g(h,30)).add(p),u.add(g(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(c).add(113),s=h(a.mul(d).add(113)).mul(d),i=[o.UZERO,o.UZERO],l=[o.UZERO,o.UZERO];r=r.mul(d).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{r=g(r.add(a).add(i[0]).add(f(e,p+8)),37).mul(c),a=g(a.add(i[1]).add(f(e,p+48)),42).mul(c),r=r.xor(l[1]),a=a.add(i[0]).add(f(e,p+40)),s=g(s.add(l[0]),33).mul(c),i=b(e,p,i[1].mul(c),r.add(l[0])),l=b(e,p+32,s.add(l[1]),a.add(f(e,p+16))),[s,r]=[r,s],p+=64}while(p!==v);const w=c.add(s.and(255).shl(1));return p=x,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),r=g(r.add(a).add(i[0]).add(f(e,p+8)),37).mul(w),a=g(a.add(i[1]).add(f(e,p+48)),42).mul(w),r=r.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add(f(e,p+40))),s=g(s.add(l[0]),33).mul(w),i=b(e,p,i[1].mul(w),r.add(l[0])),l=b(e,p+32,s.add(l[1]),a.add(f(e,p+16))),[s,r]=[r,s],y(y(i[0],l[0],w).add(h(a).mul(u)).add(s),y(i[1],l[1],w).add(r),w)}function x(e,t){return"string"===t?T(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,r._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r._K)().platform.now()}function S(e,t){return(0,r._K)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function I(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,a.Y)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let r=0;r<e.length;++r)C(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)C(e[a],t,n)}return t}},1426:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((a,s)=>{let i=0;const o=()=>{if(e())return void a();i++;const l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()}))}function T(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function D(e){return"string"===typeof e||e instanceof String}function O(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":D(e)?"string":O(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*o,i,n,r)}return a}function V(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function U(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=j(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Y(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>E,BE:()=>_,E6:()=>b,Et:()=>M,FZ:()=>G,HO:()=>p,Kg:()=>D,Lm:()=>O,O3:()=>h,P8:()=>w,SA:()=>Y,SL:()=>F,Sf:()=>m,Tn:()=>L,Ty:()=>j,Ur:()=>B,X$:()=>z,XT:()=>T,Y6:()=>N,Ze:()=>f,_k:()=>K,_q:()=>S,a0:()=>a,av:()=>k,c7:()=>H,ce:()=>C,cz:()=>l,eV:()=>i,e_:()=>g,gS:()=>x,gx:()=>I,jv:()=>R,k4:()=>r,lK:()=>P,nd:()=>A,o2:()=>U,oO:()=>c,qE:()=>s,r1:()=>y,sX:()=>q,so:()=>u,vA:()=>d,wg:()=>o,xn:()=>$,yL:()=>X,ym:()=>v,yw:()=>V})},8818:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%h|0,e/h|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+l),n);if(l<8){var h=o(u(n,l));s=s.mul(h).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var v=i(1,!0);n.UONE=v;var x=i(-1);n.NEG_ONE=x;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),c=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=a+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=i*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=i*h)>>>16,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+a*h+s*c+i*u,l((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(a);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),a=a.sub(p)}return s},T.div=T.divide,T.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return l(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2730:(e,t,n)=>{"use strict";var r=n(5043),a=n(8853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,r,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),T=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),A=Symbol.for("react.suspense"),$=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function O(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,z=Object.assign;function L(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function B(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var a=u.stack.split("\n"),s=r.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==s[o]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?L(e):""}function W(e){switch(e.tag){case 5:return L(e.type);case 16:return L("Lazy");case 13:return L("Suspense");case 19:return L("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case N:return"Profiler";case T:return"StrictMode";case A:return"Suspense";case $:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===T?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function H(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=j(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function q(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function X(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function Q(e,t){Z(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function se(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Te=null;function Ne(e){if(e=va(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wa(t),ke(e.stateNode,e.type,t))}}function Ie(e){Se?Te?Te.push(e):Te=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Te;if(Te=Se=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ee(e,t){return e(t)}function Ae(){}var $e=!1;function _e(e,t,n){if($e)return e(t,n);$e=!0;try{return Ee(e,t,n)}finally{$e=!1,(null!==Se||null!==Te)&&(Ae(),Ce())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=wa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var Fe=!1;if(c)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ce){Fe=!1}function Oe(e,t,n,r,a,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Me=!1,ze=null,Le=!1,Pe=null,Be={onError:function(e){Me=!0,ze=e}};function We(e,t,n,r,a,s,i,o,l){Me=!1,ze=null,Oe.apply(Be,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ge(e){if(Ve(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ge(a),e;if(i===r)return Ge(a),t;i=i.sibling}throw Error(s(188))}if(n.return!==r.return)n=a,r=i;else{for(var o=!1,l=a.child;l;){if(l===n){o=!0,n=a,r=i;break}if(l===r){o=!0,r=a,n=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===n){o=!0,n=i,r=a;break}if(l===r){o=!0,r=i,n=a;break}l=l.sibling}if(!o)throw Error(s(189))}}if(n.alternate!==r)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=He(e);if(null!==t)return t;e=e.sibling}return null}var Ye=a.unstable_scheduleCallback,qe=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,Xe=a.unstable_requestPaint,Ze=a.unstable_now,Qe=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,st=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,s=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~a;0!==o?r=dt(o):0!==(s&=i)&&(r=dt(s))}else 0!==(i=n&~a)?r=dt(i):0!==s&&(r=dt(s));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&a)&&((a=r&-r)>=(s=t&-t)||16===a&&0!==(4194240&s)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Tt,Nt,It=!1,Ct=[],Et=null,At=null,$t=null,_t=new Map,Rt=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":At=null;break;case"mouseover":case"mouseout":$t=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Mt(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:s,targetContainers:[a]},null!==t&&(null!==(t=va(t))&&kt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function zt(e){var t=ba(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void Nt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Lt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=va(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);xe=r,n.target.dispatchEvent(r),xe=null,t.shift()}return!0}function Pt(e,t,n){Lt(e)&&n.delete(t)}function Bt(){It=!1,null!==Et&&Lt(Et)&&(Et=null),null!==At&&Lt(At)&&(At=null),null!==$t&&Lt($t)&&($t=null),_t.forEach(Pt),Rt.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,It||(It=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Bt)))}function Vt(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var r=Ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Et&&Wt(Et,e),null!==At&&Wt(At,e),null!==$t&&Wt($t,e),_t.forEach(t),Rt.forEach(t),n=0;n<Ft.length;n++)(r=Ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)zt(n),null===n.blockedOn&&Ft.shift()}var Ut=x.ReactCurrentBatchConfig,Gt=!0;function jt(e,t,n,r){var a=vt,s=Ut.transition;Ut.transition=null;try{vt=1,Yt(e,t,n,r)}finally{vt=a,Ut.transition=s}}function Ht(e,t,n,r){var a=vt,s=Ut.transition;Ut.transition=null;try{vt=4,Yt(e,t,n,r)}finally{vt=a,Ut.transition=s}}function Yt(e,t,n,r){if(Gt){var a=Kt(e,t,n,r);if(null===a)Gr(e,t,r,qt,n),Ot(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Et=Mt(Et,e,t,n,r,a),!0;case"dragenter":return At=Mt(At,e,t,n,r,a),!0;case"mouseover":return $t=Mt($t,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return _t.set(s,Mt(_t.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,Rt.set(s,Mt(Rt.get(s)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Ot(e,r),4&t&&-1<Dt.indexOf(e)){for(;null!==a;){var s=va(a);if(null!==s&&wt(s),null===(s=Kt(e,t,n,r))&&Gr(e,t,r,qt,n),s===a)break;a=s}null!==a&&r.stopPropagation()}else Gr(e,t,r,null,n)}}var qt=null;function Kt(e,t,n,r){if(qt=null,null!==(e=ba(e=we(r))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return qt=e,null}function Xt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Qe()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Zt=null,Qt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Qt,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[s-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,s){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),dn=z({},un,{view:0,detail:0}),hn=an(dn),pn=z({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(sn=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=sn=0,ln=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=an(pn),mn=an(z({},pn,{dataTransfer:0})),gn=an(z({},dn,{relatedTarget:0})),yn=an(z({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=an(bn),xn=an(z({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Nn(){return Tn}var In=z({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=an(In),En=an(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),An=an(z({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),$n=an(z({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=an(_n),Fn=[9,13,27,32],Dn=c&&"CompositionEvent"in window,On=null;c&&"documentMode"in document&&(On=document.documentMode);var Mn=c&&"TextEvent"in window&&!On,zn=c&&(!Dn||On&&8<On&&11>=On),Ln=String.fromCharCode(32),Pn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function jn(e,t,n,r){Ie(r),0<(t=Hr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,Yn=null;function qn(e){Lr(e,0)}function Kn(e){if(Y(xa(e)))return e}function Xn(e,t){if("change"===e)return t}var Zn=!1;if(c){var Qn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"===typeof er.oninput}Qn=Jn}else Qn=!1;Zn=Qn&&(!document.documentMode||9<document.documentMode)}function tr(){Hn&&(Hn.detachEvent("onpropertychange",nr),Yn=Hn=null)}function nr(e){if("value"===e.propertyName&&Kn(Yn)){var t=[];jn(t,Yn,e,we(e)),_e(qn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Yn=n,(Hn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Yn)}function sr(e,t){if("click"===e)return Kn(t)}function ir(e,t){if("input"===e||"change"===e)return Kn(t)}var or="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(or(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!or(e[a],t[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hr(){for(var e=window,t=q();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=q((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=hr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,s=Math.min(r.start,a);r=void 0===r.end?s:Math.min(r.end,a),!e.extend&&s>r&&(a=r,r=s,s=a),a=cr(n,s);var i=cr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,br=null,vr=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==gr||gr!==q(r)||("selectionStart"in(r=gr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=Hr(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function wr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Sr={},Tr={};function Nr(e){if(Sr[e])return Sr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Tr)return Sr[e]=n[t];return e}c&&(Tr=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Ir=Nr("animationend"),Cr=Nr("animationiteration"),Er=Nr("animationstart"),Ar=Nr("transitionend"),$r=new Map,_r="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Rr(e,t){$r.set(e,t),l(t,[e])}for(var Fr=0;Fr<_r.length;Fr++){var Dr=_r[Fr];Rr(Dr.toLowerCase(),"on"+(Dr[0].toUpperCase()+Dr.slice(1)))}Rr(Ir,"onAnimationEnd"),Rr(Cr,"onAnimationIteration"),Rr(Er,"onAnimationStart"),Rr("dblclick","onDoubleClick"),Rr("focusin","onFocus"),Rr("focusout","onBlur"),Rr(Ar,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Or="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Or));function zr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,o,l,u){if(We.apply(this,arguments),Me){if(!Me)throw Error(s(198));var c=ze;Me=!1,ze=null,Le||(Le=!0,Pe=c)}}(r,t,void 0,e),e.currentTarget=null}function Lr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;zr(a,o,u),s=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;zr(a,o,u),s=l}}}if(Le)throw e=Pe,Le=!1,Pe=null,e}function Pr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||(Ur(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Ur(n,e,r,t)}var Wr="_reactListening"+Math.random().toString(36).slice(2);function Vr(e){if(!e[Wr]){e[Wr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wr]||(t[Wr]=!0,Br("selectionchange",!1,t))}}function Ur(e,t,n,r){switch(Xt(t)){case 1:var a=jt;break;case 4:a=Ht;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Gr(e,t,n,r,a){var s=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=ba(o)))return;if(5===(l=i.tag)||6===l){r=s=i;continue e}o=o.parentNode}}r=r.return}_e((function(){var r=s,a=we(n),i=[];e:{var o=$r.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Cn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=An;break;case Ir:case Cr:case Er:l=yn;break;case Ar:l=$n;break;case"scroll":l=hn;break;case"wheel":l=Rn;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=En}var c=0!==(4&t),d=!c&&"scroll"===e,h=c?null!==o?o+"Capture":null:o;c=[];for(var p,f=r;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Re(f,h))&&c.push(jr(f,m,p)))),d)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,a),i.push({event:o,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===xe||!(u=n.relatedTarget||n.fromElement)||!ba(u)&&!u[fa])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ba(u):null)&&(u!==(d=Ve(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==l?o:xa(l),p=null==u?o:xa(u),(o=new c(m,f+"leave",l,n,a)).target=d,o.relatedTarget=p,m=null,ba(a)===r&&((c=new c(h,f+"enter",u,n,a)).target=p,c.relatedTarget=d,m=c),d=m,l&&u)e:{for(h=u,f=0,p=c=l;p;p=Yr(p))f++;for(p=0,m=h;m;m=Yr(m))p++;for(;0<f-p;)c=Yr(c),f--;for(;0<p-f;)h=Yr(h),p--;for(;f--;){if(c===h||null!==h&&c===h.alternate)break e;c=Yr(c),h=Yr(h)}c=null}else c=null;null!==l&&qr(i,o,l,c,!1),null!==u&&null!==d&&qr(i,d,u,c,!0)}if("select"===(l=(o=r?xa(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Xn;else if(Gn(o))if(Zn)g=ir;else{g=ar;var y=rr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=sr);switch(g&&(g=g(e,r))?jn(i,g,n,a):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ee(o,"number",o.value)),y=r?xa(r):window,e){case"focusin":(Gn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,br=null);break;case"focusout":br=yr=gr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,xr(i,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":xr(i,n,a)}var b;if(Dn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Vn?Bn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Vn&&(b=en()):(Qt="value"in(Zt=a)?Zt.value:Zt.textContent,Vn=!0)),0<(y=Hr(r,v)).length&&(v=new xn(v,e,null,n,a),i.push({event:v,listeners:y}),b?v.data=b:null!==(b=Wn(n))&&(v.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,Ln);case"textInput":return(e=t.data)===Ln&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Qt=Zt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Hr(r,"onBeforeInput")).length&&(a=new xn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b))}Lr(i,t)}))}function jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Hr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Re(e,n))&&r.unshift(jr(e,s,a)),null!=(s=Re(e,t))&&r.push(jr(e,s,a))),e=e.return}return r}function Yr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qr(e,t,n,r,a){for(var s=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,a?null!=(l=Re(n,s))&&i.unshift(jr(n,l,o)):a||null!=(l=Re(n,s))&&i.push(jr(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Kr=/\r\n?/g,Xr=/\u0000|\uFFFD/g;function Zr(e){return("string"===typeof e?e:""+e).replace(Kr,"\n").replace(Xr,"")}function Qr(e,t,n){if(t=Zr(t),Zr(e)!==t&&n)throw Error(s(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"===typeof setTimeout?setTimeout:void 0,aa="function"===typeof clearTimeout?clearTimeout:void 0,sa="function"===typeof Promise?Promise:void 0,ia="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sa?function(e){return sa.resolve(null).then(e).catch(oa)}:ra;function oa(e){setTimeout((function(){throw e}))}function la(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Vt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Vt(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),ha="__reactFiber$"+da,pa="__reactProps$"+da,fa="__reactContainer$"+da,ma="__reactEvents$"+da,ga="__reactListeners$"+da,ya="__reactHandles$"+da;function ba(e){var t=e[ha];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fa]||n[ha]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[ha])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function va(e){return!(e=e[ha]||e[fa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wa(e){return e[pa]||null}var ka=[],Sa=-1;function Ta(e){return{current:e}}function Na(e){0>Sa||(e.current=ka[Sa],ka[Sa]=null,Sa--)}function Ia(e,t){Sa++,ka[Sa]=e.current,e.current=t}var Ca={},Ea=Ta(Ca),Aa=Ta(!1),$a=Ca;function _a(e,t){var n=e.type.contextTypes;if(!n)return Ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Ra(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Fa(){Na(Aa),Na(Ea)}function Da(e,t,n){if(Ea.current!==Ca)throw Error(s(168));Ia(Ea,t),Ia(Aa,n)}function Oa(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(s(108,U(e)||"Unknown",a));return z({},n,r)}function Ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ca,$a=Ea.current,Ia(Ea,e),Ia(Aa,Aa.current),!0}function za(e,t,n){var r=e.stateNode;if(!r)throw Error(s(169));n?(e=Oa(e,t,$a),r.__reactInternalMemoizedMergedChildContext=e,Na(Aa),Na(Ea),Ia(Ea,e)):Na(Aa),Ia(Aa,n)}var La=null,Pa=!1,Ba=!1;function Wa(e){null===La?La=[e]:La.push(e)}function Va(){if(!Ba&&null!==La){Ba=!0;var e=0,t=vt;try{var n=La;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}La=null,Pa=!1}catch(a){throw null!==La&&(La=La.slice(e+1)),Ye(Je,Va),a}finally{vt=t,Ba=!1}}return null}var Ua=[],Ga=0,ja=null,Ha=0,Ya=[],qa=0,Ka=null,Xa=1,Za="";function Qa(e,t){Ua[Ga++]=Ha,Ua[Ga++]=ja,ja=e,Ha=t}function Ja(e,t,n){Ya[qa++]=Xa,Ya[qa++]=Za,Ya[qa++]=Ka,Ka=e;var r=Xa;e=Za;var a=32-it(r)-1;r&=~(1<<a),n+=1;var s=32-it(t)+a;if(30<s){var i=a-a%5;s=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Xa=1<<32-it(t)+a|n<<a|r,Za=s+e}else Xa=1<<s|n<<a|r,Za=e}function es(e){null!==e.return&&(Qa(e,1),Ja(e,1,0))}function ts(e){for(;e===ja;)ja=Ua[--Ga],Ua[Ga]=null,Ha=Ua[--Ga],Ua[Ga]=null;for(;e===Ka;)Ka=Ya[--qa],Ya[qa]=null,Za=Ya[--qa],Ya[qa]=null,Xa=Ya[--qa],Ya[qa]=null}var ns=null,rs=null,as=!1,ss=null;function is(e,t){var n=_u(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function os(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,rs=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,rs=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ka?{id:Xa,overflow:Za}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_u(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,rs=null,!0);default:return!1}}function ls(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function us(e){if(as){var t=rs;if(t){var n=t;if(!os(e,t)){if(ls(e))throw Error(s(418));t=ua(n.nextSibling);var r=ns;t&&os(e,t)?is(r,n):(e.flags=-4097&e.flags|2,as=!1,ns=e)}}else{if(ls(e))throw Error(s(418));e.flags=-4097&e.flags|2,as=!1,ns=e}}}function cs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ds(e){if(e!==ns)return!1;if(!as)return cs(e),as=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=rs)){if(ls(e))throw hs(),Error(s(418));for(;t;)is(e,t),t=ua(t.nextSibling)}if(cs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){rs=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}rs=null}}else rs=ns?ua(e.stateNode.nextSibling):null;return!0}function hs(){for(var e=rs;e;)e=ua(e.nextSibling)}function ps(){rs=ns=null,as=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var r=n.stateNode}if(!r)throw Error(s(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function vs(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var s=n.type;return s===S?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===R&&bs(s)===t.type)?((r=a(t,n.props)).ref=gs(e,t,n),r.return=e,r):((r=Du(n.type,n.key,n.props,null,e.mode,r)).ref=gs(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Lu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,s){return null===t||7!==t.tag?((t=Ou(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case k:return(t=Lu(t,e.mode,n)).return=e,t;case R:return h(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Ou(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==a?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null;case R:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||O(n))return null!==a?null:d(e,t,n,r,null);ys(e,n)}return null}function f(e,t,n,r,a){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case R:return f(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||O(r))return d(t,e=e.get(n)||null,r,a,null);ys(t,r)}return null}function m(a,s,o,l){for(var u=null,c=null,d=s,m=s=0,g=null;null!==d&&m<o.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(a,d,o[m],l);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(a,d),s=i(y,s,m),null===c?u=y:c.sibling=y,c=y,d=g}if(m===o.length)return n(a,d),as&&Qa(a,m),u;if(null===d){for(;m<o.length;m++)null!==(d=h(a,o[m],l))&&(s=i(d,s,m),null===c?u=d:c.sibling=d,c=d);return as&&Qa(a,m),u}for(d=r(a,d);m<o.length;m++)null!==(g=f(d,a,m,o[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=i(g,s,m),null===c?u=g:c.sibling=g,c=g);return e&&d.forEach((function(e){return t(a,e)})),as&&Qa(a,m),u}function g(a,o,l,u){var c=O(l);if("function"!==typeof c)throw Error(s(150));if(null==(l=c.call(l)))throw Error(s(151));for(var d=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(a,m,b.value,u);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(a,m),o=i(v,o,g),null===d?c=v:d.sibling=v,d=v,m=y}if(b.done)return n(a,m),as&&Qa(a,g),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=h(a,b.value,u))&&(o=i(b,o,g),null===d?c=b:d.sibling=b,d=b);return as&&Qa(a,g),c}for(m=r(a,m);!b.done;g++,b=l.next())null!==(b=f(m,a,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=i(b,o,g),null===d?c=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(a,e)})),as&&Qa(a,g),c}return function e(r,s,i,l){if("object"===typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=s;null!==c;){if(c.key===u){if((u=i.type)===S){if(7===c.tag){n(r,c.sibling),(s=a(c,i.props.children)).return=r,r=s;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===R&&bs(u)===c.type){n(r,c.sibling),(s=a(c,i.props)).ref=gs(r,c,i),s.return=r,r=s;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===S?((s=Ou(i.props.children,r.mode,l,i.key)).return=r,r=s):((l=Du(i.type,i.key,i.props,null,r.mode,l)).ref=gs(r,s,i),l.return=r,r=l)}return o(r);case k:e:{for(c=i.key;null!==s;){if(s.key===c){if(4===s.tag&&s.stateNode.containerInfo===i.containerInfo&&s.stateNode.implementation===i.implementation){n(r,s.sibling),(s=a(s,i.children||[])).return=r,r=s;break e}n(r,s);break}t(r,s),s=s.sibling}(s=Lu(i,r.mode,l)).return=r,r=s}return o(r);case R:return e(r,s,(c=i._init)(i._payload),l)}if(te(i))return m(r,s,i,l);if(O(i))return g(r,s,i,l);ys(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==s&&6===s.tag?(n(r,s.sibling),(s=a(s,i)).return=r,r=s):(n(r,s),(s=zu(i,r.mode,l)).return=r,r=s),o(r)):n(r,s)}}var xs=vs(!0),ws=vs(!1),ks=Ta(null),Ss=null,Ts=null,Ns=null;function Is(){Ns=Ts=Ss=null}function Cs(e){var t=ks.current;Na(ks),e._currentValue=t}function Es(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function As(e,t){Ss=e,Ns=Ts=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vo=!0),e.firstContext=null)}function $s(e){var t=e._currentValue;if(Ns!==e)if(e={context:e,memoizedValue:t,next:null},null===Ts){if(null===Ss)throw Error(s(308));Ts=e,Ss.dependencies={lanes:0,firstContext:e}}else Ts=Ts.next=e;return t}var _s=null;function Rs(e){null===_s?_s=[e]:_s.push(e)}function Fs(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Rs(t)):(n.next=a.next,a.next=n),t.interleaved=n,Ds(e,r)}function Ds(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Os=!1;function Ms(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ls(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ps(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&El)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Ds(e,n)}return null===(a=r.interleaved)?(t.next=t,Rs(r)):(t.next=a.next,a.next=t),r.interleaved=t,Ds(e,n)}function Bs(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Ws(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=i:s=s.next=i,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Vs(e,t,n,r){var a=e.updateQueue;Os=!1;var s=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?s=u:i.next=u,i=l;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(null!==s){var d=a.baseState;for(i=0,c=u=l=null,o=s;;){var h=o.lane,p=o.eventTime;if((r&h)===h){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=z({},d,h);break e;case 2:Os=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(h=a.effects)?a.effects=[o]:h.push(o))}else p={eventTime:p,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=p,l=d):c=c.next=p,i|=h;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(h=o).next,h.next=null,a.lastBaseUpdate=h,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===s&&(a.shared.lanes=0);Ml|=i,e.lanes=i,e.memoizedState=d}}function Us(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!==typeof a)throw Error(s(191,a));a.call(r)}}}var Gs={},js=Ta(Gs),Hs=Ta(Gs),Ys=Ta(Gs);function qs(e){if(e===Gs)throw Error(s(174));return e}function Ks(e,t){switch(Ia(Ys,t),Ia(Hs,e),Ia(js,Gs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Na(js),Ia(js,t)}function Xs(){Na(js),Na(Hs),Na(Ys)}function Zs(e){qs(Ys.current);var t=qs(js.current),n=le(t,e.type);t!==n&&(Ia(Hs,e),Ia(js,n))}function Qs(e){Hs.current===e&&(Na(js),Na(Hs))}var Js=Ta(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function ni(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ri=x.ReactCurrentDispatcher,ai=x.ReactCurrentBatchConfig,si=0,ii=null,oi=null,li=null,ui=!1,ci=!1,di=0,hi=0;function pi(){throw Error(s(321))}function fi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function mi(e,t,n,r,a,i){if(si=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ri.current=null===e||null===e.memoizedState?Qi:Ji,e=n(r,a),ci){i=0;do{if(ci=!1,di=0,25<=i)throw Error(s(301));i+=1,li=oi=null,t.updateQueue=null,ri.current=eo,e=n(r,a)}while(ci)}if(ri.current=Zi,t=null!==oi&&null!==oi.next,si=0,li=oi=ii=null,ui=!1,t)throw Error(s(300));return e}function gi(){var e=0!==di;return di=0,e}function yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===li?ii.memoizedState=li=e:li=li.next=e,li}function bi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===li?ii.memoizedState:li.next;if(null!==t)li=t,oi=e;else{if(null===e)throw Error(s(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===li?ii.memoizedState=li=e:li=li.next=e}return li}function vi(e,t){return"function"===typeof t?t(e):t}function xi(e){var t=bi(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=oi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var o=a.next;a.next=i.next,i.next=o}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=o=null,u=null,c=i;do{var d=c.lane;if((si&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var h={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=h,o=r):u=u.next=h,ii.lanes|=d,Ml|=d}c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=l,or(r,t.memoizedState)||(vo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,ii.lanes|=i,Ml|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function wi(e){var t=bi(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var o=a=a.next;do{i=e(i,o.action),o=o.next}while(o!==a);or(i,t.memoizedState)||(vo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ki(){}function Si(e,t){var n=ii,r=bi(),a=t(),i=!or(r.memoizedState,a);if(i&&(r.memoizedState=a,vo=!0),r=r.queue,Oi(Ii.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==li&&1&li.memoizedState.tag){if(n.flags|=2048,$i(9,Ni.bind(null,n,r,a,t),void 0,null),null===Al)throw Error(s(349));0!==(30&si)||Ti(n,t,a)}return a}function Ti(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ni(e,t,n,r){t.value=n,t.getSnapshot=r,Ci(t)&&Ei(e)}function Ii(e,t,n){return n((function(){Ci(t)&&Ei(e)}))}function Ci(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(r){return!0}}function Ei(e){var t=Ds(e,1);null!==t&&nu(t,e,1,-1)}function Ai(e){var t=yi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vi,lastRenderedState:e},t.queue=e,e=e.dispatch=Yi.bind(null,ii,e),[t.memoizedState,e]}function $i(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function _i(){return bi().memoizedState}function Ri(e,t,n,r){var a=yi();ii.flags|=e,a.memoizedState=$i(1|t,n,void 0,void 0===r?null:r)}function Fi(e,t,n,r){var a=bi();r=void 0===r?null:r;var s=void 0;if(null!==oi){var i=oi.memoizedState;if(s=i.destroy,null!==r&&fi(r,i.deps))return void(a.memoizedState=$i(t,n,s,r))}ii.flags|=e,a.memoizedState=$i(1|t,n,s,r)}function Di(e,t){return Ri(8390656,8,e,t)}function Oi(e,t){return Fi(2048,8,e,t)}function Mi(e,t){return Fi(4,2,e,t)}function zi(e,t){return Fi(4,4,e,t)}function Li(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Pi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fi(4,4,Li.bind(null,t,e),n)}function Bi(){}function Wi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Vi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ui(e,t,n){return 0===(21&si)?(e.baseState&&(e.baseState=!1,vo=!0),e.memoizedState=n):(or(n,t)||(n=mt(),ii.lanes|=n,Ml|=n,e.baseState=!0),t)}function Gi(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=ai.transition;ai.transition={};try{e(!1),t()}finally{vt=n,ai.transition=r}}function ji(){return bi().memoizedState}function Hi(e,t,n){var r=tu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},qi(e))Ki(t,n);else if(null!==(n=Fs(e,t,n,r))){nu(n,e,r,eu()),Xi(n,t,r)}}function Yi(e,t,n){var r=tu(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(qi(e))Ki(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,n);if(a.hasEagerState=!0,a.eagerState=o,or(o,i)){var l=t.interleaved;return null===l?(a.next=a,Rs(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(u){}null!==(n=Fs(e,t,a,r))&&(nu(n,e,r,a=eu()),Xi(n,t,r))}}function qi(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function Ki(e,t){ci=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Xi(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Zi={readContext:$s,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useInsertionEffect:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useDeferredValue:pi,useTransition:pi,useMutableSource:pi,useSyncExternalStore:pi,useId:pi,unstable_isNewReconciler:!1},Qi={readContext:$s,useCallback:function(e,t){return yi().memoizedState=[e,void 0===t?null:t],e},useContext:$s,useEffect:Di,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ri(4194308,4,Li.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ri(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ri(4,2,e,t)},useMemo:function(e,t){var n=yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Hi.bind(null,ii,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yi().memoizedState=e},useState:Ai,useDebugValue:Bi,useDeferredValue:function(e){return yi().memoizedState=e},useTransition:function(){var e=Ai(!1),t=e[0];return e=Gi.bind(null,e[1]),yi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ii,a=yi();if(as){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Al)throw Error(s(349));0!==(30&si)||Ti(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Di(Ii.bind(null,r,i,e),[e]),r.flags|=2048,$i(9,Ni.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=yi(),t=Al.identifierPrefix;if(as){var n=Za;t=":"+t+"R"+(n=(Xa&~(1<<32-it(Xa)-1)).toString(32)+n),0<(n=di++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=hi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Ji={readContext:$s,useCallback:Wi,useContext:$s,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:zi,useMemo:Vi,useReducer:xi,useRef:_i,useState:function(){return xi(vi)},useDebugValue:Bi,useDeferredValue:function(e){return Ui(bi(),oi.memoizedState,e)},useTransition:function(){return[xi(vi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Si,useId:ji,unstable_isNewReconciler:!1},eo={readContext:$s,useCallback:Wi,useContext:$s,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:zi,useMemo:Vi,useReducer:wi,useRef:_i,useState:function(){return wi(vi)},useDebugValue:Bi,useDeferredValue:function(e){var t=bi();return null===oi?t.memoizedState=e:Ui(t,oi.memoizedState,e)},useTransition:function(){return[wi(vi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Si,useId:ji,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ro={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),s=Ls(r,a);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,a))&&(nu(t,e,a,r),Bs(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),s=Ls(r,a);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,a))&&(nu(t,e,a,r),Bs(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),a=Ls(n,r);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=Ps(e,a,r))&&(nu(t,e,r,n),Bs(t,e,r))}};function ao(e,t,n,r,a,s,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,i):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(a,s))}function so(e,t,n){var r=!1,a=Ca,s=t.contextType;return"object"===typeof s&&null!==s?s=$s(s):(a=Ra(t)?$a:Ea.current,s=(r=null!==(r=t.contextTypes)&&void 0!==r)?_a(e,a):Ca),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ro,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function io(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ro.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},Ms(e);var s=t.contextType;"object"===typeof s&&null!==s?a.context=$s(s):(s=Ra(t)?$a:Ea.current,a.context=_a(e,s)),a.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(no(e,t,s,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ro.enqueueReplaceState(a,a.state,null),Vs(e,n,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function lo(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var a=n}catch(s){a="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:a,digest:null}}function uo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function co(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var ho="function"===typeof WeakMap?WeakMap:Map;function po(e,t,n){(n=Ls(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Gl||(Gl=!0,jl=r),co(0,t)},n}function fo(e,t,n){(n=Ls(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){co(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){co(0,t),"function"!==typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new ho;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Nu.bind(null,e,t,n),t.then(e,e))}function go(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yo(e,t,n,r,a){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ls(-1,1)).tag=2,Ps(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var bo=x.ReactCurrentOwner,vo=!1;function xo(e,t,n,r){t.child=null===e?ws(t,null,n,r):xs(t,e.child,n,r)}function wo(e,t,n,r,a){n=n.render;var s=t.ref;return As(t,a),r=mi(e,t,n,r,s,a),n=gi(),null===e||vo?(as&&n&&es(t),t.flags|=1,xo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Go(e,t,a))}function ko(e,t,n,r,a){if(null===e){var s=n.type;return"function"!==typeof s||Ru(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,So(e,t,s,r,a))}if(s=e.child,0===(e.lanes&a)){var i=s.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(i,r)&&e.ref===t.ref)return Go(e,t,a)}return t.flags|=1,(e=Fu(s,r)).ref=t.ref,e.return=t,t.child=e}function So(e,t,n,r,a){if(null!==e){var s=e.memoizedProps;if(lr(s,r)&&e.ref===t.ref){if(vo=!1,t.pendingProps=r=s,0===(e.lanes&a))return t.lanes=e.lanes,Go(e,t,a);0!==(131072&e.flags)&&(vo=!0)}}return Io(e,t,n,r,a)}function To(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ia(Fl,Rl),Rl|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ia(Fl,Rl),Rl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==s?s.baseLanes:n,Ia(Fl,Rl),Rl|=r}else null!==s?(r=s.baseLanes|n,t.memoizedState=null):r=n,Ia(Fl,Rl),Rl|=r;return xo(e,t,a,n),t.child}function No(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Io(e,t,n,r,a){var s=Ra(n)?$a:Ea.current;return s=_a(t,s),As(t,a),n=mi(e,t,n,r,s,a),r=gi(),null===e||vo?(as&&r&&es(t),t.flags|=1,xo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Go(e,t,a))}function Co(e,t,n,r,a){if(Ra(n)){var s=!0;Ma(t)}else s=!1;if(As(t,a),null===t.stateNode)Uo(e,t),so(t,n,r),oo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=$s(u):u=_a(t,u=Ra(n)?$a:Ea.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;d||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||l!==u)&&io(t,i,r,u),Os=!1;var h=t.memoizedState;i.state=h,Vs(t,r,i,a),l=t.memoizedState,o!==r||h!==l||Aa.current||Os?("function"===typeof c&&(no(t,n,c,r),l=t.memoizedState),(o=Os||ao(t,n,o,r,h,l,u))?(d||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"===typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,zs(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:to(t.type,o),i.props=u,d=t.pendingProps,h=i.context,"object"===typeof(l=n.contextType)&&null!==l?l=$s(l):l=_a(t,l=Ra(n)?$a:Ea.current);var p=n.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==d||h!==l)&&io(t,i,r,l),Os=!1,h=t.memoizedState,i.state=h,Vs(t,r,i,a);var f=t.memoizedState;o!==d||h!==f||Aa.current||Os?("function"===typeof p&&(no(t,n,p,r),f=t.memoizedState),(u=Os||ao(t,n,u,r,h,f,l)||!1)?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,l),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,l)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=l,r=u):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),r=!1)}return Eo(e,t,n,r,s,a)}function Eo(e,t,n,r,a,s){No(e,t);var i=0!==(128&t.flags);if(!r&&!i)return a&&za(t,n,!1),Go(e,t,s);r=t.stateNode,bo.current=t;var o=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=xs(t,e.child,null,s),t.child=xs(t,null,o,s)):xo(e,t,o,s),t.memoizedState=r.state,a&&za(t,n,!0),t.child}function Ao(e){var t=e.stateNode;t.pendingContext?Da(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Da(0,t.context,!1),Ks(e,t.containerInfo)}function $o(e,t,n,r,a){return ps(),fs(a),t.flags|=256,xo(e,t,n,r),t.child}var _o,Ro,Fo,Do,Oo={dehydrated:null,treeContext:null,retryLane:0};function Mo(e){return{baseLanes:e,cachePool:null,transitions:null}}function zo(e,t,n){var r,a=t.pendingProps,i=Js.current,o=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Ia(Js,1&i),null===e)return us(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=a.children,e=a.fallback,o?(a=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&a)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Mu(l,a,0,null),e=Ou(e,a,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Mo(n),t.memoizedState=Oo,e):Lo(t,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,a,i,o){if(n)return 256&t.flags?(t.flags&=-257,Po(e,t,o,r=uo(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,a=t.mode,r=Mu({mode:"visible",children:r.children},a,0,null),(i=Ou(i,a,o,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!==(1&t.mode)&&xs(t,e.child,null,o),t.child.memoizedState=Mo(o),t.memoizedState=Oo,i);if(0===(1&t.mode))return Po(e,t,o,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,Po(e,t,o,r=uo(i=Error(s(419)),r,void 0))}if(l=0!==(o&e.childLanes),vo||l){if(null!==(r=Al)){switch(o&-o){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|o))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Ds(e,a),nu(r,e,a,-1))}return mu(),Po(e,t,o,r=uo(Error(s(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Cu.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,rs=ua(a.nextSibling),ns=t,as=!0,ss=null,null!==e&&(Ya[qa++]=Xa,Ya[qa++]=Za,Ya[qa++]=Ka,Xa=e.id,Za=e.overflow,Ka=t),t=Lo(t,r.children),t.flags|=4096,t)}(e,t,l,a,r,i,n);if(o){o=a.fallback,l=t.mode,r=(i=e.child).sibling;var u={mode:"hidden",children:a.children};return 0===(1&l)&&t.child!==i?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=Fu(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==r?o=Fu(r,o):(o=Ou(o,l,n,null)).flags|=2,o.return=t,a.return=t,a.sibling=o,t.child=a,a=o,o=t.child,l=null===(l=e.child.memoizedState)?Mo(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=Oo,a}return e=(o=e.child).sibling,a=Fu(o,{mode:"visible",children:a.children}),0===(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Lo(e,t){return(t=Mu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Po(e,t,n,r){return null!==r&&fs(r),xs(t,e.child,null,n),(e=Lo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Es(e.return,t,n)}function Wo(e,t,n,r,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailMode=a)}function Vo(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(xo(e,t,r.children,n),0!==(2&(r=Js.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bo(e,n,t);else if(19===e.tag)Bo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ia(Js,r),0===(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ei(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Wo(t,!1,a,n,s);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ei(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Wo(t,!0,n,null,s);break;case"together":Wo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Uo(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Go(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function jo(e,t){if(!as)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ho(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Yo(e,t,n){var r=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ho(t),null;case 1:case 17:return Ra(t.type)&&Fa(),Ho(t),null;case 3:return r=t.stateNode,Xs(),Na(Aa),Na(Ea),ni(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(iu(ss),ss=null))),Ro(e,t),Ho(t),null;case 5:Qs(t);var a=qs(Ys.current);if(n=t.type,null!==e&&null!=t.stateNode)Fo(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(s(166));return Ho(t),null}if(e=qs(js.current),ds(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[ha]=t,r[pa]=i,e=0!==(1&t.mode),n){case"dialog":Pr("cancel",r),Pr("close",r);break;case"iframe":case"object":case"embed":Pr("load",r);break;case"video":case"audio":for(a=0;a<Or.length;a++)Pr(Or[a],r);break;case"source":Pr("error",r);break;case"img":case"image":case"link":Pr("error",r),Pr("load",r);break;case"details":Pr("toggle",r);break;case"input":X(r,i),Pr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Pr("invalid",r);break;case"textarea":ae(r,i),Pr("invalid",r)}for(var l in be(n,i),a=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==i.suppressHydrationWarning&&Qr(r.textContent,u,e),a=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Qr(r.textContent,u,e),a=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Pr("scroll",r)}switch(n){case"input":H(r),J(r,i,!0);break;case"textarea":H(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[ha]=t,e[pa]=r,_o(e,t,!1,!1),t.stateNode=e;e:{switch(l=ve(n,r),n){case"dialog":Pr("cancel",e),Pr("close",e),a=r;break;case"iframe":case"object":case"embed":Pr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Or.length;a++)Pr(Or[a],e);a=r;break;case"source":Pr("error",e),a=r;break;case"img":case"image":case"link":Pr("error",e),Pr("load",e),a=r;break;case"details":Pr("toggle",e),a=r;break;case"input":X(e,r),a=K(e,r),Pr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=z({},r,{value:void 0}),Pr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Pr("invalid",e)}for(i in be(n,a),u=a)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"===typeof c?("textarea"!==n||""!==c)&&he(e,c):"number"===typeof c&&he(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Pr("scroll",e):null!=c&&v(e,i,c,l))}switch(n){case"input":H(e),J(e,r,!1);break;case"textarea":H(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ho(t),null;case 6:if(e&&null!=t.stateNode)Do(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(s(166));if(n=qs(Ys.current),qs(js.current),ds(t)){if(r=t.stateNode,n=t.memoizedProps,r[ha]=t,(i=r.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Qr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Qr(r.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[ha]=t,t.stateNode=r}return Ho(t),null;case 13:if(Na(Js),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(as&&null!==rs&&0!==(1&t.mode)&&0===(128&t.flags))hs(),ps(),t.flags|=98560,i=!1;else if(i=ds(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(s(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(s(317));i[ha]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ho(t),i=!1}else null!==ss&&(iu(ss),ss=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Js.current)?0===Dl&&(Dl=3):mu())),null!==t.updateQueue&&(t.flags|=4),Ho(t),null);case 4:return Xs(),Ro(e,t),null===e&&Vr(t.stateNode.containerInfo),Ho(t),null;case 10:return Cs(t.type._context),Ho(t),null;case 19:if(Na(Js),null===(i=t.memoizedState))return Ho(t),null;if(r=0!==(128&t.flags),null===(l=i.rendering))if(r)jo(i,!1);else{if(0!==Dl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ei(e))){for(t.flags|=128,jo(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ia(Js,1&Js.current|2),t.child}e=e.sibling}null!==i.tail&&Ze()>Vl&&(t.flags|=128,r=!0,jo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ei(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),jo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!as)return Ho(t),null}else 2*Ze()-i.renderingStartTime>Vl&&1073741824!==n&&(t.flags|=128,r=!0,jo(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Ze(),t.sibling=null,n=Js.current,Ia(Js,r?1&n|2:1&n),t):(Ho(t),null);case 22:case 23:return du(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Rl)&&(Ho(t),6&t.subtreeFlags&&(t.flags|=8192)):Ho(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function qo(e,t){switch(ts(t),t.tag){case 1:return Ra(t.type)&&Fa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Xs(),Na(Aa),Na(Ea),ni(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Qs(t),null;case 13:if(Na(Js),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Na(Js),null;case 4:return Xs(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return du(),null;default:return null}}_o=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ro=function(){},Fo=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,qs(js.current);var s,i=null;switch(n){case"input":a=K(e,a),r=K(e,r),i=[];break;case"select":a=z({},a,{value:void 0}),r=z({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!==typeof a.onClick&&"function"===typeof r.onClick&&(e.onclick=Jr)}for(c in be(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(s in l)l.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(s in l)!l.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&l[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Pr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Do=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ko=!1,Xo=!1,Zo="function"===typeof WeakSet?WeakSet:Set,Qo=null;function Jo(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){Tu(e,t,r)}else n.current=null}function el(e,t,n){try{n()}catch(r){Tu(e,t,r)}}var tl=!1;function nl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&el(t,n,s)}a=a.next}while(a!==r)}}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function al(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sl(e){var t=e.alternate;null!==t&&(e.alternate=null,sl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ha],delete t[pa],delete t[ma],delete t[ga],delete t[ya])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function ol(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,dl=!1;function hl(e,t,n){for(n=n.child;null!==n;)pl(e,t,n),n=n.sibling}function pl(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(at,n)}catch(o){}switch(n.tag){case 5:Xo||Jo(n,t);case 6:var r=cl,a=dl;cl=null,hl(e,t,n),dl=a,null!==(cl=r)&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?la(e.parentNode,n):1===e.nodeType&&la(e,n),Vt(e)):la(cl,n.stateNode));break;case 4:r=cl,a=dl,cl=n.stateNode.containerInfo,dl=!0,hl(e,t,n),cl=r,dl=a;break;case 0:case 11:case 14:case 15:if(!Xo&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var s=a,i=s.destroy;s=s.tag,void 0!==i&&(0!==(2&s)||0!==(4&s))&&el(n,t,i),a=a.next}while(a!==r)}hl(e,t,n);break;case 1:if(!Xo&&(Jo(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){Tu(n,t,o)}hl(e,t,n);break;case 21:hl(e,t,n);break;case 22:1&n.mode?(Xo=(r=Xo)||null!==n.memoizedState,hl(e,t,n),Xo=r):hl(e,t,n);break;default:hl(e,t,n)}}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zo),t.forEach((function(t){var r=Eu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,dl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===cl)throw Error(s(160));pl(i,o,a),cl=null,dl=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(c){Tu(a,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),yl(e),4&r){try{nl(3,e,e.return),rl(3,e)}catch(g){Tu(e,e.return,g)}try{nl(5,e,e.return)}catch(g){Tu(e,e.return,g)}}break;case 1:ml(t,e),yl(e),512&r&&null!==n&&Jo(n,n.return);break;case 5:if(ml(t,e),yl(e),512&r&&null!==n&&Jo(n,n.return),32&e.flags){var a=e.stateNode;try{he(a,"")}catch(g){Tu(e,e.return,g)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Z(a,i),ve(l,o);var c=ve(l,i);for(o=0;o<u.length;o+=2){var d=u[o],h=u[o+1];"style"===d?ge(a,h):"dangerouslySetInnerHTML"===d?de(a,h):"children"===d?he(a,h):v(a,d,h,c)}switch(l){case"input":Q(a,i);break;case"textarea":se(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(a,!!i.multiple,f,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(g){Tu(e,e.return,g)}}break;case 6:if(ml(t,e),yl(e),4&r){if(null===e.stateNode)throw Error(s(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(g){Tu(e,e.return,g)}}break;case 3:if(ml(t,e),yl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Tu(e,e.return,g)}break;case 4:default:ml(t,e),yl(e);break;case 13:ml(t,e),yl(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Wl=Ze())),4&r&&fl(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Xo=(c=Xo)||d,ml(t,e),Xo=c):ml(t,e),yl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!==(1&e.mode))for(Qo=e,d=e.child;null!==d;){for(h=Qo=d;null!==Qo;){switch(f=(p=Qo).child,p.tag){case 0:case 11:case 14:case 15:nl(4,p,p.return);break;case 1:Jo(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Tu(r,n,g)}}break;case 5:Jo(p,p.return);break;case 22:if(null!==p.memoizedState){wl(h);continue}}null!==f?(f.return=p,Qo=f):wl(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{a=h.stateNode,c?"function"===typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=h.stateNode,o=void 0!==(u=h.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",o))}catch(g){Tu(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=c?"":h.memoizedProps}catch(g){Tu(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:ml(t,e),yl(e),4&r&&fl(e);case 21:}}function yl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(il(n)){var r=n;break e}n=n.return}throw Error(s(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(he(a,""),r.flags&=-33),ul(e,ol(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;ll(e,ol(e),i);break;default:throw Error(s(161))}}catch(o){Tu(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,n){Qo=e,vl(e,t,n)}function vl(e,t,n){for(var r=0!==(1&e.mode);null!==Qo;){var a=Qo,s=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Ko;if(!i){var o=a.alternate,l=null!==o&&null!==o.memoizedState||Xo;o=Ko;var u=Xo;if(Ko=i,(Xo=l)&&!u)for(Qo=a;null!==Qo;)l=(i=Qo).child,22===i.tag&&null!==i.memoizedState?kl(a):null!==l?(l.return=i,Qo=l):kl(a);for(;null!==s;)Qo=s,vl(s,t,n),s=s.sibling;Qo=a,Ko=o,Xo=u}xl(e)}else 0!==(8772&a.subtreeFlags)&&null!==s?(s.return=a,Qo=s):xl(e)}}function xl(e){for(;null!==Qo;){var t=Qo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xo||rl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Xo)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Us(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Us(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Vt(h)}}}break;default:throw Error(s(163))}Xo||512&t.flags&&al(t)}catch(p){Tu(t,t.return,p)}}if(t===e){Qo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Qo=n;break}Qo=t.return}}function wl(e){for(;null!==Qo;){var t=Qo;if(t===e){Qo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Qo=n;break}Qo=t.return}}function kl(e){for(;null!==Qo;){var t=Qo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rl(4,t)}catch(l){Tu(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(l){Tu(t,a,l)}}var s=t.return;try{al(t)}catch(l){Tu(t,s,l)}break;case 5:var i=t.return;try{al(t)}catch(l){Tu(t,i,l)}}}catch(l){Tu(t,t.return,l)}if(t===e){Qo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Qo=o;break}Qo=t.return}}var Sl,Tl=Math.ceil,Nl=x.ReactCurrentDispatcher,Il=x.ReactCurrentOwner,Cl=x.ReactCurrentBatchConfig,El=0,Al=null,$l=null,_l=0,Rl=0,Fl=Ta(0),Dl=0,Ol=null,Ml=0,zl=0,Ll=0,Pl=null,Bl=null,Wl=0,Vl=1/0,Ul=null,Gl=!1,jl=null,Hl=null,Yl=!1,ql=null,Kl=0,Xl=0,Zl=null,Ql=-1,Jl=0;function eu(){return 0!==(6&El)?Ze():-1!==Ql?Ql:Ql=Ze()}function tu(e){return 0===(1&e.mode)?1:0!==(2&El)&&0!==_l?_l&-_l:null!==ms.transition?(0===Jl&&(Jl=mt()),Jl):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Xt(e.type)}function nu(e,t,n,r){if(50<Xl)throw Xl=0,Zl=null,Error(s(185));yt(e,n,r),0!==(2&El)&&e===Al||(e===Al&&(0===(2&El)&&(zl|=n),4===Dl&&ou(e,_l)),ru(e,r),1===n&&0===El&&0===(1&t.mode)&&(Vl=Ze()+500,Pa&&Va()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-it(s),o=1<<i,l=a[i];-1===l?0!==(o&n)&&0===(o&r)||(a[i]=pt(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var r=ht(e,e===Al?_l:0);if(0===r)null!==n&&qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&qe(n),1===t)0===e.tag?function(e){Pa=!0,Wa(e)}(lu.bind(null,e)):Wa(lu.bind(null,e)),ia((function(){0===(6&El)&&Va()})),n=null;else{switch(xt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Au(n,au.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function au(e,t){if(Ql=-1,Jl=0,0!==(6&El))throw Error(s(327));var n=e.callbackNode;if(ku()&&e.callbackNode!==n)return null;var r=ht(e,e===Al?_l:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=gu(e,r);else{t=r;var a=El;El|=2;var i=fu();for(Al===e&&_l===t||(Ul=null,Vl=Ze()+500,hu(e,t));;)try{bu();break}catch(l){pu(e,l)}Is(),Nl.current=i,El=a,null!==$l?t=0:(Al=null,_l=0,t=Dl)}if(0!==t){if(2===t&&(0!==(a=ft(e))&&(r=a,t=su(e,a))),1===t)throw n=Ol,hu(e,0),ou(e,r),ru(e,Ze()),n;if(6===t)ou(e,r);else{if(a=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],s=a.getSnapshot;a=a.value;try{if(!or(s(),a))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gu(e,r))&&(0!==(i=ft(e))&&(r=i,t=su(e,i))),1===t))throw n=Ol,hu(e,0),ou(e,r),ru(e,Ze()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(s(345));case 2:case 5:wu(e,Bl,Ul);break;case 3:if(ou(e,r),(130023424&r)===r&&10<(t=Wl+500-Ze())){if(0!==ht(e,0))break;if(((a=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(wu.bind(null,e,Bl,Ul),t);break}wu(e,Bl,Ul);break;case 4:if(ou(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>a&&(a=o),r&=~i}if(r=a,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Tl(r/1960))-r)){e.timeoutHandle=ra(wu.bind(null,e,Bl,Ul),r);break}wu(e,Bl,Ul);break;default:throw Error(s(329))}}}return ru(e,Ze()),e.callbackNode===n?au.bind(null,e):null}function su(e,t){var n=Pl;return e.current.memoizedState.isDehydrated&&(hu(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Bl,Bl=n,null!==t&&iu(t)),e}function iu(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function ou(e,t){for(t&=~Ll,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function lu(e){if(0!==(6&El))throw Error(s(327));ku();var t=ht(e,0);if(0===(1&t))return ru(e,Ze()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=su(e,r))}if(1===n)throw n=Ol,hu(e,0),ou(e,t),ru(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wu(e,Bl,Ul),ru(e,Ze()),null}function uu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&(Vl=Ze()+500,Pa&&Va())}}function cu(e){null!==ql&&0===ql.tag&&0===(6&El)&&ku();var t=El;El|=1;var n=Cl.transition,r=vt;try{if(Cl.transition=null,vt=1,e)return e()}finally{vt=r,Cl.transition=n,0===(6&(El=t))&&Va()}}function du(){Rl=Fl.current,Na(Fl)}function hu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==$l)for(n=$l.return;null!==n;){var r=n;switch(ts(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Fa();break;case 3:Xs(),Na(Aa),Na(Ea),ni();break;case 5:Qs(r);break;case 4:Xs();break;case 13:case 19:Na(Js);break;case 10:Cs(r.type._context);break;case 22:case 23:du()}n=n.return}if(Al=e,$l=e=Fu(e.current,null),_l=Rl=t,Dl=0,Ol=null,Ll=zl=Ml=0,Bl=Pl=null,null!==_s){for(t=0;t<_s.length;t++)if(null!==(r=(n=_s[t]).interleaved)){n.interleaved=null;var a=r.next,s=n.pending;if(null!==s){var i=s.next;s.next=a,r.next=i}n.pending=r}_s=null}return e}function pu(e,t){for(;;){var n=$l;try{if(Is(),ri.current=Zi,ui){for(var r=ii.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ui=!1}if(si=0,li=oi=ii=null,ci=!1,di=0,Il.current=null,null===n||null===n.return){Dl=1,Ol=t,$l=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=_l,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,d=l,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=go(o);if(null!==f){f.flags&=-257,yo(f,o,l,0,t),1&f.mode&&mo(i,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){mo(i,c,t),mu();break e}u=Error(s(426))}else if(as&&1&l.mode){var y=go(o);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yo(y,o,l,0,t),fs(lo(u,l));break e}}i=u=lo(u,l),4!==Dl&&(Dl=2),null===Pl?Pl=[i]:Pl.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Ws(i,po(0,u,t));break e;case 1:l=u;var b=i.type,v=i.stateNode;if(0===(128&i.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Hl||!Hl.has(v)))){i.flags|=65536,t&=-t,i.lanes|=t,Ws(i,fo(i,l,t));break e}}i=i.return}while(null!==i)}xu(n)}catch(x){t=x,$l===n&&null!==n&&($l=n=n.return);continue}break}}function fu(){var e=Nl.current;return Nl.current=Zi,null===e?Zi:e}function mu(){0!==Dl&&3!==Dl&&2!==Dl||(Dl=4),null===Al||0===(268435455&Ml)&&0===(268435455&zl)||ou(Al,_l)}function gu(e,t){var n=El;El|=2;var r=fu();for(Al===e&&_l===t||(Ul=null,hu(e,t));;)try{yu();break}catch(a){pu(e,a)}if(Is(),El=n,Nl.current=r,null!==$l)throw Error(s(261));return Al=null,_l=0,Dl}function yu(){for(;null!==$l;)vu($l)}function bu(){for(;null!==$l&&!Ke();)vu($l)}function vu(e){var t=Sl(e.alternate,e,Rl);e.memoizedProps=e.pendingProps,null===t?xu(e):$l=t,Il.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Yo(n,t,Rl)))return void($l=n)}else{if(null!==(n=qo(n,t)))return n.flags&=32767,void($l=n);if(null===e)return Dl=6,void($l=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void($l=t);$l=t=e}while(null!==t);0===Dl&&(Dl=5)}function wu(e,t,n){var r=vt,a=Cl.transition;try{Cl.transition=null,vt=1,function(e,t,n,r){do{ku()}while(null!==ql);if(0!==(6&El))throw Error(s(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),s=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~s}}(e,i),e===Al&&($l=Al=null,_l=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Yl||(Yl=!0,Au(tt,(function(){return ku(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=Cl.transition,Cl.transition=null;var o=vt;vt=1;var l=El;El|=4,Il.current=null,function(e,t){if(ea=Gt,pr(e=hr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(w){n=null;break e}var o=0,l=-1,u=-1,c=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==a&&3!==h.nodeType||(l=o+a),h!==i||0!==r&&3!==h.nodeType||(u=o+r),3===h.nodeType&&(o+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++c===a&&(l=o),p===i&&++d===r&&(u=o),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Gt=!1,Qo=t;null!==Qo;)if(e=(t=Qo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Qo=e;else for(;null!==Qo;){t=Qo;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:to(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Tu(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Qo=e;break}Qo=t.return}m=tl,tl=!1}(e,n),gl(n,e),fr(ta),Gt=!!ea,ta=ea=null,e.current=n,bl(n,e,a),Xe(),El=l,vt=o,Cl.transition=i}else e.current=n;if(Yl&&(Yl=!1,ql=e,Kl=a),i=e.pendingLanes,0===i&&(Hl=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(at,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ru(e,Ze()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],r(a.value,{componentStack:a.stack,digest:a.digest});if(Gl)throw Gl=!1,e=jl,jl=null,e;0!==(1&Kl)&&0!==e.tag&&ku(),i=e.pendingLanes,0!==(1&i)?e===Zl?Xl++:(Xl=0,Zl=e):Xl=0,Va()}(e,t,n,r)}finally{Cl.transition=a,vt=r}return null}function ku(){if(null!==ql){var e=xt(Kl),t=Cl.transition,n=vt;try{if(Cl.transition=null,vt=16>e?16:e,null===ql)var r=!1;else{if(e=ql,ql=null,Kl=0,0!==(6&El))throw Error(s(331));var a=El;for(El|=4,Qo=e.current;null!==Qo;){var i=Qo,o=i.child;if(0!==(16&Qo.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Qo=c;null!==Qo;){var d=Qo;switch(d.tag){case 0:case 11:case 15:nl(8,d,i)}var h=d.child;if(null!==h)h.return=d,Qo=h;else for(;null!==Qo;){var p=(d=Qo).sibling,f=d.return;if(sl(d),d===c){Qo=null;break}if(null!==p){p.return=f,Qo=p;break}Qo=f}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Qo=i}}if(0!==(2064&i.subtreeFlags)&&null!==o)o.return=i,Qo=o;else e:for(;null!==Qo;){if(0!==(2048&(i=Qo).flags))switch(i.tag){case 0:case 11:case 15:nl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Qo=b;break e}Qo=i.return}}var v=e.current;for(Qo=v;null!==Qo;){var x=(o=Qo).child;if(0!==(2064&o.subtreeFlags)&&null!==x)x.return=o,Qo=x;else e:for(o=v;null!==Qo;){if(0!==(2048&(l=Qo).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(k){Tu(l,l.return,k)}if(l===o){Qo=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Qo=w;break e}Qo=l.return}}if(El=a,Va(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(at,e)}catch(k){}r=!0}return r}finally{vt=n,Cl.transition=t}}return!1}function Su(e,t,n){e=Ps(e,t=po(0,t=lo(n,t),1),1),t=eu(),null!==e&&(yt(e,1,t),ru(e,t))}function Tu(e,t,n){if(3===e.tag)Su(e,e,n);else for(;null!==t;){if(3===t.tag){Su(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){t=Ps(t,e=fo(t,e=lo(n,e),1),1),e=eu(),null!==t&&(yt(t,1,e),ru(t,e));break}}t=t.return}}function Nu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Al===e&&(_l&n)===n&&(4===Dl||3===Dl&&(130023424&_l)===_l&&500>Ze()-Wl?hu(e,0):Ll|=n),ru(e,t)}function Iu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=Ds(e,t))&&(yt(e,t,n),ru(e,n))}function Cu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Iu(e,n)}function Eu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(s(314))}null!==r&&r.delete(t),Iu(e,n)}function Au(e,t){return Ye(e,t)}function $u(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _u(e,t,n,r){return new $u(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=_u(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,r,a,i){var o=2;if(r=e,"function"===typeof e)Ru(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case S:return Ou(n.children,a,i,t);case T:o=8,a|=8;break;case N:return(e=_u(12,n,t,2|a)).elementType=N,e.lanes=i,e;case A:return(e=_u(13,n,t,a)).elementType=A,e.lanes=i,e;case $:return(e=_u(19,n,t,a)).elementType=$,e.lanes=i,e;case F:return Mu(n,a,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case I:o=10;break e;case C:o=9;break e;case E:o=11;break e;case _:o=14;break e;case R:o=16,r=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=_u(o,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Ou(e,t,n,r){return(e=_u(7,e,r,t)).lanes=n,e}function Mu(e,t,n,r){return(e=_u(22,e,r,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function zu(e,t,n){return(e=_u(6,e,null,t)).lanes=n,e}function Lu(e,t,n){return(t=_u(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,r,a,s,i,o,l){return e=new Pu(e,t,n,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=_u(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ms(s),e}function Wu(e){if(!e)return Ca;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ra(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Ra(n))return Oa(e,n,t)}return t}function Vu(e,t,n,r,a,s,i,o,l){return(e=Bu(n,r,!0,e,0,s,0,o,l)).context=Wu(null),n=e.current,(s=Ls(r=eu(),a=tu(n))).callback=void 0!==t&&null!==t?t:null,Ps(n,s,a),e.current.lanes=a,yt(e,a,r),ru(e,r),e}function Uu(e,t,n,r){var a=t.current,s=eu(),i=tu(a);return n=Wu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ls(s,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Ps(a,t,i))&&(nu(e,a,i,s),Bs(e,a,i)),i}function Gu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ju(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Hu(e,t){ju(e,t),(e=e.alternate)&&ju(e,t)}Sl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Aa.current)vo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vo=!1,function(e,t,n){switch(t.tag){case 3:Ao(t),ps();break;case 5:Zs(t);break;case 1:Ra(t.type)&&Ma(t);break;case 4:Ks(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Ia(ks,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ia(Js,1&Js.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zo(e,t,n):(Ia(Js,1&Js.current),null!==(e=Go(e,t,n))?e.sibling:null);Ia(Js,1&Js.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Vo(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ia(Js,Js.current),r)break;return null;case 22:case 23:return t.lanes=0,To(e,t,n)}return Go(e,t,n)}(e,t,n);vo=0!==(131072&e.flags)}else vo=!1,as&&0!==(1048576&t.flags)&&Ja(t,Ha,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Uo(e,t),e=t.pendingProps;var a=_a(t,Ea.current);As(t,n),a=mi(null,t,r,e,a,n);var i=gi();return t.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ra(r)?(i=!0,Ma(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ms(t),a.updater=ro,t.stateNode=a,a._reactInternals=t,oo(t,r,e,n),t=Eo(null,t,r,!0,i,n)):(t.tag=0,as&&i&&es(t),xo(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Uo(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"===typeof e)return Ru(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(r),e=to(r,e),a){case 0:t=Io(null,t,r,e,n);break e;case 1:t=Co(null,t,r,e,n);break e;case 11:t=wo(null,t,r,e,n);break e;case 14:t=ko(null,t,r,to(r.type,e),n);break e}throw Error(s(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Io(e,t,r,a=t.elementType===r?a:to(r,a),n);case 1:return r=t.type,a=t.pendingProps,Co(e,t,r,a=t.elementType===r?a:to(r,a),n);case 3:e:{if(Ao(t),null===e)throw Error(s(387));r=t.pendingProps,a=(i=t.memoizedState).element,zs(e,t),Vs(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=$o(e,t,r,n,a=lo(Error(s(423)),t));break e}if(r!==a){t=$o(e,t,r,n,a=lo(Error(s(424)),t));break e}for(rs=ua(t.stateNode.containerInfo.firstChild),ns=t,as=!0,ss=null,n=ws(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),r===a){t=Go(e,t,n);break e}xo(e,t,r,n)}t=t.child}return t;case 5:return Zs(t),null===e&&us(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,na(r,a)?o=null:null!==i&&na(r,i)&&(t.flags|=32),No(e,t),xo(e,t,o,n),t.child;case 6:return null===e&&us(t),null;case 13:return zo(e,t,n);case 4:return Ks(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xs(t,null,r,n):xo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,wo(e,t,r,a=t.elementType===r?a:to(r,a),n);case 7:return xo(e,t,t.pendingProps,n),t.child;case 8:case 12:return xo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value,Ia(ks,r._currentValue),r._currentValue=o,null!==i)if(or(i.value,o)){if(i.children===a.children&&!Aa.current){t=Go(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=Ls(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Es(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(s(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Es(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}xo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,As(t,n),r=r(a=$s(a)),t.flags|=1,xo(e,t,r,n),t.child;case 14:return a=to(r=t.type,t.pendingProps),ko(e,t,r,a=to(r.type,a),n);case 15:return So(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:to(r,a),Uo(e,t),t.tag=1,Ra(r)?(e=!0,Ma(t)):e=!1,As(t,n),so(t,r,a),oo(t,r,a,n),Eo(null,t,r,!0,e,n);case 19:return Vo(e,t,n);case 22:return To(e,t,n)}throw Error(s(156,t.tag))};var Yu="function"===typeof reportError?reportError:function(e){console.error(e)};function qu(e){this._internalRoot=e}function Ku(e){this._internalRoot=e}function Xu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Qu(){}function Ju(e,t,n,r,a){var s=n._reactRootContainer;if(s){var i=s;if("function"===typeof a){var o=a;a=function(){var e=Gu(i);o.call(e)}}Uu(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"===typeof r){var s=r;r=function(){var e=Gu(i);s.call(e)}}var i=Vu(t,r,e,0,null,!1,0,"",Qu);return e._reactRootContainer=i,e[fa]=i.current,Vr(8===e.nodeType?e.parentNode:e),cu(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof r){var o=r;r=function(){var e=Gu(l);o.call(e)}}var l=Bu(e,0,!1,null,0,!1,0,"",Qu);return e._reactRootContainer=l,e[fa]=l.current,Vr(8===e.nodeType?e.parentNode:e),cu((function(){Uu(t,l,n,r)})),l}(n,t,e,a,r);return Gu(i)}Ku.prototype.render=qu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Uu(e,t,null,null)},Ku.prototype.unmount=qu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){Uu(null,e,null,null)})),t[fa]=null}},Ku.prototype.unstable_scheduleHydration=function(e){if(e){var t=Tt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),ru(t,Ze()),0===(6&El)&&(Vl=Ze()+500,Va()))}break;case 13:cu((function(){var t=Ds(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),Hu(e,1)}},kt=function(e){if(13===e.tag){var t=Ds(e,134217728);if(null!==t)nu(t,e,134217728,eu());Hu(e,134217728)}},St=function(e){if(13===e.tag){var t=tu(e),n=Ds(e,t);if(null!==n)nu(n,e,t,eu());Hu(e,t)}},Tt=function(){return vt},Nt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(Q(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=wa(r);if(!a)throw Error(s(90));Y(r),Q(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=uu,Ae=cu;var ec={usingClientEntryPoint:!1,Events:[va,xa,wa,Ie,Ce,uu]},tc={findFiberByHostInstance:ba,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{at=rc.inject(nc),st=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xu(t))throw Error(s(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xu(e))throw Error(s(299));var n=!1,r="",a=Yu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Bu(e,1,!1,null,0,n,0,r,a),e[fa]=t.current,Vr(8===e.nodeType?e.parentNode:e),new qu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(s(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xu(e))throw Error(s(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",o=Yu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Vu(t,null,e,1,null!=n?n:null,a,0,i,o),e[fa]=t.current,Vr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ku(t)},t.render=function(e,t,n){if(!Zu(t))throw Error(s(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(s(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[fa]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return Ju(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},4391:(e,t,n)=>{"use strict";var r=n(7950);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},1153:(e,t,n)=>{"use strict";var r=n(5043),a=Symbol.for("react.element"),s=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,s={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,r)&&!l.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:a,type:e,key:u,ref:c,props:s,_owner:o.current}}t.jsx=u,t.jsxs=u},4202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},T={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,r){var a,s={},i=null,o=null;if(null!=t)for(a in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,a)&&!T.hasOwnProperty(a)&&(s[a]=t[a]);var l=arguments.length-2;if(1===l)s.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===s[a]&&(s[a]=l[a]);return{$$typeof:n,type:e,key:i,ref:o,props:s,_owner:S.current}}function I(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,a,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===s?"."+E(l,0):s,w(i)?(a="",null!=e&&(a=e.replace(C,"$&/")+"/"),A(i,t,a,"",(function(e){return e}))):null!=i&&(I(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(l=0,s=""===s?".":s+":",w(e))for(var u=0;u<e.length;u++){var c=s+E(o=e[u],u);l+=A(o,t,a,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=A(o=o.value,t,a,c=s+E(o,u++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function $(e,t,n){if(null==e)return e;var r=[],a=0;return A(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},F={transition:null},D={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:F,ReactCurrentOwner:S};function O(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:$,forEach:function(e,t,n){$(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return $(e,(function(){t++})),t},toArray:function(e){return $(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=i,t.PureComponent=v,t.StrictMode=s,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.act=O,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),s=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!T.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:s,ref:i,props:a,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=O,t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.3.1"},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},7234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<s(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var o=2*(r+1)-1,l=e[o],u=o+1,c=e[u];if(0>s(l,n))u<a&&0>s(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[o]=n,r=o);else{if(!(u<a&&0>s(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(g=!1,x(e),!m)if(null!==r(u))m=!0,F(k);else{var t=r(c);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(I),I=-1),f=!0;var s=p;try{for(x(n),h=r(u);null!==h&&(!(h.expirationTime>n)||e&&!A());){var i=h.callback;if("function"===typeof i){h.callback=null,p=h.priorityLevel;var o=i(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?h.callback=o:h===r(u)&&a(u),x(n)}else a(u);h=r(u)}if(null!==h)var l=!0;else{var d=r(c);null!==d&&D(w,d.startTime-n),l=!1}return l}finally{h=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,T=!1,N=null,I=-1,C=5,E=-1;function A(){return!(t.unstable_now()-E<C)}function $(){if(null!==N){var e=t.unstable_now();E=e;var n=!0;try{n=N(!0,e)}finally{n?S():(T=!1,N=null)}}else T=!1}if("function"===typeof v)S=function(){v($)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,R=_.port2;_.port1.onmessage=$,S=function(){R.postMessage(null)}}else S=function(){y($,0)};function F(e){N=e,T||(T=!0,S())}function D(e,n){I=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,s){var i=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?i+s:i:s=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>i?(e.sortIndex=s,n(c,e),null===r(u)&&e===r(c)&&(g?(b(I),I=-1):g=!0,D(w,s-i))):(e.sortIndex=o,n(u,e),m||f||(m=!0,F(k))),e},t.unstable_shouldYield=A,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},4334:(e,t,n)=>{var r=n(7359),a=n(7066),s=n(9016),i=n(9538),o=n(6288),l=n(5262),u=n(2430);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},7359:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},5262:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},7066:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},6288:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},9538:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},9016:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},2430:function(e,t,n){var r;!function(a,s,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),d=2*c,h=l-1;function p(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(a.crypto||a.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,b(s)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(v,h,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<l;)i[a]=a++;for(a=0;a<l;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*l+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),s),e.exports){e.exports=p;try{o=n(1234)}catch(v){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},5817:()=>{},8590:()=>{},4530:()=>{},8108:()=>{},551:()=>{},1234:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+".aab76bc4.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="coal_star:";n.l=(r,a,s,i)=>{if(e[r])e[r].push(a);else{var o,l;if(void 0!==s)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var d=u[c];if(d.getAttribute("src")==r||d.getAttribute("data-webpack")==t+s){o=d;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",t+s),o.src=r),e[r]=[a];var h=(t,n)=>{o.onerror=o.onload=null,clearTimeout(p);var a=e[r];if(delete e[r],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(n))),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=h.bind(null,o.onerror),o.onload=h.bind(null,o.onload),l&&document.head.appendChild(o)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/venkat/",(()=>{var e={792:0};n.f.j=(t,r)=>{var a=n.o(e,t)?e[t]:void 0;if(0!==a)if(a)r.push(a[2]);else{var s=new Promise(((n,r)=>a=e[t]=[n,r]));r.push(a[2]=s);var i=n.p+n.u(t),o=new Error;n.l(i,(r=>{if(n.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var s=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,a[1](o)}}),"chunk-"+t,t)}};var t=(t,r)=>{var a,s,i=r[0],o=r[1],l=r[2],u=0;if(i.some((t=>0!==e[t]))){for(a in o)n.o(o,a)&&(n.m[a]=o[a]);if(l)l(n)}for(t&&t(r);u<i.length;u++)s=i[u],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},r=self.webpackChunkcoal_star=self.webpackChunkcoal_star||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{mx:()=>ed,XI:()=>Hd,Nk:()=>Yd,f6:()=>Kd,ct:()=>Kc,YG:()=>Jd,hH:()=>sh,z3:()=>Uh,sG:()=>ep,uM:()=>sp,vS:()=>kp,qB:()=>$p,GG:()=>Rp,lg:()=>zp,rq:()=>Dp,cu:()=>Xp,WR:()=>Yp,GE:()=>Jp,px:()=>tf,jC:()=>yf,He:()=>xf,hE:()=>$f,BF:()=>Oh,Dk:()=>Bf,cl:()=>qf,_B:()=>om,ub:()=>hm,_f:()=>mm,Ku:()=>wm,qy:()=>Sm,Zy:()=>Om,bu:()=>Lm,zv:()=>Bc,dH:()=>ud,HS:()=>Vd,yH:()=>ag,l3:()=>ig,z9:()=>lg,x6:()=>pg,_m:()=>xg,eW:()=>Ng,GK:()=>Eg,SP:()=>_g,yr:()=>Fg,dl:()=>dp,Dw:()=>Bg,xT:()=>Gg,_X:()=>gd,wz:()=>Zg});var t=n(5043),r=n(4391),a=n(5743),s=n(9554),i=n(7794),o=n(803),l=n(319);const u={kernelName:s.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,l.P)((0,i.w)(n,"float32"),-1))}}};var c=n(4974),d=n(1011),h=n(1997),p=n(191),f=n(7738),m=n(7951);const g={kernelName:s.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f.E)((0,i.w)(n,"float32")),r=(0,p.R)((0,m.j)((0,h.d)(1),t));return(0,d.H)((0,c.y)(e,r))}}}},y={kernelName:s.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,m.j)((0,f.E)((0,i.w)(n,"float32")),1));return(0,c.y)(e,t)}}}};var b=n(8805),v=n(5583),x=n(7382);const w={kernelName:s.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=b.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,x.c)(t,r)),(0,v.t)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,x.c)(t,n)),(0,v.t)(t,r.shape)}}}},k={kernelName:s.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var S=n(3290);const T={kernelName:s.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},N={kernelName:s.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},I={kernelName:s.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,p.R)((0,m.j)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32")))))}}};var C=n(7242);const E={kernelName:s.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,C.W)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32"))));return(0,c.y)(e,t)}}}},A={kernelName:s.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,C.W)((0,f.E)(n),(0,f.E)(r));let s=(0,o.l)(e,(0,c.y)(r,t));const i=(0,b.getReductionAxes)(n.shape,a);return i.length>0&&(s=(0,x.c)(s,i)),(0,v.t)(s,n.shape)},b:()=>{const t=(0,C.W)((0,f.E)(n),(0,f.E)(r));let s=(0,d.H)((0,o.l)(e,(0,c.y)(n,t)));const i=(0,b.getReductionAxes)(r.shape,a);return i.length>0&&(s=(0,x.c)(s,i)),(0,v.t)(s,r.shape)}}}},$={kernelName:s.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,C.W)((0,f.E)((0,i.w)(n,"float32")),1))}}},_={kernelName:s.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,m.j)((0,h.d)(1),(0,f.E)((0,i.w)(n,"float32"))))}}};var R=n(2164),F=n(4148),D=n(1426),O=n(7538),M=n(7892);const z=(0,M.op)({avgPool3dGrad_:function(e,t,n,r,a,i){const o=(0,F.YT)(e,"dy","avgPool3dGrad"),l=(0,F.YT)(t,"input","avgPool3dGrad");let u=o,c=l,d=!1;4===l.rank&&(d=!0,u=(0,v.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,v.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D.vA(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),D.vA(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),(0,O.s_)("avgPool3dGrad",a,i);const h={dy:u,input:c},p={filterSize:n,strides:r,pad:a,dimRoundingMode:i},f=R.T2.runKernel(s.wwC,h,p);return d?(0,v.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),L={kernelName:s.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>z(e,r,a,s,i,o)}}};const P=(0,M.op)({avgPoolGrad_:function(e,t,n,r,a){const i=(0,F.YT)(e,"dy","avgPoolGrad"),o=(0,F.YT)(t,"input","avgPoolGrad");D.vA(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let l=o,u=i,c=!1;3===o.rank&&(c=!0,l=(0,v.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,v.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D.vA(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),D.vA(4===l.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`));const d={dy:u,input:l},h={filterSize:n,strides:r,pad:a},p=R.T2.runKernel(s.VCH,d,h);return c?(0,v.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),B={kernelName:s.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>P(e,r,a,s,i)}}};var W=n(5162);const V={kernelName:s.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>(0,W.N)(e,a,!1,!1),b:()=>(0,W.N)(e,r,!0,!1)}:s&&!i?{a:()=>(0,W.N)(a,e,!1,!0),b:()=>(0,W.N)(r,e,!1,!1)}:{a:()=>(0,W.N)(a,e,!0,!0),b:()=>(0,W.N)(e,r,!0,!0)}:{a:()=>(0,W.N)(e,a,!1,!0),b:()=>(0,W.N)(r,e,!0,!1)}}};var U=n(3585);const G={kernelName:s.Ik2,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>(0,U.e)(e,r,a)}}},j={kernelName:s.LB5,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>(0,x.c)(e,o,!0)}}},H={kernelName:s.KXH,gradFunc:e=>({x:()=>e.clone()})},Y={kernelName:s.QDP,gradFunc:e=>({x:()=>(0,S.P)(e)})};var q=n(9996),K=n(827),X=n(5692),Z=n(3986);const Q={kernelName:s.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,Z._)((0,X.n)((0,q.D)(r,a),(0,K.I)(r,s)),e,(0,S.P)(e))}}},J={kernelName:s.$zE,inputsToSave:["x"],gradFunc:u.gradFunc};var ee=n(5181);const te={kernelName:s.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,D.Y6)(a,t[0].shape)[0],i=r.map((e=>e[s]));return(0,ee.l)(e,i,s).map((e=>()=>e))}};var ne=n(6927),re=n(1565);const ae={kernelName:s.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return D.vA(O.Dh(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,re.v)(r.shape,e,a,i,o,l),filter:()=>(0,ne.H)(r,e,a.shape,i,o,l)}}};var se=n(4969);const ie={kernelName:s.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>(0,se.X)(e,a,s,i,o,1,l),filter:()=>(0,ne.H)(e,r,a.shape,s,i,o,l)}}};const oe=(0,M.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let i=e;4===e.rank&&(i=(0,v.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,v.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D.vA(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),D.vA(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),D.vA(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),D.vA(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),D.vA(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const l={x:i,dy:o},u={strides:r,pad:a,filterShape:n};return R.T2.runKernel(s.iGz,l,u)}});var le=n(6410);const ue={kernelName:s.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;D.vA((0,O.Dh)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,le.c)(i.shape,e,o,a,s),filter:()=>oe(i,e,o.shape,a,s)}}};var ce=n(9519);const de={kernelName:s.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,d.H)((0,ce.F)((0,i.w)(n,"float32"))),e)}}};var he=n(8143);const pe={kernelName:s.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,he.L)((0,i.w)(n,"float32")),e)}}};var fe=n(9235),me=n(7167),ge=n(2154);const ye={kernelName:s.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=(0,fe.Em)([a],r.rank);let n=(0,me.r)(e,a,s,!i);return null!=t&&(n=(0,ge.m)(n,t)),n}}}};var be=n(7399),ve=n(261);const xe={kernelName:s.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;D.vA(O.Dh(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return D.vA(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),D.vA(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),D.vA(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),D.vA(O.G0(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),O.s_("depthwiseConv2d",s,i),{x:()=>(0,ve.l)(l.shape,e,u,a,s,o,i),filter:()=>(0,be.x)(l,e,u.shape,a,s,o,i)}}},we={kernelName:s.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>R.T2.runKernel(s.bP9,i,n),filter:()=>R.T2.runKernel(s.pk0,o,n)}}},ke={kernelName:s.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.T2.runKernel(s.rsH,r)}}};var Se=n(5462);const Te={kernelName:s._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,Se.o)((0,d.H)((0,f.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.l)(e,r)}}},Ne={kernelName:s.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,n)}}},Ie={kernelName:s.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,v.t)(e,n.shape)}}},Ce={kernelName:s.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,Se.o)(n))}}},Ee={kernelName:s.ZgB,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ae={kernelName:s.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),s=(0,b.getReductionAxes)(n.shape,a);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const s=(0,b.getReductionAxes)(r.shape,a);s.length>0&&(t=(0,v.t)((0,x.c)(t,s),r.shape));const l=(0,f.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(l,"float32")))}}}};var $e=n(6777),_e=n(3017);const Re={kernelName:s.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,l]=t,u=null==l?(0,h.d)(1):l,c=(0,b.getReductionAxes)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const p=(0,m.j)(a,s),f=(0,o.l)(e,u),g=(0,$e.Z)((0,C.W)(i,(0,h.d)(r))),y=(0,o.l)((0,o.l)((0,o.l)(g,g),g),(0,h.d)(-.5));return{x:()=>1===s.rank?(0,v.t)((0,o.l)((0,o.l)(e,(0,_e.V)((0,v.t)(g,[1,1,1,s.shape[0]]),d)),u),a.shape):(0,v.t)((0,o.l)((0,o.l)(e,g),u),a.shape),mean:()=>{let e=(0,o.l)((0,o.l)(g,(0,h.d)(-1)),f);return 1===s.rank&&(e=(0,x.c)(e,c)),(0,v.t)(e,s.shape)},variance:()=>{let e=(0,o.l)((0,o.l)(y,p),f);return 1===s.rank&&(e=(0,x.c)(e,c)),(0,v.t)(e,s.shape)},scale:()=>{const t=(0,o.l)(p,g);let n=(0,o.l)(e,t);return 1===s.rank&&(n=(0,x.c)(n,c)),(0,v.t)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,x.c)(t,c)),(0,v.t)(t,s.shape)}}}};var Fe=n(901),De=n(5149);const Oe={kernelName:s.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s,batchDims:i}=n,o=(0,D.Y6)(s,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,a=t.size,i=r.slice(0,o),l=i.length,u=r.slice(s,r.length).slice(1),c=u.length,d=Me(0,l),h=Me(l+1,l+1+c),p=ze([i,[a],u]),f=(0,v.t)(n,p),m=(0,v.t)(t,[a]),g=ze([[l],d,h]),y=(0,ge.m)(f,g);let b=(0,De.z)(y,m,e.shape[o]);const x=(0,fe.gx)(g);return b=(0,ge.m)(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=(0,Fe.t)(n.map(((t,n)=>l(t,a.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>a}}return{x:l(r,a,e),indices:()=>a}}};function Me(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ze(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Le={kernelName:s.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,S.P)(n),b:()=>(0,S.P)(r)}}},Pe={kernelName:s.lzr,gradFunc:e=>({x:()=>(0,i.w)(e,"float32")})},Be={kernelName:s.gIW,gradFunc:e=>({x:()=>(0,S.P)(e)})},We={kernelName:s.E3$,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ve={kernelName:s.iPs,gradFunc:e=>({x:()=>(0,S.P)(e)})};var Ue=n(2759);const Ge={kernelName:s.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=(0,Ue.r)(r,0);return{x:()=>(0,Z._)(s,e,(0,o.l)(e,a))}}},je={kernelName:s.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,C.W)(n,1))}}},He={kernelName:s.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,i.w)(n,"float32"))}}},Ye={kernelName:s.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Se.o)(r);return(0,m.j)(e,(0,o.l)((0,x.c)(e,a,!0),t))}}}};const qe=(0,M.op)({localResponseNormalizationBackprop_:function(e,t,n){const r={x:e,y:t,dy:n},a={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return R.T2.runKernel(s.ToN,r,a)}}),Ke={kernelName:s.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>qe(r,a,e,s,i,o,l)}}};var Xe=n(7457);function Ze(e,t,n,r){return t.rank<n.rank&&(t=(0,v.t)(t,fe.SM(t.shape,r))),e.rank<n.rank&&(e=(0,v.t)(e,fe.SM(e.shape,r))),{x:()=>(0,o.l)(e,(0,i.w)((0,Xe.L)(n,t),e.dtype))}}const Qe={kernelName:s.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Ze(e,t[1],s,D.Y6(a,s.shape));return{x:()=>i.x()}}};var Je=n(8320);const et={kernelName:s.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,q.D)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Je.M)(n,r),"float32"))}}};const tt=(0,M.op)({maxPool3dGrad_:function(e,t,n,r,a,i,o){const l=(0,F.YT)(e,"dy","maxPool3dGrad"),u=(0,F.YT)(t,"input","maxPool3dGrad"),c=(0,F.YT)(n,"output","maxPool3dGrad");let d=l,h=u,p=c,f=!1;4===u.rank&&(f=!0,d=(0,v.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=(0,v.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,v.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D.vA(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),D.vA(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),D.vA(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,O.s_)("maxPool3dGrad",i,o);const m={dy:d,input:h,output:p},g={filterSize:r,strides:a,pad:i,dimRoundingMode:o},y=R.T2.runKernel(s.cHb,m,g);return f?(0,v.t)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),nt={kernelName:s.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>tt(e,r,a,s,i,o,l)}}};const rt=(0,M.op)({maxPoolGrad_:function(e,t,n,r,a,i,o){const l=(0,F.YT)(e,"dy","maxPoolGrad"),u=(0,F.YT)(t,"input","maxPoolGrad"),c=(0,F.YT)(n,"output","maxPoolGrad");D.vA(u.rank===l.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`)),D.vA(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),D.vA(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),O.s_("maxPoolGrad",i,o);const d={dy:l,input:u,output:c},h={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return R.T2.runKernel(s.RXX,d,h)}}),at={kernelName:s.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>rt(e,r,a,s,i,o)}}};var st=n(4616);const it={kernelName:s.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=D.Y6(a,r.shape),i=(0,fe.lb)(r.shape,s)[1],l=D.Ze(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,v.t)(e,t);return(0,c.y)((0,o.l)(n,(0,st.S)(r.shape,"float32")),l)}}}},ot={kernelName:s.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Ze(e,i,s,D.Y6(a,s.shape));return{x:()=>o.x()}}},lt={kernelName:s.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.l)(e,(0,i.w)((0,K.I)(n,r),"float32")),b:()=>(0,o.l)(e,(0,i.w)((0,Ue.r)(n,r),"float32"))}}};var ut=n(463);const ct={kernelName:s.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ut.d)(e,s,r.shape)}}};var dt=n(8587);const ht={kernelName:s.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,b.getReductionAxes)(n.shape,a);return t.length>0?(0,v.t)((0,x.c)(e,t),n.shape):e},b:()=>{const t=(0,o.l)(e,(0,d.H)((0,dt.R)((0,c.y)(n,r)))),s=(0,b.getReductionAxes)(r.shape,a);return s.length>0?(0,v.t)((0,x.c)(t,s),r.shape):t}}}},pt={kernelName:s.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,o.l)(e,(0,i.w)(r,"float32")),s=(0,b.getReductionAxes)(n.shape,a);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{const t=(0,o.l)(e,(0,i.w)(n,"float32")),s=(0,b.getReductionAxes)(r.shape,a);return s.length>0?(0,v.t)((0,x.c)(t,s),r.shape):t}}}},ft={kernelName:s.l0G,gradFunc:e=>({x:()=>(0,d.H)(e)})};var mt=n(4218);const gt={kernelName:s.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,mt.U)(n.shape,"float32")}}},yt={kernelName:s.LWX,gradFunc:e=>({x:()=>(0,S.P)(e)})};var bt=n(3984);const vt={kernelName:s.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,bt.K)(e,r).map((e=>()=>e))}},xt={kernelName:s.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ut.d)(e,s,r.shape)}}};var wt=n(5911),kt=n(7587);const St={kernelName:s.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,l=r,u=b.assertAndGetBroadcastShape(s.shape,l.shape);return{a:()=>{const t=(0,i.w)(l,"float32");let n=(0,o.l)(e,(0,o.l)(t,(0,kt.n)(s,(0,m.j)(t,(0,h.d)(1)))));const r=b.getReductionAxes(s.shape,u);return r.length>0&&(n=(0,x.c)(n,r)),(0,v.t)(n,s.shape)},b:()=>{const t=(0,Ue.r)(s,0),n=(0,Z._)(t,(0,wt.R)(s),(0,S.P)(s));let r=(0,o.l)(e,(0,o.l)(a,n));const i=b.getReductionAxes(l.shape,u);return i.length>0&&(r=(0,x.c)(r,i)),(0,v.t)(r,l.shape)}}}},Tt={kernelName:s.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,Ue.r)(n,0);return{x:()=>(0,Z._)(a,e,(0,o.l)(e,r)),alpha:()=>{let t=(0,Z._)(a,(0,S.P)(e),(0,o.l)(e,n));const s=(0,b.getReductionAxes)(r.shape,e.shape);return s.length>0&&(t=(0,x.c)(t,s)),(0,v.t)(t,r.shape)}}}};var Nt=n(3739);function It(e,t,n){const r=e.shape.length,a=r-n.length,s=fe.Em(n,r);let i=e;null!=s&&(i=(0,ge.m)(e,s));const l=i.shape.slice(),u=l.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);l.push(u);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const a=(0,v.t)(t,r),s=(0,Nt.L)(e,n,!0,!1),i=(0,Nt.L)(e,n,!0,!0),l=(0,o.l)(s,i);return(0,o.l)(a,l)}(i.reshape(l),t,a);if(c=c.reshape(i.shape),null!=s){const e=fe.gx(s);c=(0,ge.m)(c,e)}return c}const Ct={kernelName:s.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let s=[];return s=void 0===a||null===a?r.shape.map(((e,t)=>t)):"number"===typeof a?[a]:a,{x:()=>It(r,e,s)}}},Et={kernelName:s.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,c.y)(e,(0,i.w)(r,"float32")),s=b.getReductionAxes(n.shape,a);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{let t=(0,o.l)(e,(0,i.w)(n,"float32"));const s=b.getReductionAxes(r.shape,a);s.length>0&&(t=(0,v.t)((0,x.c)(t,s),r.shape));const l=(0,f.E)(r);return(0,d.H)((0,c.y)(t,(0,i.w)(l,"float32")))}}}},At={kernelName:s.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,d.H)((0,f.E)(n)))}}},$t={kernelName:s.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.l)((0,K.I)(n,6),(0,l.P)(n));return{x:()=>(0,o.l)(e,(0,i.w)(r,"float32"))}}},_t={kernelName:s.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,i.w)((0,l.P)(n),"float32"))}}},Rt={kernelName:s.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,v.t)(e,n.shape)}}},Ft={kernelName:s.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.T2.runKernel(s.FCQ,a,n)}}},Dt={kernelName:s.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.T2.runKernel(s.XQy,a,n)}}};var Ot=n(7419);const Mt={kernelName:s.D7i,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,D.Y6)(r,e.shape);return{x:()=>(0,Ot.B)(e,a)}}},zt={kernelName:s.hVg,gradFunc:e=>({x:()=>(0,S.P)(e)})},Lt={kernelName:s.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.H)((0,c.y)(e,(0,o.l)((0,kt.n)(n,1.5),2)))}}};var Pt=n(5344);const Bt={kernelName:s.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.w)((0,S.P)(n),"float32"),t:()=>(0,o.l)(e,(0,i.w)(n,e.dtype)),e:()=>(0,o.l)(e,(0,i.w)((0,Pt.N)(n),e.dtype))}}};var Wt=n(3765);const Vt={kernelName:s.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ue.r)(n,(0,h.d)(0)),r=(0,h.d)(Wt.j),a=(0,h.d)(Wt.X),s=(0,o.l)(e,a),l=(0,o.l)((0,o.l)(e,r),(0,Se.o)((0,i.w)(n,"float32")));return(0,Z._)(t,s,l)}}}},Ut={kernelName:s.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)(n,(0,m.j)((0,h.d)(1),n)))}}},Gt={kernelName:s.YVe,gradFunc:e=>({x:()=>(0,S.P)(e)})};var jt=n(5894);const Ht={kernelName:s.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,jt.g)((0,i.w)(n,"float32")),e)}}};var Yt=n(1164);const qt={kernelName:s.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,Yt.y)((0,i.w)(n,"float32")),e)}}};var Kt=n(5048),Xt=n(4642);const Zt={kernelName:s.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=(0,Xt.parseSliceParams)(r,a,s),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>(0,Kt.e)(e,u)}}},Qt={kernelName:s.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,o.l)(e,r);return{logits:()=>(0,m.j)(s,(0,o.l)((0,x.c)(s,[a],true),r))}}};var Jt=n(4213);const en={kernelName:s.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,Jt.r)(n))}}};var tn=n(2557);const nn={kernelName:s.A8B,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>(0,tn.G)(e,r,a)}}};var rn=n(4429);const an={kernelName:s.Blb,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,rn.x)(e,r)}}},sn={kernelName:s.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,o.l)((0,p.R)((0,i.w)(n,"float32")),2))}}},on={kernelName:s.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)(e,(0,o.l)((0,i.w)(n,"float32"),2))}}},ln={kernelName:s.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,h.d)(2);return{a:()=>(0,o.l)(e,(0,o.l)(a,(0,m.j)(n,r))),b:()=>(0,o.l)(e,(0,o.l)(a,(0,m.j)(r,n)))}}},un={kernelName:s.pnw,gradFunc:e=>({x:()=>(0,S.P)(e)})},cn={kernelName:s.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=b.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,x.c)(t,r)),(0,v.t)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,x.c)(t,n)),(0,v.t)((0,d.H)(t),r.shape)}}}},dn={kernelName:s.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,D.Y6)(s,r.shape).forEach((e=>{a[e]=1}));const i=(0,v.t)(e,a),l=(0,o.l)(i,(0,st.S)(r.shape,"float32"));return{x:()=>l}}},hn={kernelName:s.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.y)(e,(0,f.E)((0,jt.g)(n)))}}},pn={kernelName:s.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.l)((0,m.j)((0,h.d)(1),(0,f.E)(n)),e)}}},fn={kernelName:s.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,S.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,C.W)(t,(0,ut.d)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,C.W)(t,(0,ut.d)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,C.W)(t,(0,ut.d)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,C.W)(t,(0,ut.d)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},mn={kernelName:s.wx0,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=fe.gx(a);return{x:()=>(0,ge.m)(e,s)}}},gn={kernelName:s.dXR,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,Fe.t)(e,a)}}};var yn=n(4023),bn=n(6178),vn=n(2131);const xn={kernelName:s.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,vn.P)(t,(0,S.P)(t)),r=(0,bn.k)(e,n);let a=(0,q.D)(t,(0,h.d)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=(0,yn.U)(a,o+1);a=(0,X.n)(a,(0,st.S)(r.shape,"bool"));const i=(0,S.P)(r);return(0,Z._)(a,r,i)}(e,n)}}};const wn={kernelName:s.xJ3,gradFunc:e=>({x:()=>(0,S.P)(e)})};var kn=n(843);const Sn=[u,g,y,w,k,T,N,I,E,A,$,_,L,B,V,G,j,H,Y,Q,J,te,ie,ae,ue,de,pe,ye,xe,we,Et,ke,Te,Ne,Ie,Ce,Ae,Ee,Re,Oe,Le,Pe,Be,We,Ve,Ge,je,He,Ye,Ke,Qe,Qe,et,nt,at,it,ot,lt,ct,ht,pt,ft,gt,yt,vt,xt,xt,St,Tt,Ct,At,$t,_t,Rt,Ft,Dt,Mt,zt,Lt,Bt,Vt,Ut,Gt,Ht,qt,Zt,Qt,en,nn,nn,an,an,sn,ln,on,un,cn,dn,hn,pn,fn,mn,gn,xn,wn];for(const n of Sn)(0,kn.kr)(n);var Tn=n(3753),Nn=n(9494);(0,Nn.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Tn.t)(this)};var In=n(4759);(0,Nn.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,In.H)(this)};var Cn=n(983);(0,Nn.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Cn.F)(this)},(0,Nn.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,C.W)(this,e)};var En=n(1802);(0,Nn.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,En.Q)(this,e,t)};var An=n(1819);(0,Nn.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,An.b)(this,e,t)};var $n=n(3068);(0,Nn.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,$n.F)(this,e)};var _n=n(8482);(0,Nn.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,_n.X)(this,e)},(0,Nn.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,D.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,v.t)(this,[])},(0,Nn.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)},(0,Nn.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,v.t)(this,[this.size])},(0,Nn.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,v.t)(this,[e,t])},(0,Nn.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n])},(0,Nn.tp)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n,r])},(0,Nn.tp)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n,r,a])};var Rn=n(3010);(0,Nn.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Rn.q)(this)};var Fn=n(6464);(0,Nn.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Fn.y)(this)};var Dn=n(7803);(0,Nn.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,Dn.r)(this)};var On=n(6349);(0,Nn.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,On.F)(this,e)};var Mn=n(8147);(0,Nn.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Mn.r)(this)};var zn=n(8650);(0,Nn.tp)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,zn.$)(this,e,t,n,r)},(0,Nn.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,tn.G)(this,e,t)};var Ln=n(7237);(0,Nn.tp)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Ln.$)(this,e,t,n,r,a)};var Pn=n(4920);(0,Nn.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Pn.h)(this,e)},(0,Nn.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.w)(this,e)};var Bn=n(5396);(0,Nn.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Bn.m)(this)};var Wn=n(3829);(0,Nn.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Wn.z)(this,e,t)},(0,Nn.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Nn.qY&&(e=[e]),(0,rn.x)([this,...e],t)};var Vn=n(9870);(0,Nn.tp)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Vn.k)(this,e,t,n,r,a,s)};var Un=n(1137);(0,Nn.tp)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Un.w)(this,e,t,n,r,a)},(0,Nn.tp)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,se.X)(this,e,t,n,r,a,s)},(0,Nn.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,jt.g)(this)},(0,Nn.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Yt.y)(this)},(0,Nn.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Nt.L)(this,e,t,n)},(0,Nn.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,me.r)(this,e,t,n)};var Gn=n(1719);(0,Nn.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Gn.R)(this,e,t)};var jn=n(9899);(0,Nn.tp)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,jn.G)(this,e,t,n,r,a,s)};var Hn=n(3789);(0,Nn.tp)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Hn.X)(this,e,t,n,r,a)};var Yn=n(44);(0,Nn.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Yn.e)(this,e)},(0,Nn.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,c.y)(this,e)};var qn=n(6434);(0,Nn.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,qn.O)(this,e)};var Kn=n(3645);(0,Nn.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Kn.P)(this)},(0,Nn.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Xe.L)(this,e)};var Xn=n(8810);(0,Nn.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Xn.Y)(this)};var Zn=n(8826);(0,Nn.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Zn.p)(this,e,t)},(0,Nn.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,Se.o)(this)},(0,Nn.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,yn.U)(this,e)};var Qn=n(2520);(0,Nn.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Qn.I)(this)};var Jn=n(3062);(0,Nn.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Jn.h)(this)},(0,Nn.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,v.t)(this,[this.size])},(0,Nn.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,dt.R)(this)};var er=n(3612);(0,Nn.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,er.w)(this,e)},(0,Nn.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,bn.k)(this,e,t,n)},(0,Nn.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,q.D)(this,e)},(0,Nn.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ue.r)(this,e)};var tr=n(1405);(0,Nn.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,tr.K)(this)};var nr=n(7307);(0,Nn.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,nr.g)(this)};var rr=n(9027);(0,Nn.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,rr.M)(this)};var ar=n(6005);(0,Nn.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ar.E)(this)};var sr=n(3467);(0,Nn.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,sr.y)(this)};var ir=n(8076);(0,Nn.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ir.H)(this,e)},(0,Nn.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,K.I)(this,e)},(0,Nn.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,Je.M)(this,e)};var or=n(6584);(0,Nn.tp)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,or.K)(this,e,t,n,r)};var lr=n(4824);(0,Nn.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,lr.n)(this)};var ur=n(1194);(0,Nn.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ur.H)(this,e)};var cr=n(2175);(0,Nn.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,cr.V)(this,e,t)},(0,Nn.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,wt.R)(this)};var dr=n(1386);(0,Nn.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,dr.K)(this)},(0,Nn.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,X.n)(this,e)},(0,Nn.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Pt.N)(this)};var hr=n(7920);(0,Nn.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,hr.z)(this,e)};var pr=n(3708);(0,Nn.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,pr.r)(this,e)},(0,Nn.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,W.N)(this,e,t,n)};var fr=n(6044);(0,Nn.tp)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,fr.j)(this,e,t,n,r)};var mr=n(891);(0,Nn.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,mr.T)(this,e,t)},(0,Nn.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,vn.P)(this,e)};var gr=n(3015);(0,Nn.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,gr.i)(this,e,t)};var yr=n(1465);(0,Nn.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,yr.j)(this,e,t)};var br=n(6561);(0,Nn.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,br.B)(this,e)};var vr=n(4252);(0,Nn.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,vr.F)(this,e,t)};var xr=n(3617);(0,Nn.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,xr.z)(this,e)},(0,Nn.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,o.l)(this,e)},(0,Nn.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,d.H)(this)};var wr=n(2155);(0,Nn.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,wr.x)(this,e,t,n)};var kr=n(135);(0,Nn.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,kr.E)(this,e)};var Sr=n(6865);(0,Nn.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Sr.M)(this,e,t,n)};var Tr=n(4100);(0,Nn.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Tr.P)(this)},(0,Nn.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Kt.e)(this,e,t)};var Nr=n(7751);(0,Nn.tp)().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Nr.d)(this,e,t,n,r,a,s)},(0,Nn.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,kt.n)(this,e)};var Ir=n(9855);(0,Nn.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ir.N)(this,e)};var Cr=n(9556);(0,Nn.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Cr._)(this,e,t)};var Er=n(6309);(0,Nn.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Er.V)(this)};var Ar=n(5251);(0,Nn.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Ar.V)(this)};var $r=n(9721);(0,Nn.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,$r.j)(this)},(0,Nn.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,v.t)(this,e.shape)},(0,Nn.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,v.t)(this,e)};var _r=n(2214);(0,Nn.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,_r.v)(this,e,t,n)};var Rr=n(2823);(0,Nn.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Rr.b)(this,e,t,n)},(0,Nn.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Ot.B)(this,e)};var Fr=n(9486);(0,Nn.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Fr.z)(this)};var Dr=n(6509);(0,Nn.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,Dr.L)(this)},(0,Nn.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,$e.Z)(this)};var Or=n(2022);(0,Nn.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Or.W)(this)};var Mr=n(3117);(0,Nn.tp)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Mr.w)(this,e,t,n,r,a,s)},(0,Nn.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Jt.r)(this)};var zr=n(5740);(0,Nn.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,zr._)(this)},(0,Nn.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,ce.F)(this)},(0,Nn.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,he.L)(this)},(0,Nn.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ut.d)(this,e,t)};var Lr=n(6719);(0,Nn.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Lr.V)(this,e)};var Pr=n(9973);(0,Nn.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Pr.l)(this)},(0,Nn.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,U.e)(this,e,t)},(0,Nn.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ee.l)(this,e,t)},(0,Nn.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,p.R)(this)},(0,Nn.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,f.E)(this)};var Br=n(208);(0,Nn.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Br.P)(this,e)};var Wr=n(613);(0,Nn.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Wr.r)(this,e)},(0,Nn.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Nn.qY?[this,e]:[this,...e];return(0,Fe.t)(n,t)},(0,Nn.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,l.P)(this,e)};var Vr=n(1231);(0,Nn.tp)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),(0,Vr.Y)(this,e,t,n,r,a,s,i,o)},(0,Nn.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,m.j)(this,e)},(0,Nn.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,x.c)(this,e,t)};var Ur=n(4894);(0,Nn.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ur.M)(this)};var Gr=n(6532);(0,Nn.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Gr.y)(this)},(0,Nn.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,_e.V)(this,e)},(0,Nn.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.w)(this,"bool")},(0,Nn.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.w)(this,"float32")},(0,Nn.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.w)(this,"int32")};var jr=n(2765);(0,Nn.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,jr.r)(this,e,t)},(0,Nn.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.m)(this,e)};var Hr=n(9694);(0,Nn.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Hr.A)(this,e)},(0,Nn.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,De.z)(this,e,t)},(0,Nn.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,bt.K)(this,e)},(0,Nn.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Z._)(e,this,t)},(0,Nn.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,S.P)(this)};class Yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yr.prototype)}}class qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qr.prototype)}}class Kr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kr.prototype)}}class Xr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xr.prototype)}}class Zr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zr.prototype)}}Error;class Qr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Jr(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ea(e,t){if(!e)throw new Zr(t)}function ta(e,t){let n=0;for(const r of e)r===t&&n++;return n}function na(e){return 1===e.length?e[0]:e}function ra(e){return Array.isArray(e)?e:[e]}function aa(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function sa(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ia={};function oa(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function la(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>la(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?la(t):e[n]=t.value)}}}function ua(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ia)s=ia[a];else if(s=t[a],null==s)throw new Kr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Kr(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in ia?[o,l]=ia.className:i in t&&([o,l]=t[i]),null==o)throw new Kr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(ia))e[n]=ia[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},ia);for(const a of Object.keys(n))ia[a]=n[a];la(s.config);const r=l(o,s.config,n,a);return ia=Object.assign({},t),r}{const e=Object.assign({},ia);for(const r of Object.keys(n))ia[r]=n[r];const t=new o(s.config);return ia=Object.assign({},e),t}}}function ca(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function da(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ha(e){if(null==e)throw new Kr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function pa(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Kr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function fa(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return ea(n>=0),ea(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ma(e,t){Array.isArray(e)?(a.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ma(e,`element ${n+1} of ${t}`)))):a.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ga(e)}.`))}function ga(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ga(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function ya(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let ba=0;function va(){return ba++}const xa={};function wa(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in xa||(xa[e]=0),xa[e]+=1,e+xa[e].toString()}const ka=["channelsFirst","channelsLast"],Sa=["nearest","bilinear"],Ta=["valid","same","causal"],Na=["max","avg"],Ia=["sum","mul","concat","ave"],Ca=new Map;function Ea(e){pa(ka,"DataFormat",e)}function Aa(e){pa(Ta,"PaddingMode",e)}function $a(e){pa(Na,"PoolMode",e)}const _a=[],Ra="/";function Fa(e,t){_a.push(e);try{const e=t();return _a.pop(),e}catch(n){throw _a.pop(),n}}function Da(e){if(!za(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===_a.length?"":_a.join(Ra)+Ra)+e}function Oa(e){if(!za(e))throw new Error("Not a valid tensor name: '"+e+"'");Ca.has(e)||Ca.set(e,0);const t=Ca.get(e);if(Ca.set(e,Ca.get(e)+1),t>0){const n=`${e}_${t}`;return Ca.set(n,1),n}return e}const Ma=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function za(e){return!!e.match(Ma)}function La(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Pa(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Ba(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Wa(e,t){if(t<e)throw new Kr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Va;function Ua(){return null==Va&&(Va=(0,a.backend)().epsilon()),Va}function Ga(e,t){return a.cast(e,t)}function ja(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),a.reshape(e,n)}function Ha(e,t,n){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:return a.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return a.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return a.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return a.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return a.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Kr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ya(e,t,n){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:return a.slice2d(e,[0,t],[e.shape[0],n]);case 3:return a.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return a.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Kr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qa(e,t,n,r){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:switch(r){case 1:return Ha(e,t,n);case 2:return Ya(e,t,n);default:throw new Kr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ha(e,t,n);case 2:return a.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ya(e,t,n);default:throw new Kr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ha(e,t,n);case 2:return a.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return a.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ya(e,t,n);default:throw new Kr(`The axis is not within the rank of the tensor ${r}`)}default:throw new Kr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ka(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),a.concat(e,n)}function Xa(e,t){switch(e.rank){case 1:return a.concat1d([e,t]);case 2:return a.concat2d([e,t],0);case 3:return a.concat3d([e,t],0);case 4:return a.concat4d([e,t],0);default:throw new Kr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Za(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Kr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return a.tile(e,t)}function Qa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;return a.randomNormal(e,t,n,r,s)}function Ja(e,t,n,r){if(e.rank<2||t.rank<2)throw new Xr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Xr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const s=!1,i=!1;return a.fused.matMul({a:e,b:t,transposeA:s,transposeB:i,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=a.reshape(e,[-1,i]);const o=t.shape.slice(),l=o.pop(),u=o.pop(),c=[...o,l],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=a.reshape(a.transpose(t,d),[u,-1]);const h=[...s,...c],p=!1,f=!1;return a.reshape(a.fused.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n}),h)}}function es(e,t,n){return(0,a.tidy)((()=>(t=Array.isArray(t)?(0,a.tensor1d)(t,"int32"):a.cast(t,"int32"),a.gather(e,t,n))))}function ts(e){return a.mul(e,e)}function ns(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Kr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1,1,1]):a.reshape(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1,1]):a.reshape(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1]):a.reshape(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(e<3)return t;throw new Kr(`Unsupported input rank by biasAdd: ${t.rank}`)}function rs(e,t,n){return(0,a.tidy)((()=>(null==n&&(n="channelsLast"),Ea(n),a.add(e,ns(e.rank,t,n)))))}function as(e,t,n,r){return(0,a.tidy)((()=>a.dropout(e,t,n,r)))}function ss(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const is=["fanIn","fanOut","fanAvg"],os=["normal","uniform","truncatedNormal"];class ls extends a.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class us extends ls{apply(e,t){return(0,a.zeros)(e,t)}}us.className="Zeros",a.serialization.registerClass(us);class cs extends ls{apply(e,t){return(0,a.ones)(e,t)}}cs.className="Ones",a.serialization.registerClass(cs);class ds extends ls{constructor(e){if(super(),"object"!==typeof e)throw new Kr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Kr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,a.tidy)((()=>(0,a.mul)((0,a.scalar)(this.value),(0,a.ones)(e,t))))}getConfig(){return{value:this.value}}}ds.className="Constant",a.serialization.registerClass(ds);class hs extends ls{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,a.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hs.className="RandomUniform",a.serialization.registerClass(hs);class ps extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`randomNormal does not support dType ${t}.`);return Qa(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ps.className="RandomNormal",a.serialization.registerClass(ps);class fs extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`truncatedNormal does not support dType ${t}.`);return(0,a.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="TruncatedNormal",a.serialization.registerClass(fs);class ms extends ls{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,a.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new Kr("Identity matrix initializer can only be used for 2D square matrices.");return(0,a.mul)(this.gain,(0,a.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}ms.className="Identity",a.serialization.registerClass(ms);class gs extends ls{constructor(e){if(super(),e.scale<0)throw new Kr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,pa(is,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){pa(os,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Ea(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=La(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=La(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=La(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`${this.getClassName()} does not support dType ${t}.`);return(0,a.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,a.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling",a.serialization.registerClass(gs);class ys extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ys.className="GlorotUniform",a.serialization.registerClass(ys);class bs extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}bs.className="GlorotNormal",a.serialization.registerClass(bs);class vs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}vs.className="HeNormal",a.serialization.registerClass(vs);class xs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}xs.className="HeUniform",a.serialization.registerClass(xs);class ws extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ws.className="LeCunNormal",a.serialization.registerClass(ws);class ks extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ks.className="LeCunUniform",a.serialization.registerClass(ks);class Ss extends ls{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,a.tidy)((()=>{if(e.length<2)throw new Xr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=a.util.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=Qa([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),o=a.linalg.qr(i,!1);let l=o[0];const u=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=(0,a.mul)(l,u.sign()),n<r&&(l=l.transpose()),(0,a.mul)((0,a.scalar)(this.gain),l.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ss.className="Orthogonal",a.serialization.registerClass(Ss);const Ts={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ns(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ua(e,a.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Is(e){return oa(e)}function Cs(e){if("string"===typeof e){const t=e in Ts?Ts[e]:e;if("GlorotNormal"===t)return new bs;if("GlorotUniform"===t)return new ys;if("HeNormal"===t)return new vs;if("HeUniform"===t)return new xs;if("LeCunNormal"===t)return new ws;if("LeCunUniform"===t)return new ks;{const e={};return e.className=t,e.config={},Ns(e)}}return e instanceof ls?e:Ns(e)}function Es(e){return Array.isArray(e)&&Array.isArray(e[0])}function As(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function $s(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Kr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function _s(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Kr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Rs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Fs="Variable";class Ds{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Fs,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=va(),n=null==n?Fs:n,this.originalName=Da(n),this.name=Oa(this.originalName),this.trainable_=r,this.constraint=s,this.val=a.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Os(e){return e.map((e=>e.read()))}function Ms(e){e.forEach((e=>{e[0].write(e[1])}))}class zs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ls{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=va(),null!=s&&(this.originalName=Da(s),this.name=Oa(this.originalName)),this.rank=t.length}}let Ps=0;class Bs{constructor(e,t){this.callArgs=t,this.id=Ps++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ws=0;class Vs extends a.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ws++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=aa(e)+"_"+wa(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new qr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Kr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return na(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return na(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Yr(`Layer ${this.name} is not connected, no input to return.`);return na(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Yr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return na(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ra(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ra(this.inputSpec);if(t.length!==n.length)throw new Kr(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],a=n[r];if(null==a)continue;const s=e.rank;if(null!=a.ndim&&s!==a.ndim)throw new Kr(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Kr(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Kr(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&e.dtype!==a.dtype)throw new Kr(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${e.dtype}.`);if(a.axes){const t=e.shape;for(const e in a.axes){const n=Number(e),s=a.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(i))throw new Kr(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Kr(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ra(e),r=function(e){let t=!0;for(const n of ra(e))if(!(n instanceof Ls)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of ra(e))if(n instanceof Ls){t=!1;break}return t}(e);if(r===a)throw new Kr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fa(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ra(e))t.push(n.shape);this.build(na(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=ra(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=na(s),null!=this.activityRegularizer)throw new Xr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ra(e);const t=[];for(const n of e)t.push(n.shape);return na(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Ls(s,n,this,ra(e),t,this.name,r))):new Ls(s,r,this,ra(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Xr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Yr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Yr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rs(this.weights)}build(e){this.built=!0}getWeights(){return Os(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,a.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new Kr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Os(t);for(let s=0;s<r.length;++s){const i=r[s],o=t[s],l=e[s];if(!a.util.arraysEqual(i.shape,l.shape))throw new Kr(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}Ms(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Kr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Cs("zeros"));const l=r.apply(t,n),u=new Ds(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ra(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),a=ra(t),s=ra(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=ra(e);t=ra(t),n=ra(n),r=ra(r),a=As(a),s=As(s);const l=[],u=[],c=[];for(const d of o)l.push(d.sourceLayer),u.push(d.nodeIndex),c.push(d.tensorIndex);new Bs({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Us(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Us(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Gs extends Vs{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wa("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Kr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Kr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Kr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Ls(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Kr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Gs.className="InputLayer",a.serialization.registerClass(Gs);class js{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof js)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Kr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,a.cast)(t,e.dtype)}catch(n){throw new Kr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ls){if(null==this.id2Value[e.id])throw new Kr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Kr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ls){if(null==this.id2Value[e.id])throw new Kr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Kr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,a.dispose)(this.id2Mask)}}const Hs=new Qr,Ys=new Qr;function qs(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map((e=>e.name)),u=[],c=t.names();for(const a of l)-1!==c.indexOf(a)?u.push(t.getValue(a)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=l.join(",")+"|"+t.names().sort().join(",");let h,p=Hs.get(d);if(null==p){const e=function(e,t){a.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Xs(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Xs(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Ks(r)}}(o,t);p=e.sorted,h=e.recipientCounts,Hs.put(d,p),Ys.put(d,h)}h={},s||Object.assign(h,Ys.get(d));const f=new js(t);for(let m=0;m<p.length;++m){if(null!=r){const e=(0,a.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[m],i=e.sourceLayer;if(i instanceof Gs)continue;const o=[],c=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);o.push(e),c.push(r),null!=r&&(g=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==l.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=c[0]);const y=ra(i.apply(o,n));let b=null;i.supportsMasking&&(b=i.computeMask(o,c));const v=Zs(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],y[t],Array.isArray(b)?b[0]:b);const e=l.indexOf(x[t].name);-1!==e&&(u[e]=y[t])}s||(0,a.dispose)(d)}return f.disposeMasks(),i?u:u[0]}function Ks(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Xs(e,t){const n=new Set,r=[],a={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Zs(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Qs(e,t){return(0,a.tidy)((()=>a.sqrt(a.sum(a.mul(e,e),t,!0))))}(0,a.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Hs&&Hs.setMaxEntries(e),null!=Ys&&Ys.setMaxEntries(e)}));class Js extends a.serialization.Serializable{getConfig(){return{}}}class ei extends Js{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>{const t=Qs(e,this.axis),n=a.clipByValue(t,0,this.maxValue);return a.mul(e,a.div(n,a.add(Ua(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ei.className="MaxNorm",a.serialization.registerClass(ei);class ti extends Js{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>a.div(e,a.add(Ua(),Qs(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ti.className="UnitNorm",a.serialization.registerClass(ti);class ni extends Js{apply(e){return a.relu(e)}}ni.className="NonNeg",a.serialization.registerClass(ni);class ri extends Js{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>{const t=Qs(e,this.axis),n=a.add(a.mul(this.rate,a.clipByValue(t,this.minValue,this.maxValue)),a.mul(1-this.rate,t));return a.mul(e,a.div(n,a.add(Ua(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ri.className="MinMaxNorm",a.serialization.registerClass(ri);const ai={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function si(e){return oa(e)}function ii(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ua(e,a.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function oi(e){if(null==e)return null;if("string"===typeof e){return ii({className:e in ai?ai[e]:e,config:{}})}return e instanceof Js?e:ii(e)}async function li(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,a.dispose)(r)}}function ui(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ci;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ci||(ci={}));class di{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class hi{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pi extends di{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=(0,a.tidy)((()=>(0,a.add)(this.totals[r],(0,a.mul)(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,a.tidy)((()=>{const e=(0,a.mul)((0,a.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,a.keep)(t[n])})))}}class fi extends di{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];e.push(i.data()),t.push(a),n.push(s)}}const r=await Promise.all(e);for(let a=0;a<r.length;++a){this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}}class mi extends di{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||a.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():a.util.now();return function(){const i=null!=n?n():a.util.now();return i-s<t||(s=i,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await li(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await li(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await li(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await li(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await li(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):a.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await li(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await li(e),await this.trainEnd(e))}}function gi(e,t){if(null==e&&(e={}),e instanceof di)return[e];if(Array.isArray(e)&&e[0]instanceof di)return e;return ra(e).map((e=>new mi(e,t)))}class yi{constructor(){}static registerCallbackConstructor(e,t){a.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),yi.checkForDuplicate(t),null==yi.constructors[e]&&(yi.constructors[e]=[]),yi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yi.constructors){yi.constructors[+t].forEach((t=>{if(t===e)throw new Kr("Duplicate callback constructor.")}))}}static clear(){yi.constructors={}}static createCallbacks(e){const t=[];for(const n in yi.constructors){const r=+n;e>=r&&t.push(...yi.constructors[r])}return t.map((e=>new e))}}function bi(e,t,n,r,a,s,i,o,l){const u=new fi,c=[new pi,...yi.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new hi(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function vi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ua(e,a.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function xi(e,t){return(0,a.tidy)((()=>{"float32"!==e.dtype&&(e=a.cast(e,"float32"));const n=a.sum(ts(e),t,!0),r=a.fill(n.shape,Ua()),s=a.sqrt(a.maximum(n,r));return a.div(e,s)}))}function wi(e,t){return(0,a.tidy)((()=>a.mean(ts(a.sub(t,e)),-1)))}function ki(e,t){return(0,a.tidy)((()=>a.mean(a.abs(a.sub(t,e)),-1)))}function Si(e,t){return(0,a.tidy)((()=>{const n=a.sub(e,t),r=a.clipByValue(a.abs(e),Ua(),Number.MAX_VALUE),s=a.abs(a.div(n,r));return a.mul(100,a.mean(s,-1))}))}function Ti(e,t){return(0,a.tidy)((()=>{const n=a.clipByValue(t,Ua(),Number.MAX_VALUE),r=a.log(a.add(1,n)),s=a.clipByValue(e,Ua(),Number.MAX_VALUE),i=a.log(a.add(1,s));return a.mean(ts(a.sub(r,i)),-1)}))}function Ni(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.tidy)((()=>{if(n)t=a.softmax(t);else{const e=a.sum(t,t.shape.length-1,!0);t=a.div(t,e)}return t=a.clipByValue(t,Ua(),1-Ua()),a.neg(a.sum(a.mul(a.cast(e,"float32"),a.log(t)),t.shape.length-1))}))}function Ii(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.tidy)((()=>{const r=a.cast(a.floor(function(e){const t=[La(e.shape)];return a.reshape(e,t)}(e)),"int32"),s=(t=a.clipByValue(t,Ua(),1-Ua())).shape;return Ni(a.reshape(a.oneHot(r,s[s.length-1]),s),t,n)}))}function Ci(e,t){return(0,a.tidy)((()=>{let n;return n=a.clipByValue(t,Ua(),1-Ua()),n=a.log(a.div(n,a.sub(1,n))),a.mean(function(e,t){if(!a.util.arraysEqual(e.shape,t.shape))throw new Kr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,a.tidy)((()=>{const n=a.relu(t),r=a.neg(a.abs(t));return a.add(a.sub(n,a.mul(t,e)),a.log1p(a.exp(r)))}))}(e,n),-1)}))}function Ei(e,t){return(0,a.tidy)((()=>{const n=a.clipByValue(e,Ua(),1),r=a.clipByValue(t,Ua(),1);return a.sum(a.mul(e,a.log(a.div(n,r))),-1)}))}function Ai(e,t){return(0,a.tidy)((()=>{const n=xi(e,-1),r=xi(t,-1),s=a.mul(n,r);return a.neg(a.sum(s,-1))}))}yi.constructors={};const $i={meanSquaredError:wi,meanAbsoluteError:ki,meanAbsolutePercentageError:Si,meanSquaredLogarithmicError:Ti,squaredHinge:function(e,t){return(0,a.tidy)((()=>{const n=a.maximum(0,a.sub(1,a.mul(e,t)));return a.mean(ts(n),-1)}))},hinge:function(e,t){return(0,a.tidy)((()=>{const n=a.maximum(0,a.sub(1,a.mul(e,t)));return a.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,a.tidy)((()=>{const n=a.sum(a.mul(e,t),-1),r=a.max(a.mul(a.sub(1,e),t),-1);return a.maximum(0,a.add(1,a.sub(r,n)))}))},logcosh:function(e,t){return(0,a.tidy)((()=>{const n=Math.log(2),r=a.sub(t,e),s=a.sub(a.add(r,a.softplus(a.mul(-2,r))),n);return a.mean(s,-1)}))},categoricalCrossentropy:Ni,sparseCategoricalCrossentropy:Ii,binaryCrossentropy:Ci,kullbackLeiblerDivergence:Ei,poisson:function(e,t){return(0,a.tidy)((()=>{const n=a.log(a.add(Ua(),t));return a.mean(a.sub(t,a.mul(e,n)),-1)}))},cosineProximity:Ai};function _i(e){if("string"===typeof e){if(e in $i)return $i[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Kr(t)}return e}function Ri(e,t){return(0,a.tidy)((()=>{const n=a.mul(.5,a.onesLike(t)),r=Ga(a.greater(t,n),e.dtype);return a.mean(a.equal(e,r),-1)}))}function Fi(e,t){return(0,a.tidy)((()=>Ga(a.equal(a.argMax(e,-1),a.argMax(t,-1)),"float32")))}function Di(e,t){return(0,a.tidy)((()=>a.cast(a.sum(a.logicalAnd(a.equal(e,1),a.equal(t,1))),"float32")))}function Oi(e,t){return Ci(e,t)}function Mi(e,t){return e.rank===t.rank&&(e=a.squeeze(e,[e.rank-1])),(t=a.argMax(t,-1)).dtype!==e.dtype&&(t=a.cast(t,e.dtype)),a.cast(a.equal(e,t),"float32")}const zi=Ni,Li=Ii,Pi={binaryAccuracy:Ri,categoricalAccuracy:Fi,precision:function(e,t){return(0,a.tidy)((()=>{const n=Di(e,t),r=function(e,t){return(0,a.tidy)((()=>a.cast(a.sum(a.logicalAnd(a.equal(e,0),a.equal(t,1))),"float32")))}(e,t),s=a.add(n,r);return a.cast(a.where(a.greater(s,0),a.div(n,s),0),"float32")}))},categoricalCrossentropy:zi,sparseCategoricalCrossentropy:Li,mse:wi,MSE:wi,mae:ki,MAE:ki,mape:Si,MAPE:Si,cosine:Ai};function Bi(e){if("string"===typeof e&&e in Pi)return Pi[e];if("string"!==typeof e&&null!=e)return e;throw new Kr(`Unknown metric ${e}`)}function Wi(e){if(ea(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys($i))if($i[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Pi))if(Pi[n]===e){t=n;break}return void 0!==t?t:e.name}}const Vi=1048576;function Ui(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Gi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Vi&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Gi(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Gi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Gi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ji(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Hi(s,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)a?Yi(o[c],n,r):qi(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?Rs(e.collectedTrainableWeights):Rs(e.trainableWeights);return t}(e),u=Rs(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Hi(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function Yi(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(s){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(s){r="multiple"}Hi([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function qi(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(c){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(c){a="multiple"}const i=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Hi([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let d=1;d<i.length;++d)Hi(["","","","",i[d]],t,r)}function Ki(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Xi(e,t){if(null===e)return null;if("string"===typeof e)return sa(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ki(t,a,r)?n.push(r):n.push(Xi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=sa(n);t[e]=Xi(r,e)}}return t}}function Zi(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return aa(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ki(t,a,r)?n.push(r):n.push(Zi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=aa(n);t[a]="name"!==n&&"className"!==n||"string"!==typeof r?Zi(r,n):r}return t}}const Qi="4.21.0";class Ji extends Vs{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wa(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],da(this.inputs).length!==this.inputs.length)throw new Kr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);da(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;ea(0===t,"input layer has >1 nodes"),ea(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Gs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{null!=r&&null!=a&&null!=l||(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new qr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Ji.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let s=0;s<c;s++){const e=u.inputTensors[s],r=u.inboundLayers[s],a=u.nodeIndices[s],i=u.tensorIndices[s];o(e,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,s),r[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const a=y.inboundLayers[r],s=y.nodeIndices[r],i=a.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in r){const e=r[y];e in h||(h[e]=[]),h[e].push(a[y])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(ca);this.layers=[];for(const y of p){const e=h[y];e.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Ji&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(ca);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new qr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new qr(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Kr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const s=a?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[s])throw new Kr(`Duplicate weight name: ${s}`);n[s]=t,r++}const s=[];for(const i in e){let r=i;if(null==n[i]){const e=i.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[i]]);else if(t)throw new Kr(`Provided weight data has no target variable: ${i}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Kr(`${e.length} of ${r} weights are not set: ${e}`)}Ms(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Qi}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Zi(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,a.tidy)((()=>{e=ra(e);const n=new js;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return qs(this.outputs,n,t)}))}computeMask(e,t){return(0,a.tidy)((()=>{let n;return e=ra(e),n=null==t?Jr(null,e.length):ra(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=As(e);if(t.length!==this.inputLayers.length)throw new Kr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ca);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],a=t.nodeIndices[i],s=t.tensorIndices[i],o=n[`${e.name}_${a}_${s}`];r.push(o)}const a=As(e.computeOutputShape(na(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n[`${e.name}_${s}_${t}`]=a[t]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const e=s[i];ea(e in n),a.push(n[e])}return na(a)}runInternalGraph(e,t){null==t&&(t=Jr(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ca);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),o=ra(e.call(t,u)),l=ra(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ra(e.call(r,u)),l=ra(e.computeMask(r,i));if(e.activityRegularizer)throw new Xr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){ea(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Ji?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=Ji.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Kr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Kr(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Kr(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return(0,a.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Ji.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=Ji.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],i=e.tensorIndices[r];let l=t[Ji.nodeKey(a,s)];null==l&&(l=0),n.push([a.name,l,i,o])}a.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=a,n.push(o)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=Ji.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,s,o])}e.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=Ji.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([e.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let a;for(const i of t){const o=i[0],l=i[1],u=i[2];if(a=null==i[3]?{}:i[3],!(o in r))return void s(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void s(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(na(n),a)}function o(e){const a=e.name,i=vi(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Kr(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!ha(a);)for(const e of u){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const c=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];ea(e in r);const a=r[e].inboundNodes[t].outputTensors;c.push(a[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];ea(e in r);const a=r[e].inboundNodes[t].outputTensors;d.push(a[n])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Kr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,a.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function eo(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function to(e,t){return eo(e,t,"classWeight")}async function no(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,a.tidy)((()=>{if(1===e.shape.length)return(0,a.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,a.argMax)(e,t)}if(1===e.shape[1])return(0,a.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,a.dispose)(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),(0,a.tensor1d)(s,"float32")}return null}function ro(e,t){return(0,a.mul)(e,t)}function ao(e,t){let n,r;const s=t;n=s.xs,r=s.ys,a.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=so("input",e.inputNames,n),o=so("output",e.outputNames,r),l=i[0].shape[0];a.util.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),a.util.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let u=0;u<i.length;u++)a.util.assert(i[u].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let u=0;u<o.length;u++)a.util.assert(o[u].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function so(e,t,n){if(n instanceof a.Tensor)return[n];if(Array.isArray(n))return a.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Kr(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function io(e,t,n){const r=null!=n.batchesPerEpoch;if(a.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),a.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),a.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),a.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),a.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(oo(n.validationData))a.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Xr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const d=gi(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=bi(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let d=0,h=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=ao(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const t=to(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await no(s[e],null,t[e]))}const c=r.concat(s).concat(o),f=l(c);a.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];i[t]=n,a.keep(n)}await p.onBatchEnd(h,i),ui(i),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(s){let t;t=oo(n.validationData)?ra(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ra(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function oo(e){return"function"===typeof e.iterator}function lo(e){a.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function uo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Ha(e,t,n-t))):Ha(e,t,n-t)}function co(e,t){return a.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>co(e,t))):es(e,"int32"===t.dtype?t:a.cast(t,"int32"))))}function ho(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function po(e){const t=[];e instanceof a.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ja(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function fo(e,t){if(null==e)return;const n=[];if(t instanceof a.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const r=[];if(e instanceof a.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function mo(e){return Array.isArray(e)}function go(e){return!function(e){return e instanceof a.Tensor}(e)&&!mo(e)}function yo(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(mo(e)&&e.length>0)t=!0;else if(go(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Kr(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(go(e)){r=[];for(const n of t){if(null==e[n])throw new Kr(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(mo(e)){if(e.length!==t.length)throw new Kr(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new Kr(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=po(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new Kr(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!a)continue;const r=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&r!==o)throw new Kr(`${s} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function bo(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Kr(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new Kr(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new Kr(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!a)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new Kr(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class vo extends Ji{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Kr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");ji(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>a.train.adagrad(.01),Adadelta:()=>a.train.adadelta(1,.95,Ua()),Adam:()=>a.train.adam(.001,.9,.999,Ua()),Adamax:()=>a.train.adamax(.002,.9,.999,Ua(),0),RMSProp:()=>a.train.rmsprop(.001,.9,0,Ua()),SGD:()=>a.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Kr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof a.Optimizer))throw new Kr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Kr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>_i(e)))}else{const n=_i(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Kr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(_i(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fa("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Fa("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Ci?-1!==["accuracy","acc"].indexOf(i)?r=Ri:-1!==["crossentropy","ce"].indexOf(i)&&(r=Oi):this.lossFunctions[e]===Ii?-1!==["accuracy","acc"].indexOf(i)?r=Mi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Li):-1!==["accuracy","acc"].indexOf(i)?r=Fi:-1!==["crossentropy","ce"].indexOf(i)&&(r=zi),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Bi(i);a=e,n=""+Wi(i)}let t;Fa(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;lo(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return na(this.testLoop(t,e,r,n.verbose,n.steps))}finally{fo(a[0],e),fo(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new Xr("Verbose mode is not implemented yet.");a.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"===typeof t.next?t:await t.iterator();let l=0,u=0;for(;!r||u<n.batches;){const t=await o.next();if(i=a.tidy((()=>{if(t.value){const{xs:n,ys:r}=ao(e,t.value),o=n.concat(r),c=a.tidy((()=>s(o)));if(a.dispose(o),0===u)for(let e=0;e<c.length;++e)i.push((0,a.scalar)(0));const d=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=a.tidy((()=>a.add(i[e],a.mul(d,t)))),u>0&&a.dispose(n)}a.dispose(c),l+=d,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const e=i[c];i[c]=a.div(i[c],l),a.dispose(e)}return na(i)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new Kr(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Kr(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Kr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new js;if(e instanceof a.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Kr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const a of this.inputs){const t=e[a.name];if(null==t)throw new Kr(`No value is provided for the model's input ${a.name}`);i.add(a,t)}const o=qs(s,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Jr(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Kr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return a.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new Xr("Verbose predictLoop() is not implemented yet.");const s=ho(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){a.tidy((()=>{const n=s[t][0],r=s[t][1],a=uo(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new js(i);return qs(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)))}return na(i.map((e=>a.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=po(e);bo(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return lo(e),this.predictLoop(n,e)}finally{fo(n,e)}}predictOnBatch(e){bo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];this.feedLossFns[a]===Ii?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){const n=da(e.map((e=>e.shape[0])));n.sort();const r=da(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Kr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Kr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!a.util.arraysEqual(n,r))throw new Kr(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=yo(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yo(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[wi,Ci,Ni];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Ni&&1===s.shape[s.shape.length-1])throw new Kr(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Kr(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Kr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=to(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await no(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return a.tidy((()=>{const i=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Xr("Verbose mode is not implemented yet.");if(null!=s)throw new Xr("steps mode in testLoop() is not implemented yet");{const r=ho(i,n),s=(0,a.tensor1d)(Wa(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],l=r[n][1],u=Ha(s,i,l-i),c=co(t,u),d=e(c);if(0===n)for(let e=0;e<d.length;++e)o.push((0,a.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];o[e]=a.add(o[e],a.mul(l-i,t))}}for(let e=0;e<o.length;++e)o[e]=a.div(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(ta(e,r)>1){a+=`_${ta(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new js(e),l=qs(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],l[n]);null!=s[n]&&(e=ro(e,s[n]));const i=a.mean(e);t.push(i),u=0===n?e:a.add(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=a.mean(t(r[s],l[s]))}a.keep(e),i.push(e)}return u=a.mean(u),this.calculateLosses().forEach((e=>{u=a.add(u,e)})),u}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>a.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const o=new js(i),l=qs(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=a.mean(r(s[e],l[e]));n=0===e?i:a.add(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=a.mean(n(s[r],l[r]));t.push(i)}return t}))}async fit(e,t){let n,r,s,i,o,l,u,c,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const a=null==h.batchSize?32:h.batchSize;lo(a);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,a);n=f[0],r=f[1],d=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Xr("validationData including sample weights is not supported yet."):new Kr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);o=h.validationData[0],l=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,a);u=t[0],c=t[1],m=u.concat(c)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];u=uo(n,e,t),s=n,n=uo(n,0,e),c=uo(r,e,t),i=r,r=uo(r,0,e),m=u.concat(c)}else null!=h.validationSteps&&(g=!0);const y=n.concat(r).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=gi(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,a,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,fo(n,e),fo(r,t),fo(s,e),fo(i,t),fo(u,o),fo(c,l),null!=d&&a.dispose(d)}}async fitLoop(e,t,n,r,s,i,o,l,u,c,d,h,p,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==p))throw new Kr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;null!=g&&(y=Wa(0,g)),null==i&&(i=1);const{callbackList:b,history:v}=bi(o,i,s,h,g,p,r,m,d);b.setModel(this),this.history=v,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await b.onEpochBegin(x);const s={};if(null!=p)throw new Xr("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Xr("batch shuffling is not implemneted yet");c&&a.util.shuffle(y);const i=(0,a.tensor1d)(y),o=ho(g,r);for(let c=0;c<o.length;++c){const d={};if(await b.onBatchBegin(c,d),a.tidy((()=>{const h=o[c][0],p=o[c][1],f=Ha(i,h,p-h);d.batch=c,d.size=p-h;const g=co(t,f),y=e(g);for(let e=0;e<n.length;++e){const t=n[e],r=y[e];d[t]=r,a.keep(r)}if(c===o.length-1&&m){const e=this.testLoop(l,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];a.keep(i),s["val_"+r]=i}}})),await b.onBatchEnd(c,d),ui(d),this.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(x,s),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return io(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const a of i){const e=await a.data();o.push(e[0])}return a.dispose(i),fo(n[0],e),fo(n[1],t),na(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=a.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-a.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=aa(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>aa(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=aa(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[aa(Wi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>aa(Wi(e))));{const e={};for(const t in this.metrics)e[t]=aa(Wi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=vi(Xi(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=sa(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>sa(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=sa(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>sa(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=sa(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=a.io.getSaveHandlers(e);if(0===t.length)throw new Kr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Kr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Kr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Qi}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await a.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=a.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ui(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ui(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}vo.className="Model",a.serialization.registerClass(vo);class xo extends vo{}xo.className="Functional",a.serialization.registerClass(xo);class wo extends vo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wa("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Kr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof wo||e instanceof vo;let n;if(t){if(n=e,1!==n.outputs.length)throw new Kr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Kr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Kr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Kr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Gs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Kr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Kr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Us(this.outputs[0])}this.inboundNodes=[],new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Jr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(_s(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Kr("Legacy serialization format not supported yet.");n=t}else a.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof wo))throw new Xr(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const a of n){const e=vi(a,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new Kr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Kr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}wo.className="Sequential",a.serialization.registerClass(wo);class ko extends a.serialization.Serializable{getConfig(){return{}}}class So extends ko{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Xr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return a.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}So.className="elu",a.serialization.registerClass(So);class To extends ko{apply(e){return a.selu(e)}}To.className="selu",a.serialization.registerClass(To);class No extends ko{apply(e){return a.relu(e)}}No.className="relu",a.serialization.registerClass(No);class Io extends ko{apply(e){return(0,a.tidy)((()=>a.minimum(6,a.relu(e))))}}Io.className="relu6",a.serialization.registerClass(Io);class Co extends ko{apply(e){return e}}Co.className="linear",a.serialization.registerClass(Co);class Eo extends ko{apply(e){return a.sigmoid(e)}}Eo.className="sigmoid",a.serialization.registerClass(Eo);class Ao extends ko{apply(e){return function(e){return(0,a.tidy)((()=>{const t=a.add(.5,a.mul(.2,e));return a.clipByValue(t,0,1)}))}(e)}}Ao.className="hardSigmoid",a.serialization.registerClass(Ao);class $o extends ko{apply(e){return a.softplus(e)}}$o.className="softplus",a.serialization.registerClass($o);class _o extends ko{apply(e){return function(e){return(0,a.tidy)((()=>a.div(e,a.add(a.abs(e),1))))}(e)}}_o.className="softsign",a.serialization.registerClass(_o);class Ro extends ko{apply(e){return a.tanh(e)}}Ro.className="tanh",a.serialization.registerClass(Ro);class Fo extends ko{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.softmax(e,t)}}Fo.className="softmax",a.serialization.registerClass(Fo);class Do extends ko{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.logSoftmax(e,t)}}Do.className="logSoftmax",a.serialization.registerClass(Do);class Oo extends ko{apply(e){return(0,a.tidy)((()=>a.tidy((()=>{const t=Math.sqrt(2),n=a.mul(.5,a.add(1,a.erf(a.div(e,t))));return a.mul(e,n)}))))}}Oo.className="gelu",a.serialization.registerClass(Oo);class Mo extends ko{apply(e){return(0,a.tidy)((()=>a.mul(.5,a.mul(e,a.add(1,a.tanh(a.mul(a.sqrt(a.div(2,Math.PI)),a.add(e,a.mul(.044715,a.pow(e,3))))))))))}}Mo.className="gelu_new",a.serialization.registerClass(Mo);class zo extends ko{apply(e){return(0,a.tidy)((()=>a.mul(e,a.tanh(a.softplus(e)))))}}zo.className="mish",a.serialization.registerClass(zo);class Lo extends ko{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,a.tidy)((()=>a.mul(a.sigmoid(a.mul(e,t)),e)))}}function Po(e){return e.getClassName()}function Bo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ua(e,a.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function Wo(e){if(null==e){const e={className:"linear",config:{}};return Bo(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Bo(t)}return e instanceof ko?e:Bo(e)}function Vo(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Lo.className="swish",a.serialization.registerClass(Lo);class Uo extends a.serialization.Serializable{}class Go extends Uo{constructor(e){super(),Vo(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,a.tidy)((()=>{let t=(0,a.zeros)([1]);return this.hasL1&&(t=(0,a.add)(t,(0,a.sum)(a.mul(this.l1,(0,a.abs)(e))))),this.hasL2&&(t=(0,a.add)(t,(0,a.sum)(a.mul(this.l2,ts(e))))),a.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Go.className="L1L2",a.serialization.registerClass(Go);const jo={l1l2:"L1L2"};function Ho(e){return oa(e)}function Yo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ua(e,a.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function qo(e){if(null==e)return null;if("string"===typeof e){return Yo({className:e in jo?jo[e]:e,config:{}})}return e instanceof Uo?e:Yo(e)}class Ko extends Vs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=$s(e);let n=(0,a.relu)(e);return null!=this.maxValue&&(n=(0,a.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ko.className="ReLU",a.serialization.registerClass(Ko);class Xo extends Vs{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$s(e);return(0,a.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Xo.className="LeakyReLU",a.serialization.registerClass(Xo);class Zo extends Vs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qo(e.alphaRegularizer),this.alphaConstraint=oi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Kr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=_s(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new zs({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=$s(e),(0,a.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Is(this.alphaInitializer),alphaRegularizer:Ho(this.alphaRegularizer),alphaConstraint:si(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Zo.className="PReLU",a.serialization.registerClass(Zo);class Qo extends Vs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Xr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$s(e);return(0,a.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Qo.className="ELU",a.serialization.registerClass(Qo);class Jo extends Vs{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=$s(e);return(0,a.mul)(n,(0,a.cast)((0,a.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Jo.className="ThresholdedReLU",a.serialization.registerClass(Jo);class el extends Vs{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Fo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,a.tidy)((()=>{let n=$s(e);const r=t.mask;if(null!=r){const e=(0,a.mul)((0,a.sub)((0,a.ones)(n.shape),(0,a.cast)(r,n.dtype)),(0,a.scalar)(-1e9));n=(0,a.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,a.exp)((0,a.sub)(n,(0,a.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tl(e,t,n){if("number"===typeof e)return Jr(e,t);if(e.length!==t)throw new Kr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Kr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function nl(e,t,n,r){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((a+r-1)/r)}function rl(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Ba([n-t,0]);else{if("same"!==r)throw new Kr(`Unsupport padding mode: ${r}.`);e*=t}return e}function al(e,t){return(0,a.tidy)((()=>(Ea(t),"channelsFirst"===t?a.transpose(e,[0,2,3,1]):e)))}function sl(e,t){return(0,a.tidy)((()=>(Ea(t),"channelsFirst"===t?a.transpose(e,[0,2,3,4,1]):e)))}function il(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Ea(i),3!==e.shape.length)throw new Kr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Kr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Kr(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=a.transpose(e,[0,2,1])),"causal"===s)throw new Xr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=a.conv1d(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(l=rs(l,n)),l}))}function ol(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Ea(i),3!==e.rank&&4!==e.rank)throw new Kr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Kr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=al(e,i);if("causal"===s)throw new Xr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=a.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(u=a.transpose(u,[0,3,1,2])),u}))}function ll(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Ea(i),4!==e.rank&&5!==e.rank)throw new Kr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Kr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let l=sl(e,i);if("causal"===s)throw new Xr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=a.conv3d(l,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(l=rs(l,n)),"channelsFirst"===i&&(l=a.transpose(l,[0,4,1,2,3])),l}))}el.className="Softmax",a.serialization.registerClass(el);class ul extends Vs{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ul.verifyArgs(t),this.rank=e,ma(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tl(t.kernelSize,e,"kernelSize"),this.strides=tl(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Aa(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ea(this.dataFormat),this.activation=Wo(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=oi(t.biasConstraint),this.biasRegularizer=qo(t.biasRegularizer),this.activityRegularizer=qo(t.activityRegularizer),this.dilationRate=tl(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Kr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Kr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Kr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ea("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!fa(e.kernelSize,"number",1,3))throw new Kr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Po(this.activation),useBias:this.useBias,biasInitializer:Is(this.biasInitializer),biasRegularizer:Ho(this.biasRegularizer),activityRegularizer:Ho(this.activityRegularizer),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class cl extends ul{constructor(e,t){super(e,t),this.kernel=null,cl.verifyArgs(t),this.filters=t.filters,ma(this.filters,"filters"),this.kernelInitializer=Cs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=oi(t.kernelConstraint),this.kernelRegularizer=qo(t.kernelRegularizer)}build(e){e=_s(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Kr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t;e=$s(e);const n=null==this.bias?null:this.bias.read(),r=ya(this.activation.getClassName());if(null!=r&&2===this.rank)t=ol(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=il(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ol(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xr("convolutions greater than 3D are not implemented yet.");t=ll(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=_s(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=nl(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Is(this.kernelInitializer),kernelRegularizer:Ho(this.kernelRegularizer),kernelConstraint:si(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Kr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class dl extends cl{constructor(e){super(2,e),dl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fa(e.kernelSize,"number",1,2))throw new Kr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}dl.className="Conv2D",a.serialization.registerClass(dl);class hl extends cl{constructor(e){super(3,e),hl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Kr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}hl.className="Conv3D",a.serialization.registerClass(hl);class pl extends dl{constructor(e){if(super(e),this.inputSpec=[new zs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Kr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=_s(e)).length)throw new Kr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Kr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zs({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return a.tidy((()=>{let t=$s(e);if(4!==t.shape.length)throw new Kr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],l=n[i],u=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,rl(o,d,u,this.padding),rl(l,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.transpose(t,[0,2,3,1]));let f=a.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.transpose(f,[0,3,1,2])),null!=this.bias&&(f=rs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=_s(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=rl(t[r],o,s,this.padding),t[a]=rl(t[a],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pl.className="Conv2DTranspose",a.serialization.registerClass(pl);class fl extends hl{constructor(e){if(super(e),this.inputSpec=[new zs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Kr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=_s(e)).length)throw new Kr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Kr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zs({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return a.tidy((()=>{let t=$s(e);if(5!==t.shape.length)throw new Kr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,o;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);const l=n[o],u=n[s],c=n[i],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[r,rl(l,f,d,this.padding),rl(u,m,h,this.padding),rl(c,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.transpose(t,[0,2,3,4,1]));let b=a.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=a.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=rs(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=_s(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=rl(t[r],u,i,this.padding),t[a]=rl(t[a],c,o,this.padding),t[s]=rl(t[s],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}fl.className="Conv3DTranspose",a.serialization.registerClass(fl);class ml extends cl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Kr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Kr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Kr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qo(t.depthwiseRegularizer),this.depthwiseConstraint=oi(t.depthwiseConstraint),this.pointwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qo(t.pointwiseRegularizer),this.pointwiseConstraint=oi(t.pointwiseConstraint)}build(e){if((e=_s(e)).length<this.rank+2)throw new Kr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Kr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new zs({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t;if(e=$s(e),1===this.rank)throw new Xr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=a.transpose(e,[0,2,3,1])),t=a.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=a.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Is(this.depthwiseInitializer),e.pointwiseInitializer=Is(this.pointwiseInitializer),e.depthwiseRegularizer=Ho(this.depthwiseRegularizer),e.pointwiseRegularizer=Ho(this.pointwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseConstraint),e.pointwiseConstraint=si(this.pointwiseConstraint),e}}ml.className="SeparableConv";class gl extends ml{constructor(e){super(2,e)}}gl.className="SeparableConv2D",a.serialization.registerClass(gl);class yl extends cl{constructor(e){super(1,e),yl.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fa(e.kernelSize,"number",1,1))throw new Kr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}yl.className="Conv1D",a.serialization.registerClass(yl);class bl extends Vs{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,a.tidy)((()=>{if(e=$s(e),"channelsLast"===this.dataFormat){const t=qa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=qa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bl.className="Cropping2D",a.serialization.registerClass(bl);class vl extends Vs{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ea(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,pa(Sa,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return a.tidy((()=>{let t=$s(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=a.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?a.image.resizeNearestNeighbor(t,[e,r]):a.image.resizeBilinear(t,[e,r]);return a.transpose(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?a.image.resizeNearestNeighbor(t,[e,r]):a.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}vl.className="UpSampling2D",a.serialization.registerClass(vl);class xl extends ul{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=oi(e.depthwiseConstraint),this.depthwiseRegularizer=qo(e.depthwiseRegularizer)}build(e){if((e=_s(e)).length<4)throw new Kr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Kr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0;return(0,a.tidy)((()=>{null==s&&(s="channelsLast"),Ea(s);let o=al(e,s);if(4!==e.rank)throw new Kr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Kr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=a.depthwiseConv2d(o,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o}))}(e=$s(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=_s(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=nl(t,this.kernelSize[0],this.padding,this.strides[0]),s=nl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Is(this.depthwiseInitializer),e.depthwiseRegularizer=Ho(this.depthwiseRegularizer),e.depthwiseConstraint=si(this.depthwiseRegularizer),e}}function wl(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Kr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function kl(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return a.tidy((()=>{const u=t.shape.length;if(u<3)throw new Kr(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Wa(2,u));if(t=a.transpose(t,c),null!=i)throw new Xr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=a.cast(a.cast(s,"bool"),"float32"),s.rank===u-1&&(s=a.expandDims(s,-1)),s=a.transpose(s,c)),r&&(t=a.reverse(t,0),null!=s&&(s=a.reverse(s,0)));const d=[];let h,p=n;const f=t.shape[0],m=a.unstack(t);let g,y;null!=s&&(g=a.unstack(s));for(let t=0;t<f;++t){const n=m[t],r=a.tidy((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=a.tidy((()=>{const e=g[t],n=a.sub(a.onesLike(e),e);return{output:a.add(a.mul(r[0],e),a.mul(p[0],n)),newStates:p.map(((t,s)=>a.add(a.mul(r[1][s],e),a.mul(t,n))))}}));h=e.output,p=e.newStates}l&&d.push(h)}if(l){const e=1;y=a.stack(d,e)}return[h,y,p]}))}xl.className="DepthwiseConv2D",a.serialization.registerClass(xl);class Sl extends Vs{constructor(e){let t;if(super(e),null==e.cell)throw new Kr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new _l({cells:e.cell}):e.cell,null==t.stateSize)throw new Kr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new zs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Wa(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Es(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return a.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Xr("Constants support is not implemented in RNN yet.");Es(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new zs({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Kr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new zs({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,a.tidy)((()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Kr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.zeros([n,e]))):this.states_=[a.zeros([n,this.cell.stateSize])];else if(null==e)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.zeros([n,e]))):this.states_[0]=a.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Kr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!a.util.arraysEqual(r.shape,i))throw new Kr(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>a.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=wl(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new zs({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Ls){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=$s(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Kr(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=kl(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return(0,a.tidy)((()=>{let t=a.zeros(e.shape);return t=a.sum(t,[1,2]),t=ja(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Za(t,[1,e]):t)):this.cell.stateSize>1?[Za(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Sl.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=vi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Sl.className="RNN",a.serialization.registerClass(Sl);class Tl extends Vs{}class Nl extends Tl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ma(this.units,"units"),this.activation=Wo(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qo(e.kernelRegularizer),this.recurrentRegularizer=qo(e.recurrentRegularizer),this.biasRegularizer=qo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Ba([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=_s(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{if(2!==e.length)throw new Kr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>a.onesLike(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>a.onesLike(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=Ja(null!=i?a.mul(e,i):e,this.kernel.read()),null!=this.bias&&(s=rs(s,this.bias.read())),null!=o&&(n=a.mul(n,o));let l=a.add(s,Ja(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Po(this.activation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:Ho(this.kernelRegularizer),recurrentRegularizer:Ho(this.recurrentRegularizer),biasRegularizer:Ho(this.biasRegularizer),activityRegularizer:Ho(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Nl.className="SimpleRNNCell",a.serialization.registerClass(Nl);class Il extends Sl{constructor(e){e.cell=new Nl(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Il.className="SimpleRNN",a.serialization.registerClass(Il);class Cl extends Tl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Kr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ma(this.units,"units"),this.activation=Wo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qo(e.kernelRegularizer),this.recurrentRegularizer=qo(e.recurrentRegularizer),this.biasRegularizer=qo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Ba([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=_s(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{if(2!==e.length)throw new Kr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>a.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=a.mul(e,s[0]));let c=Ja(e,this.kernel.read());this.useBias&&(c=rs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,i[0]));const d=this.recurrentKernel.read(),[h,p]=a.split(d,[2*this.units,this.units],d.rank-1),f=Ja(r,h),[m,g,y]=a.split(c,3,c.rank-1),[b,v]=a.split(f,2,f.rank-1);o=this.recurrentActivation.apply(a.add(m,b)),l=this.recurrentActivation.apply(a.add(g,v));const x=Ja(a.mul(l,r),p);u=this.activation.apply(a.add(y,x));const w=a.add(a.mul(o,r),a.mul(a.add(1,a.neg(o)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Po(this.activation),recurrentActivation:Po(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:Ho(this.kernelRegularizer),recurrentRegularizer:Ho(this.recurrentRegularizer),biasRegularizer:Ho(this.biasRegularizer),activityRegularizer:Ho(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Cl.className="GRUCell",a.serialization.registerClass(Cl);class El extends Sl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cl(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}El.className="GRU",a.serialization.registerClass(El);class Al extends Tl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ma(this.units,"units"),this.activation=Wo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qo(e.kernelRegularizer),this.recurrentRegularizer=qo(e.recurrentRegularizer),this.biasRegularizer=qo(e.biasRegularizer),this.kernelConstraint=oi(e.kernelConstraint),this.recurrentConstraint=oi(e.recurrentConstraint),this.biasConstraint=oi(e.biasConstraint),this.dropout=Pa([1,Ba([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=_s(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ls{apply(t,r){const a=e.apply([n]),s=(new cs).apply([n]),i=e.apply([2*n]);return Xa(Xa(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,a.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Kr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>a.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=a.mul(e,i[0]));let h=Ja(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,o[0])),h=a.add(h,Ja(r,this.recurrentKernel.read())),this.useBias&&(h=rs(h,this.bias.read()));const[p,f,m,g]=a.split(h,4,h.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=a.add(a.mul(u,s),a.mul(l,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=a.mul(d,this.activation.apply(c));return[y,y,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Po(this.activation),recurrentActivation:Po(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ho(this.kernelRegularizer),recurrentRegularizer:Ho(this.recurrentRegularizer),biasRegularizer:Ho(this.biasRegularizer),activityRegularizer:Ho(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),recurrentConstraint:si(this.recurrentConstraint),biasConstraint:si(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Al.className="LSTMCell",a.serialization.registerClass(Al);class $l extends Sl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Al(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}$l.className="LSTM",a.serialization.registerClass($l);class _l extends Tl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,a.tidy)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Es(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Fa(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const a of t.cells)r.push(vi(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Os(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ms(t)}}function Rl(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,o=()=>null!=i?i(t(),n):as(t(),n),l=()=>ss(o,t,r);if(!s||s<=1)return a.keep(l().clone());return Array(s).fill(void 0).map(l).map((e=>a.keep(e.clone())))}_l.className="StackedRNNCells",a.serialization.registerClass(_l);var Fl=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class Dl extends Sl{constructor(e){if(e.unroll)throw new Xr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Xr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new zs({ndim:5})]}call(e,t){return a.tidy((()=>{if(null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Kr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return a.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=a.zeros(s);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.tidy((()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Kr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.zeros(s))):this.states_=[a.zeros(s)];else if(null==e)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.zeros(s))):this.states_[0]=a.zeros(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Kr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!a.util.arraysEqual(n.shape,r))throw new Kr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>a.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=nl(l,r[0],a,s[0],i[0]),d=nl(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}Dl.className="ConvRNN2D";class Ol extends Al{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ma(this.filters,"filters"),this.kernelSize=tl(n,2,"kernelSize"),this.kernelSize.forEach((e=>ma(e,"kernelSize"))),this.strides=tl(r||1,2,"strides"),this.strides.forEach((e=>ma(e,"strides"))),this.padding=a||"valid",Aa(this.padding),this.dataFormat=s||"channelsLast",Ea(this.dataFormat),this.dilationRate=tl(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ma(e,"dilationRate")))}build(e){var t;e=_s(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Kr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ls{apply(e,t){return Ka([n.apply([r]),a.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return a.tidy((()=>{if(3!==e.length)throw new Kr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>a.onesLike(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?a.mul(t[n],e):e;let u=l(r,o,0),c=l(r,o,1),d=l(r,o,2),h=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>a.onesLike(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=l(s,p,0),m=l(s,p,1),g=l(s,p,2),y=l(s,p,3);const[b,v,x,w]=a.split(this.kernel.read(),4,3),[k,S,T,N]=this.useBias?a.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,v,S,this.padding),d=this.inputConv(d,x,T,this.padding),h=this.inputConv(h,w,N,this.padding);const[I,C,E,A]=a.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);const $=this.recurrentActivation.apply(a.add(u,f)),_=this.recurrentActivation.apply(a.add(c,m)),R=a.add(a.mul(_,i),a.mul($,this.activation.apply(a.add(d,g)))),F=a.mul(this.recurrentActivation.apply(a.add(h,y)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Fl(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=a.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rs(s,n,this.dataFormat):s}recurrentConv(e,t){return a.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ol.className="ConvLSTM2DCell",a.serialization.registerClass(Ol);class Ml extends Dl{constructor(e){const t=new Ol(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Ml.className="ConvLSTM2D",a.serialization.registerClass(Ml);class zl extends Vs{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ss((()=>as(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}zl.className="Dropout",a.serialization.registerClass(zl);class Ll extends zl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ll.className="SpatialDropout1D",a.serialization.registerClass(Ll);class Pl extends Vs{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ma(this.units,"units"),this.activation=Wo(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=oi(e.kernelConstraint),this.biasConstraint=oi(e.biasConstraint),this.kernelRegularizer=qo(e.kernelRegularizer),this.biasRegularizer=qo(e.biasRegularizer),this.activityRegularizer=qo(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=_s(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=_s(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e),r=ya(this.activation.getClassName());let a;return null!=r?a=Ja(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Ja(n,this.kernel.read()),null!=this.bias&&(a=rs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Po(this.activation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:Ho(this.kernelRegularizer),biasRegularizer:Ho(this.biasRegularizer),activityRegularizer:Ho(this.activityRegularizer),kernelConstraint:si(this.kernelConstraint),biasConstraint:si(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pl.className="Dense",a.serialization.registerClass(Pl);class Bl extends Vs{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=_s(e);for(const t of e.slice(1))if(null==t)throw new Kr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],La(e,1)]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);let n=$s(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,a.transpose)(n,e)}return function(e){if(e.rank<=1)throw new Kr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],La(e.shape,1)];return a.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Bl.className="Flatten",a.serialization.registerClass(Bl);class Wl extends Vs{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wo(e.activation)}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Po(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Wl.className="Activation",a.serialization.registerClass(Wl);class Vl extends Vs{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,a.tidy)((()=>{return e=$s(e),t=e,n=this.n,(0,a.tidy)((()=>{if(2!==t.shape.length)throw new Kr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Za(ja(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Vl.className="RepeatVector",a.serialization.registerClass(Vl);class Ul extends Vs{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==s)throw new Kr("Can only specifiy one unknown dimension.");s=o}else a*=e}const i=La(e);if(null!==s){if(0===a||i%a!==0)throw new Kr(n);r[s]=i/a}else if(i!==a)throw new Kr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,a.reshape)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Ul.className="Reshape",a.serialization.registerClass(Ul);class Gl extends Vs{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Wa(1,e.dims.length+1);if(!a.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zs({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=_s(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,a.transpose)($s(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Gl.className="Permute",a.serialization.registerClass(Gl);class jl extends Vs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=$s(e);return(0,a.any)((0,a.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e),r=(0,a.any)((0,a.notEqual)(n,this.maskValue),-1,!0);return(0,a.mul)(n,(0,a.cast)(r,n.dtype))}))}}jl.className="Masking",a.serialization.registerClass(jl);class Hl extends Vs{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ra(e.inputLength))}this.inputDim=e.inputDim,ma(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ma(this.outputDim,"outputDim"),this.embeddingsInitializer=Cs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qo(e.embeddingsRegularizer),this.activityRegularizer=qo(e.activityRegularizer),this.embeddingsConstraint=oi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,a.tidy)((()=>this.maskZero?(e=$s(e),(0,a.notEqual)(e,(0,a.zerosLike)(e))):null))}computeOutputShape(e){if(e=_s(e),null==this.inputLength)return[...e,this.outputDim];const t=ra(this.inputLength);if(t.length!==e.length-1)throw new Kr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Kr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);let n=$s(e);"int32"!==n.dtype&&(n=Ga(n,"int32"));const r=es(this.embeddings.read(),(0,a.reshape)(n,[n.size]));return(0,a.reshape)(r,_s(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Is(this.embeddingsInitializer),embeddingsRegularizer:Ho(this.embeddingsRegularizer),activityRegularizer:Ho(this.activityRegularizer),embeddingsConstraint:si(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hl.className="Embedding",a.serialization.registerClass(Hl);class Yl extends Vs{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Xr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Kr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[_s(e)]),e.length<2)throw new Kr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=da(t),t.length>1)throw new Kr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===da(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,a.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Ba(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ja(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,r=e[0],s=e.slice(1).concat([r]);let o=a.reshape(i,[r].concat(La(e.slice(1))));o=a.transpose(o,[1,0]),o=a.reshape(o,s),t.push(o),n=!0}else if(e>1){const r=Wa(1,e).concat([0]);t.push(a.transpose(i,r)),n=!0}else t.push(i)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=a.reshape(a.transpose(a.reshape(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Wa(0,s-1));r=a.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=da(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return a.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Kr("`mask` should be an Array");if(!Array.isArray(e))throw new Kr("`inputs` should be an Array");if(t.length!==e.length)throw new Kr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:a.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=a.logicalAnd(n,t[e]);return n}))}}class ql extends Yl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.add(t,e[n]);return t}))}}ql.className="Add",a.serialization.registerClass(ql);class Kl extends Yl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.mul(t,e[n]);return t}))}}Kl.className="Multiply",a.serialization.registerClass(Kl);class Xl extends Yl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.add(t,e[n]);return a.mul(1/e.length,t)}))}}Xl.className="Average",a.serialization.registerClass(Xl);class Zl extends Yl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.maximum(t,e[n]);return t}))}}Zl.className="Maximum",a.serialization.registerClass(Zl);class Ql extends Yl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.minimum(t,e[n]);return t}))}}Ql.className="Minimum",a.serialization.registerClass(Ql);class Jl extends Yl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Kr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(a.util.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new Kr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,a.tidy)((()=>Ka(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Kr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Kr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Kr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Kr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return a.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let i=0;i<e.length;++i)null==t[i]?r.push(a.cast(a.onesLike(e[i]),"bool")):t[i].rank<e[i].rank?r.push(a.expandDims(t[i],-1)):r.push(t[i]);const s=a.concat(r,this.axis);return a.all(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function eu(e,t){for(;e<0;)e+=t;return e}Jl.className="Concatenate",a.serialization.registerClass(Jl);class tu extends Yl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){a.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Xr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Kr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Kr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>eu(t,e[n].shape.length))):[eu(this.axes,n.shape.length),eu(this.axes,r.shape.length)],this.normalize&&(n=xi(n,t[0]),r=xi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Xr("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),a.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Xr("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return a.tidy((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=a.reshape(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=a.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?a.sum(a.mul(e,t),i[0]):a.sum(a.mul(a.transpose(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;o=a.matMul(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=a.squeeze(o,t)}return 1===o.shape.length&&(o=a.expandDims(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[eu(this.axes,e.length),eu(this.axes,t.length)],n}computeOutputShape(e){a.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Xr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}tu.className="Dot",a.serialization.registerClass(tu);class nu extends Vs{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e);return ss((()=>(0,a.add)(Qa(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}nu.className="GaussianNoise",a.serialization.registerClass(nu);class ru extends Vs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=$s(e);if(this.rate>0&&this.rate<1){return ss((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,a.mul)(n,Qa(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}ru.className="GaussianDropout",a.serialization.registerClass(ru);class au extends Vs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||$s(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=$s(e),r=-1.7580993408473766;let s=(0,a.greaterEqual)((0,a.randomUniform)(n),this.rate);s=Ga(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate,l=(0,a.add)((0,a.mul)(t,s),(0,a.mul)((0,a.add)(s,-1),r));return(0,a.add)((0,a.mul)(l,i),o)};return ss(r,(()=>$s(e)),t.training||!1)}return e}))}}function su(e,t,n,r,s){let i,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)i=a.batchNorm2d(e,t,n,r,s,o);else if(3===e.rank)i=a.batchNorm3d(e,t,n,r,s,o);else{if(4!==e.rank)throw new Xr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=a.batchNorm4d(e,t,n,r,s,o)}return i}function iu(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return a.util.arraysEqual(r.slice().sort(),Wa(0,e.rank-1))?function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,a.tidy)((()=>{const i=a.moments(e,r),o=i.mean,l=i.variance;return[su(e,o,l,n,t,s),o,l]}))}(e,t,n,r,s):function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,a.tidy)((()=>{const i=a.moments(e,r),o=i.mean,l=i.variance,u=[];for(const t of Wa(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=(0,a.reshape)(o,u),d=(0,a.reshape)(l,u),h=null==t?null:(0,a.reshape)(t,u),p=null==n?null:(0,a.reshape)(n,u);return[su(e,c,d,p,h,s),o,l]}))}(e,t,n,r,s)}au.className="AlphaDropout",a.serialization.registerClass(au);class ou extends Vs{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cs(e.movingVarianceInitializer||"ones"),this.betaConstraint=oi(e.betaConstraint),this.gammaConstraint=oi(e.gammaConstraint),this.betaRegularizer=qo(e.betaRegularizer),this.gammaRegularizer=qo(e.gammaRegularizer)}build(e){e=_s(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Kr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new zs({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,a.tidy)((()=>{const n=null!=t.training&&t.training,r=$s(e),s=r.shape,i=s.length,o=Wa(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Jr(1,i);u[l]=s[l];const c=o.slice();c.sort();const d=!a.util.arraysEqual(c,Wa(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=(0,a.reshape)(this.movingMean.read(),u),t=(0,a.reshape)(this.movingVariance.read(),u),n=this.center?(0,a.reshape)(this.beta.read(),u):null,s=this.scale?(0,a.reshape)(this.gamma.read(),u):null;return su(r,e,t,n,s,this.epsilon)}return su(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=iu(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{a.tidy((()=>{const r=1-n,s=e.read(),i=a.mul(a.sub(s,t),r);e.write(a.sub(s,i))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Is(this.betaInitializer),gammaInitializer:Is(this.gammaInitializer),movingMeanInitializer:Is(this.movingMeanInitializer),movingVarianceInitializer:Is(this.movingVarianceInitializer),betaRegularizer:Ho(this.betaRegularizer),gammaRegularizer:Ho(this.gammaRegularizer),betaConstraint:si(this.betaConstraint),gammaConstraint:si(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ou.className="BatchNormalization",a.serialization.registerClass(ou);class lu extends Vs{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.betaRegularizer=qo(e.betaRegularizer),this.gammaRegularizer=qo(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=_s(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==da(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=$s(e),r=n.shape,s=r.length;return(0,a.tidy)((()=>{let{mean:e,variance:t}=(0,a.moments)(n,this.axis,!0);const i=Jr(1,s);for(const n of this.axis)i[n]=r[n];const o=e=>null!=e&&e.shape.length!==s?a.reshape(e,i):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],d=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),d.push(1)):(c.push(1),d.push(r[n]));return e=a.tile(e,c),t=a.tile(t,c),null!=l&&(l=a.tile(l,d)),null!=u&&(u=a.tile(u,d)),su(n,e,t,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Is(this.betaInitializer),gammaInitializer:Is(this.gammaInitializer),betaRegularizer:Ho(this.betaRegularizer),gammaRegularizer:Ho(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}lu.className="LayerNormalization",a.serialization.registerClass(lu);class uu extends Vs{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Kr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Kr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Kr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new zs({ndim:4})]}computeOutputShape(e){let t,n;return e=_s(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,a.tidy)((()=>{return t=$s(e),n=this.padding,r=this.dataFormat,(0,a.tidy)((()=>{if(4!==t.rank)throw new Kr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Kr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Kr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function cu(e,t,n,r,s,i){return(0,a.tidy)((()=>{let o;Ea(s),$a(i),Aa(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=al(e,s);const l="same"===r?"same":"valid";return o="max"===i?a.maxPool(e,t,n,l):a.avgPool(e,t,n,l),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o}))}function du(e,t,n,r,s,i){return(0,a.tidy)((()=>{let o;Ea(s),$a(i),Aa(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=sl(e,s);const l="same"===r?"same":"valid";return o="max"===i?a.maxPool3d(e,t,n,l):a.avgPool3d(e,t,n,l),"channelsFirst"===s&&(o=a.transpose(o,[0,4,1,2,3])),o}))}uu.className="ZeroPadding2D",a.serialization.registerClass(uu);class hu extends Vs{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Kr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ma(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Kr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ma(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Aa(this.padding),this.inputSpec=[new zs({ndim:3})]}computeOutputShape(e){const t=nl((e=_s(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t),e=ja($s(e),2);const n=this.poolingFunction($s(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class pu extends hu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),cu(e,t,n,r,a,"max")}}pu.className="MaxPooling1D",a.serialization.registerClass(pu);class fu extends hu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),cu(e,t,n,r,a,"avg")}}fu.className="AveragePooling1D",a.serialization.registerClass(fu);class mu extends Vs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Kr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ma(this.poolSize,"poolSize"),ma(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ea(this.dataFormat),Aa(this.padding),this.inputSpec=[new zs({ndim:4})]}computeOutputShape(e){e=_s(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nl(t,this.poolSize[0],this.padding,this.strides[0]),n=nl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,a.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction($s(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),cu(e,t,n,r,a,"max")}}gu.className="MaxPooling2D",a.serialization.registerClass(gu);class yu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),cu(e,t,n,r,a,"avg")}}yu.className="AveragePooling2D",a.serialization.registerClass(yu);class bu extends Vs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Kr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ma(this.poolSize,"poolSize"),ma(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ea(this.dataFormat),Aa(this.padding),this.inputSpec=[new zs({ndim:5})]}computeOutputShape(e){e=_s(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nl(t,this.poolSize[0],this.padding,this.strides[0]),n=nl(n,this.poolSize[1],this.padding,this.strides[1]),r=nl(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,a.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction($s(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vu extends bu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),du(e,t,n,r,a,"max")}}vu.className="MaxPooling3D",a.serialization.registerClass(vu);class xu extends bu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ea(a),Aa(r),du(e,t,n,r,a,"avg")}}xu.className="AveragePooling3D",a.serialization.registerClass(xu);class wu extends Vs{constructor(e){super(e),this.inputSpec=[new zs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Xr}}class ku extends wu{constructor(e){super(e||{})}call(e,t){return(0,a.tidy)((()=>{const t=$s(e);return a.mean(t,1)}))}}ku.className="GlobalAveragePooling1D",a.serialization.registerClass(ku);class Su extends wu{constructor(e){super(e||{})}call(e,t){return(0,a.tidy)((()=>{const t=$s(e);return a.max(t,1)}))}}Su.className="GlobalMaxPooling1D",a.serialization.registerClass(Su);class Tu extends Vs{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ea(this.dataFormat),this.inputSpec=[new zs({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Xr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Nu extends Tu{call(e,t){return(0,a.tidy)((()=>{const t=$s(e);return"channelsLast"===this.dataFormat?a.mean(t,[1,2]):a.mean(t,[2,3])}))}}Nu.className="GlobalAveragePooling2D",a.serialization.registerClass(Nu);class Iu extends Tu{call(e,t){return(0,a.tidy)((()=>{const t=$s(e);return"channelsLast"===this.dataFormat?a.max(t,[1,2]):a.max(t,[2,3])}))}}Iu.className="GlobalMaxPooling2D",a.serialization.registerClass(Iu);class Cu extends Vs{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=vi(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Eu extends Cu{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=_s(e)).length<3)throw new Kr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=_s(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,a.tidy)((()=>kl(((e,n)=>[$s(this.layer.call(e,t)),[]]),e=$s(e),[],!1,null,null,!1,!0)[1]))}}Eu.className="TimeDistributed",a.serialization.registerClass(Eu);class Au extends Cu{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=vi(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=vi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,pa(Ia,"BidirectionalMergeMode",a),e.weights)throw new Xr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):na(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=wl(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Kr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new zs({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Xr("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ls;for(const l of s)if(l instanceof Ls!==o)throw new Kr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.tidy)((()=>{const n=t.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a.reverse(s,1)),"concat"===this.mergeMode?o=Ka([r,s]):"sum"===this.mergeMode?o=a.add(r,s):"ave"===this.mergeMode?o=a.mul(.5,a.add(r,s)):"mul"===this.mergeMode?o=a.mul(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fa(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Fa(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=vi(t.layer);if(delete t.layer,null!=t.numConstants)throw new Xr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Au.className="Bidirectional",a.serialization.registerClass(Au);class $u extends Vs{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,a.tidy)((()=>("float32"!==(e=$s(e)).dtype&&(e=Ga(e,"float32")),(0,a.add)((0,a.mul)(e,this.scale),this.offset))))}}$u.className="Rescaling",a.serialization.registerClass($u);const{resizeBilinear:_u,cropAndResize:Ru}=a.image;class Fu extends Vs{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,i,o,l){return(0,a.tidy)((()=>{let u,c=!1;const d=[t/i,n/o,(r+t)/i,(s+n)/o],h=[];3===e.rank?(c=!0,u=(0,a.stack)([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(d);const p=(0,a.tensor)(h,[h.length,4]),f=(0,a.range)(0,h.length,1,"int32"),m=Ru(u,p,f,[r,s],"nearest");return Ga(c?$s((0,a.unstack)(m)):m,l)}))}upsize(e,t,n,r){return(0,a.tidy)((()=>Ga(_u(e,[t,n]),r)))}call(e,t){return(0,a.tidy)((()=>{const t=$s(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2];let i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=_s(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Fu.className="CenterCrop",a.serialization.registerClass(Fu);class Du extends Vs{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=_s(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,a.tidy)((()=>{let n;if("int32"!==(e=$s(e)).dtype&&(e=Ga(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Kr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=$s(t.countWeights)}const r=(0,a.max)(e),s=(0,a.min)(e),i=(0,a.greater)(this.numTokens,r).bufferSync().get(0),o=(0,a.greaterEqual)(s,0).bufferSync().get(0);if(!i||!o)throw new Kr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=$s(e);if("int32"!==s.dtype&&(s=Ga(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=(0,a.expandDims)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=(0,a.expandDims)(s,-1)),s.rank>2)throw new Kr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const o=["multiHot","oneHot"].includes(t),l=s;let u;if(u="undefined"!==typeof r&&"count"===t?(0,a.denseBincount)(l,r,n,o):(0,a.denseBincount)(l,[],n,o),"tfIdf"!==t)return u;if(r)return(0,a.mul)(u,r);throw new Kr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Du.className="CategoryEncoding",a.serialization.registerClass(Du);const Ou=new Set(["bilinear","nearest"]);class Mu extends Vs{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ou.has(e.interpolation))throw new Kr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=_s(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,a.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return a.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return a.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Ou]} are supported`)}))}}Mu.className="Resizing",a.serialization.registerClass(Mu);class zu{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}zu.className="RandomSeed";class Lu extends Vs{constructor(e){super(e),this.randomGenerator=new zu(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Lu.className="BaseRandomLayer";const Pu=new Set(["bilinear","nearest"]);class Bu extends Lu{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Kr(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Kr(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Kr(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Pu.has(n))throw new Kr(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=_s(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,a.tidy)((()=>{const t=$s(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,a.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return a.image.resizeBilinear(e,s);case"nearest":return a.image.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Pu]} are supported`)}}))}}Bu.className="RandomWidth",a.serialization.registerClass(Bu);var Wu,Vu=n(5452),Uu=n(4334);function Gu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(qu(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Gu(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function ju(e){return Hu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:Yu)}function Hu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(qu(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Hu(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Yu(e){return null===e?null:qu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function qu(e){let t=!1;if(a.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof a.Tensor)&&!(e instanceof Promise)&&!t)}function Ku(e){return function(e,t){return Gu(e,t)}(e,Xu)}function Xu(e){return e instanceof a.Tensor?{value:e.clone(),recurse:!1}:qu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Zu{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Qu extends Zu{constructor(){super(Qu.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ju(e){return new rc(e)}function ec(e,t){return new fc(e,t)}Qu.INITIAL_CAPACITY=32;class tc{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new cc(this,e)}filter(e){return new lc(this,e)}map(e){return new uc(this,e)}mapAsync(e){return new dc(this,e)}serialMapAsync(e){return new dc(this,e).serial()}flatmap(e){return new pc(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new oc(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Yu;return this.rowMajorBatch(e,t).map((e=>ju(e,n)))}concatenate(e,t){return new fc(new nc([this,e]),t)}take(e){return e<0||null==e?this:new ic(this,e)}skip(e){return e<0||null==e?this:new sc(this,e)}prefetch(e){return new mc(this,e)}shuffle(e,t){return new gc(this,e,t)}serial(){return new ac(this)}}class nc extends tc{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ku(e),done:!1}}}class rc extends tc{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class ac extends tc{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class sc extends tc{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.dispose(e.value)}return this.upstream.next()}}class ic extends tc{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class oc extends tc{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lc extends tc{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.dispose(e.value)}}}class uc extends tc{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class cc extends tc{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class dc extends tc{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class hc extends tc{constructor(){super(),this.outputQueue=new Qu,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class pc extends hc{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return!0}}class fc extends tc{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Wu||(Wu={}));class mc extends tc{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Zu(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class gc extends mc{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Uu.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class yc{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return a.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),bc((async()=>(await n.iterator()).columnMajorBatch(e,t,vc)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,bc((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,bc((async()=>(await t.iterator()).filter((t=>a.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return bc((async()=>(await t.iterator()).map((t=>a.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return bc((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return bc((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,bc((async()=>ec(Ju((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,bc((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Uu.alea(t||a.util.now().toString());return bc((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,bc((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function bc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends yc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function vc(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof a.Tensor||a.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof a.Tensor?a.stack(e):a.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}yc.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function xc(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const wc=a.kernel_impls.whereImpl;class kc extends a.KernelBackend{nextDataId(){return kc.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.DataStorage(this,(0,a.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,a.env)().get("IS_NODE")&&a.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map((e=>a.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return a.backend_util.mergeRealAndImagArrays(e,t)}return a.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>a.util.decodeString(e)));return(0,a.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,a.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=a.util.now();e();return{kernelMs:a.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xc([e],"where");const t=this.readSync(e.dataId);return wc(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}kc.nextDataId=0;function Sc(e){return(t,n,r)=>{const s=a.util.getArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function Tc(e,t,n){return Nc(e,Sc(t),n)}function Nc(e,t,n){return r=>{let{inputs:s,attrs:i,backend:o}=r;const{x:l}=s;xc(l,e);const u=o,c=u.data.get(l.dataId).values;let d;if("string"===l.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");d=a.backend_util.fromUint8ToStringArray(c)}else d=c;const h=n||l.dtype,p=t(d,h,i);return u.makeTensorInfo(l.shape,h,p)}}(0,a.registerBackend)("cpu",(()=>new kc),1);const Ic=Tc(a.Elu,(e=>e>=0?e:Math.exp(e)-1)),Cc={kernelName:a.Elu,backendName:"cpu",kernelFunc:Ic};function Ec(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Ac={kernelName:a.Identity,backendName:"cpu",kernelFunc:Ec};function $c(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;xc([s],"leakyRelu");const o=a.util.sizeFromShape(s.shape),l=n.data.get(s.dataId).values,u=a.util.getTypedArrayFromDType("float32",o);for(let a=0;a<l.length;a++)u[a]=l[a]<0?i*l[a]:l[a];return n.makeTensorInfo(s.shape,"float32",u)}const _c={kernelName:a.LeakyRelu,backendName:"cpu",kernelFunc:$c};function Rc(e){return(t,n,r,s,i)=>{const o=a.backend_util.assertAndGetBroadcastShape(t,n),l=o.length,u=a.util.computeStrides(o),c=a.util.sizeFromShape(o),d=a.util.getTypedArrayFromDType(i,c),h=t.length,p=n.length,f=a.util.computeStrides(t),m=a.util.computeStrides(n),g=a.backend_util.getBroadcastDims(t,o),y=a.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let a=0;a<d.length;++a)d[a]=e(r[a%r.length],s[a%s.length]);else for(let b=0;b<d.length;++b){const t=a.util.indexToLoc(b,l,u),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=a.util.locToIndex(n,h,f),o=t.slice(-p);y.forEach((e=>o[e]=0));const c=a.util.locToIndex(o,p,m);d[b]=e(r[i],s[c])}return[d,o]}}const Fc=Rc(((e,t)=>e<0?t*e:e));function Dc(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;xc([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Fc(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Oc={kernelName:a.Prelu,backendName:"cpu",kernelFunc:Dc},Mc=Tc(a.Relu,(e=>Math.max(0,e))),zc={kernelName:a.Relu,backendName:"cpu",kernelFunc:Mc},Lc=Tc(a.Relu6,(e=>Math.min(Math.max(0,e),6))),Pc={kernelName:a.Relu6,backendName:"cpu",kernelFunc:Lc},Bc=Sc((e=>1/(1+Math.exp(-e)))),Wc=Tc(a.Sigmoid,(e=>1/(1+Math.exp(-e)))),Vc={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:Wc};function Uc(e,t,n,r,a){if("linear"===n)return Ec({inputs:{x:t},backend:e});if("relu"===n)return Mc({inputs:{x:t},backend:e});if("elu"===n)return Ic({inputs:{x:t},backend:e});if("relu6"===n)return Lc({inputs:{x:t},backend:e});if("prelu"===n)return Dc({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return $c({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Wc({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Gc(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const jc={kernelName:a.Complex,backendName:"cpu",kernelFunc:Gc};function Hc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Gc({inputs:{real:Hc(e,t,"float32"),imag:Hc(e,t,"float32")},backend:e})}const r=a.util.makeZerosTypedArray(a.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Yc(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const qc={kernelName:a.Real,backendName:"cpu",kernelFunc:Yc};function Kc(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=a.util.toTypedArray([0],n),[s,i]=Rc(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Xc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Ec({inputs:{x:s},backend:n});const e=Hc(n,s.shape,s.dtype),t=Xc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Gc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Yc({inputs:{input:s},backend:n}),t=Xc({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!a.util.hasEncodingLoss(s.dtype,i)){const e=Ec({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const o=n.data.get(s.dataId).values,[l,u,c]=Kc(o,s.shape,s.dtype,i);return n.makeTensorInfo(l,u,c)}const Zc={kernelName:a.Cast,backendName:"cpu",kernelFunc:Xc};function Qc(e,t,n,r){return null==n?n=>{let{inputs:s,backend:i}=n;const{a:o,b:l}=s,u=i;xc([o,l],e);const c=u.data.get(o.dataId).values,d=u.data.get(l.dataId).values,h="string"===o.dtype?a.backend_util.fromUint8ToStringArray(c):c,p="string"===o.dtype?a.backend_util.fromUint8ToStringArray(d):d,f=r||o.dtype,[m,g]=t(o.shape,l.shape,h,p,f);return u.makeTensorInfo(g,f,m)}:e=>{let{inputs:a,backend:s}=e;const{a:i,b:o}=a,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){const e=Xc({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,c=Xc({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=l.data.get(h.dataId).values,m=l.data.get(p.dataId).values,[g,y,b]=n(i.shape,o.shape,s,u,f,m),v=l.makeTensorInfo(b,"float32",g),x=l.makeTensorInfo(b,"float32",y),w=Gc({inputs:{real:v,imag:x},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(x),w}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,a=r||i.dtype,[s,u]=t(i.shape,o.shape,e,n,a);return l.makeTensorInfo(u,a,s)}}}function Jc(e){return(t,n,r,s,i,o)=>{const l=a.backend_util.assertAndGetBroadcastShape(t,n),u=a.util.sizeFromShape(l),c=l.length,d=a.util.computeStrides(l),h=a.util.getTypedArrayFromDType("float32",u),p=a.util.getTypedArrayFromDType("float32",u),f=a.backend_util.getBroadcastDims(t,l),m=a.backend_util.getBroadcastDims(n,l),g=a.backend_util.mergeRealAndImagArrays(r,s),y=a.backend_util.mergeRealAndImagArrays(i,o),b=t.length,v=a.util.computeStrides(t),x=n.length,w=a.util.computeStrides(n);if(f.length+m.length===0)for(let a=0;a<h.length;a++){const t=a%g.length,n=a%y.length,r=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);h[a]=r.real,p[a]=r.imag}else for(let k=0;k<h.length;k++){const t=a.util.indexToLoc(k,c,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const r=a.util.locToIndex(n,b,v),s=t.slice(-x);m.forEach((e=>s[e]=0));const i=a.util.locToIndex(s,x,w),o=e(g[2*r],g[2*r+1],y[2*i],y[2*i+1]);h[k]=o.real,p[k]=o.imag}return[h,p,l]}}const ed=Rc(((e,t)=>e+t)),td=Jc(((e,t,n,r)=>({real:e+n,imag:t+r}))),nd=Qc(a.Add,ed,td),rd={kernelName:a.Add,backendName:"cpu",kernelFunc:nd};function ad(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=a.util.sizeFromShape(s.shape),l=a.util.inferFromImplicitShape(i,o),u=a.util.sizeFromShape(l);a.util.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:s.dataId,shape:l,dtype:s.dtype}}const sd={kernelName:a.Reshape,backendName:"cpu",kernelFunc:ad};function id(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:l}=r;xc([s,i],"matMul");const u=s.shape.length,c=i.shape.length,d=o?s.shape[u-2]:s.shape[u-1],h=l?i.shape[c-1]:i.shape[c-2],p=o?s.shape[u-1]:s.shape[u-2],f=l?i.shape[c-2]:i.shape[c-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),y=a.util.sizeFromShape(m),b=a.util.sizeFromShape(g),v=a.broadcast_util.assertAndGetBroadcastShape(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);a.util.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`));const x=l?[b,f,h]:[b,h,f],w=ad({inputs:{x:s},backend:n,attrs:{shape:o?[y,d,p]:[y,p,d]}}),k=ad({inputs:{x:i},backend:n,attrs:{shape:x}}),S=o?w.shape[1]:w.shape[2],T=o?w.shape[2]:w.shape[1],N=l?k.shape[1]:k.shape[2],I=Math.max(y,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,A=a.util.computeStrides(w.shape),$=a.util.computeStrides(k.shape),[_,R,F]=o?[A[0],1,A[1]]:[A[0],A[1],1],[D,O,M]=l?[1,$[1],$[0]]:[$[1],1,$[0]],z=T*N,L=(0,a.buffer)([I,T,N],w.dtype),P=L.values,B=n.blockSize;for(let a=0;a<I;a++){const e=a%y,t=a%b;for(let n=0;n<T;n+=B){const r=Math.min(n+B,T);for(let s=0;s<N;s+=B){const i=Math.min(s+B,N);for(let o=0;o<S;o+=B){const l=Math.min(o+B,S);for(let u=n;u<r;u++)for(let n=s;n<i;n++){let r=0;for(let a=o;a<l;a++){r+=C[e*_+u*R+a*F]*E[a*D+n*O+t*M]}P[a*z+(u*N+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,L.dtype,L.values)}const od={kernelName:a.BatchMatMul,backendName:"cpu",kernelFunc:id};const ld={kernelName:a._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=id({inputs:{a:a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=nd({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=Uc(n,h,c,o,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function ud(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const cd={kernelName:a.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;xc(t,"abs");let r=new Float32Array(a.util.sizeFromShape(t.shape));return r=ud(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},dd=Tc(a.Acos,(e=>Math.acos(e))),hd={kernelName:a.Acos,backendName:"cpu",kernelFunc:dd},pd=Tc(a.Acosh,(e=>Math.acosh(e))),fd={kernelName:a.Acosh,backendName:"cpu",kernelFunc:pd};const md={kernelName:a.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;xc(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=(0,a.buffer)(r[0].shape,r[0].dtype),o=i.values;for(let a=0;a<r.length;a++){const e=s[a];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function gd(e,t,n,r,s){const i=t.length,o=a.util.sizeFromShape(t),l=a.util.computeStrides(t),u=a.util.computeStrides(s),c=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(s));for(let d=0;d<o;++d){const t=a.util.indexToLoc(d,i,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];c[a.util.locToIndex(n,i,u)]=e[d]}return c}function yd(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;xc(a,"transpose");const i=a.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=a.shape[s[u]];const l=gd(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}const bd={kernelName:a.Transpose,backendName:"cpu",kernelFunc:yd};const vd={kernelName:a.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;xc(s,"all");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t&&r}m[a]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=ad({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const xd={kernelName:a.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;xc(s,"any");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t||r}m[a]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=ad({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const wd={kernelName:a.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;xc(s,"argMax");let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=yd({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(u.shape,o),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const e=a*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a>t&&(t=a,n=r)}f[a]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}};const kd={kernelName:a.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;xc(s,"argMin");let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=yd({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(u.shape,o),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const e=a*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a<t&&(t=a,n=r)}f[a]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},Sd=Tc(a.Asin,(e=>Math.asin(e))),Td={kernelName:a.Asin,backendName:"cpu",kernelFunc:Sd},Nd=Tc(a.Asinh,(e=>Math.asinh(e))),Id={kernelName:a.Asinh,backendName:"cpu",kernelFunc:Nd},Cd=Tc(a.Atan,(e=>Math.atan(e))),Ed={kernelName:a.Atan,backendName:"cpu",kernelFunc:Cd},Ad=Rc(((e,t)=>Math.atan2(e,t))),$d=Qc(a.Atan2,Ad),_d={kernelName:a.Atan2,backendName:"cpu",kernelFunc:$d},Rd=Tc(a.Atanh,(e=>Math.atanh(e))),Fd={kernelName:a.Atanh,backendName:"cpu",kernelFunc:Rd};function Dd(e,t,n,r,s,i){const o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,a.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let a=0;a<s.batchSize;++a){const t=a*b,n=a*r[0];for(let a=0;a<s.inChannels;++a)for(let g=0;g<s.outHeight;++g){const b=g*o-p,w=Math.max(0,b),k=Math.min(s.inHeight,d+b),S=t+g*v;for(let t=0;t<s.outWidth;++t){const o=t*l-f,d=Math.max(0,o),p=Math.min(s.inWidth,h+o);let g=m,b=0,v=0;for(let t=w;t<k;t+=u){const s=n+t*r[1];for(let t=d;t<p;t+=c){const n=e[s+t*r[2]+a];"max"===i&&n>g?g=n:"avg"===i&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+a]="avg"===i?b/v:g}}}return g}function Od(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,a.buffer)(r.outShape,"int32"),l=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=(0,a.buffer)(t,n,e);for(let a=0;a<r.batchSize;++a)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*l-f;let y=n;for(;y<0;)y+=c;const b=Math.min(r.inHeight,h+n);for(let l=0;l<r.outWidth;++l){const h=l*u-m;let f=h;for(;f<0;)f+=d;const v=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=c){const o=t-n;for(let n=f;n<v;n+=d){const l=n-h,u=g.get(a,t,n,e);u>x&&(x=u,w=s?i?((a*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*p+l)}}o.set(w,a,t,l,e)}}return o}function Md(e,t,n,r,s,i){const o=s.strideDepth,l=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,v="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,a.buffer)(s.outShape,n),w=x.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let a=0;a<s.batchSize;++a){const t=a*k,n=a*r[0];for(let a=0;a<s.inChannels;++a)for(let x=0;x<s.outDepth;++x){const k=x*o-g;let I=k;for(;I<0;)I+=c;const C=Math.min(s.inDepth,p+k),E=t+x*S;for(let t=0;t<s.outHeight;++t){const o=t*l-y;let p=o;for(;p<0;)p+=d;const g=Math.min(s.inHeight,f+o),x=E+t*T;for(let t=0;t<s.outWidth;++t){const o=t*u-b;let l=o;for(;l<0;)l+=h;const f=Math.min(s.inWidth,m+o),y=x+t*N;let k=v,S=0,T=0;for(let t=I;t<C;t+=c){const s=n+t*r[1];for(let t=p;t<g;t+=d){const n=s+t*r[2];for(let t=l;t<f;t+=h){const s=e[n+t*r[3]+a];if("max"===i&&s>k?k=s:"avg"===i&&(S+=s,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+a]="avg"===i?S/Math.max(T,1):k}}}}return x}const zd={kernelName:a.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;xc(s,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))d=Ec({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.util.computeStrides(s.shape),r=Dd(e,s.shape,s.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}};const Ld={kernelName:a.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;xc(s,"avgPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,l,u,c),h=Md(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Pd={kernelName:a.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;xc([s,i],"avgPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,T=w-1-d.padInfo.front,N=S-1-d.padInfo.left,I=k-1-d.padInfo.top,C=(0,a.buffer)(i.shape,"float32"),E=1/(m*g*y),A=n.bufferSync(s);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=t-T,i=n-I,o=r-N;let l=0;for(let t=0;t<w;t+=b){const n=(s+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const r=(i+t)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let t=0;t<S;t+=x){const s=(o+t)/f;if(s<0||s>=d.outWidth||Math.floor(s)!==s)continue;l+=A.get(a,n,r,s,e)}}}C.set(l*E,a,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Bd={kernelName:a.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;xc([s,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=a.backend_util.computePool2DInfo(o.shape,l,u,1,c),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,a.buffer)(o.shape,"float32"),S=1/(f*m),T=n.data.get(s.dataId).values,N=(0,a.buffer)(s.shape,"float32",T);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-w,s=n-x;let i=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const r=(s+t)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;i+=N.get(a,n,r,e)}}k.set(i*S,a,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Wd={kernelName:a.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:o,mean:l,variance:u}=t;a.util.assert(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.util.assert(null==o||l.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.util.assert(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),xc([s,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=n.data.get(s.dataId).values,h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,v=p.length,x=h.length;let w=0,k=0,S=0,T=0;for(let a=0;a<d.length;++a)g[a]=m[w++]+(d[a]-h[k++])*f[S++]/Math.sqrt(p[T++]+c),w>=y&&(w=0),k>=x&&(k=0),S>=b&&(S=0),T>=v&&(T=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Vd(e,t,n,r,s){const i=a.slice_util.isSliceContinous(r,t,n),o=a.util.sizeFromShape(n),l=a.util.computeStrides(r);if(i){const n=a.slice_util.computeFlatOffset(t,l);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===s?a.backend_util.fromUint8ToStringArray(e):e,c=(0,a.buffer)(r,s,u),d=(0,a.buffer)(n,s);for(let a=0;a<d.size;++a){const e=d.indexToLoc(a),n=e.map(((e,n)=>e+t[n]));d.set(c.get(...n),...e)}return"string"===s?a.backend_util.fromStringArrayToUint8(d.values):d.values}function Ud(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:o}=r;xc(s,"slice");const[l,u]=a.slice_util.parseSliceParams(s,i,o);a.slice_util.assertParamsValid(s,l,u);const c=Vd(n.data.get(s.dataId).values,l,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const Gd={kernelName:a.Slice,backendName:"cpu",kernelFunc:Ud};const jd={kernelName:a.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;xc([s],"batchToSpaceND");const l=i.reduce(((e,t)=>e*t)),u=a.backend_util.getReshaped(s.shape,i,l),c=a.backend_util.getPermuted(u.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,l),h=a.backend_util.getSliceBeginCoords(o,i.length),p=a.backend_util.getSliceSize(d,o,i.length),f=ad({inputs:{x:s},backend:n,attrs:{shape:u}}),m=yd({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Ud({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function Hd(e,t,n,r,s){const i=a.util.sizeFromShape(r),o=a.util.makeZerosTypedArray(s,n);for(let a=0;a<e.length;a++){const n=e[a];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=i>0?t[a]:1)}return o}function Yd(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],i=e.shape[1],o=(0,a.buffer)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<i;s++){const i=e.get(a,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,a,i):t.size>0?o.set(o.get(a,i)+t.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}const qd={kernelName:a.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Hd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Kd=Rc(((e,t)=>e&t)),Xd=Qc(a.BitwiseAnd,Kd),Zd={kernelName:a.BitwiseAnd,backendName:"cpu",kernelFunc:Xd};const Qd={kernelName:a.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=a.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},Jd=Sc((e=>Math.ceil(e))),eh=Nc(a.Ceil,Jd),th={kernelName:a.Ceil,backendName:"cpu",kernelFunc:eh},nh=Tc(a.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),rh={kernelName:a.ClipByValue,backendName:"cpu",kernelFunc:nh},ah={kernelName:a.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(a.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,l=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let a=0;a<l.length;a++){const e=l[a],t=u[a];r[a]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function sh(e,t,n,r){const s=a.util.getArrayFromDType(n,a.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=a.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=i[o++]}r+=e.shape[1]}))}return s}function ih(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const oh={kernelName:a.Imag,backendName:"cpu",kernelFunc:ih};function lh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.util.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));a.backend_util.assertParamsConsistent(o,i);let l=a.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===a.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>a.util.sizeFromShape(e.shape)>0));if(1===u.length)return Ec({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>Yc({inputs:{input:e},backend:n}))),t=u.map((e=>ih({inputs:{input:e},backend:n}))),r=lh({inputs:e,backend:n,attrs:{axis:i}}),a=lh({inputs:t,backend:n,attrs:{axis:i}}),s=Gc({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=u.map((e=>{const t=a.util.sizeFromShape(e.shape.slice(i));return ad({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));l=a.backend_util.computeOutShape(c.map((e=>e.shape)),1);const h=1===c[0].shape[0],p=sh(d,l,t[0].dtype,h),f=a.backend_util.computeOutShape(u.map((e=>e.shape)),i),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const uh={kernelName:a.Concat,backendName:"cpu",kernelFunc:lh};function ch(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r;xc([s,i],"conv2d");const h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,c,l,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new a.TensorBuffer(p.outShape,s.dtype),k=a.util.computeStrides(s.shape),S=a.util.computeStrides(i.shape),T=k[0],N=x?k[1]:k[2],I=x?k[2]:1,C=x?1:k[1],E=w.strides[0],A=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,_=x?1:w.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,D=w.values;for(let a=0;a<p.batchSize;++a){const e=a*T,t=a*E;for(let n=0;n<p.outHeight;++n){const r=t+n*A,a=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=a+t*g;if(n<0||n>=p.inHeight)continue;const s=t*S[0],i=e+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=i+r*I;let o=s+e*S[1];for(let e=0;e<p.inChannels;++e){const n=R[a+e*C];for(let e=0;e<p.outChannels;++e)D[t+e*_]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const dh={kernelName:a.Conv2D,backendName:"cpu",kernelFunc:ch};const hh={kernelName:a.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r;xc([s,i],"conv2dBackpropFilter");const h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(s.shape,d,o,1,l,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,v=new a.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,T=new a.TensorBuffer(s.shape,s.dtype,k),N=new a.TensorBuffer(i.shape,i.dtype,S);for(let a=0;a<g;++a){const e=Math.max(0,Math.ceil((w-a)/f)),t=Math.min(p.outHeight,(p.inHeight+w-a)/f);for(let n=0;n<y;++n){const r=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<t;++c){const e=a+c*f-w;for(let t=r;t<s;++t){const r=n+t*m-x;l+=b?T.get(u,e,r,i)*N.get(u,c,t,o):T.get(u,i,e,r)*N.get(u,o,c,t)}}v.set(l,a,n,i,o)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const ph={kernelName:a.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r;xc([s,i],"conv2dBackpropInput");const h=a.util.computeStrides(i.shape),p=a.util.computeStrides(s.shape);let f=a.backend_util.convertConv2DDataFormat(c);const m=a.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,f),g=new a.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(s.dataId).values,v=n.data.get(i.dataId).values,[x,w,k]=h,{batchSize:S,filterHeight:T,filterWidth:N,inChannels:I,inHeight:C,inWidth:E,outChannels:A,outHeight:$,outWidth:_,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const D=T-1-m.padInfo.top,O=N-1-m.padInfo.left,M="channelsLast"===f,z=g.strides[0],L=M?g.strides[1]:g.strides[2],P=M?g.strides[2]:1,B=M?1:g.strides[1],W=p[0],V=M?p[1]:p[2],U=M?p[2]:1,G=M?1:p[1];for(let a=0;a<S;++a)for(let e=0;e<I;++e)for(let t=0;t<C;++t){const n=t-D,r=Math.max(0,Math.ceil(n/R)),s=Math.min($,(T+n)/R);for(let i=0;i<E;++i){const o=i-O,l=Math.max(0,Math.ceil(o/F)),u=Math.min(_,(N+o)/F);let c=0;for(let t=r;t<s;++t){const r=t*R-n;for(let n=l;n<u;++n){const s=W*a+V*t+U*n,i=x*(T-1-r)+w*(N-1-(n*F-o))+k*e;for(let e=0;e<A;++e){c+=b[s+G*e]*v[i+e]}}}y[z*a+L*t+P*i+B*e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const fh={kernelName:a.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r;xc([s,i],"conv3d");const c=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,u,l),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=c,b=y.front,v=y.left,x=y.top,w=new a.TensorBuffer(c.outShape,s.dtype),k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,T=w.values,N=a.util.computeStrides(s.shape),I=a.util.computeStrides(i.shape);for(let a=0;a<c.batchSize;++a){const e=a*N[0],t=a*w.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*w.strides[1],a=n*c.strideDepth-b;for(let t=0;t<d;++t){const n=a+t*f;if(n<0||n>=c.inDepth)continue;const s=t*I[0],i=e+n*N[1];for(let e=0;e<c.outHeight;++e){const t=r+e*w.strides[2],n=e*c.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const a=s+e*I[1],o=i+r*N[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-v;for(let e=0;e<p;++e){const t=r+e*g;if(t<0||t>=c.inWidth)continue;const s=a+e*I[2],i=o+t*c.inChannels;let l=s;for(let e=0;e<c.inChannels;++e){const t=k[i+e];for(let e=0;e<c.outChannels;++e)T[n+e]+=t*S[l+e];l+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const mh={kernelName:a.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,filterShape:u}=r;xc([s,i],"conv3dBackpropFilterV2");const c=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),h=a.backend_util.computeConv3DInfo(s.shape,u,o,1,l),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=new a.TensorBuffer(h.filterShape,"float32"),x=v.values,[w,k,S,T]=v.strides,N=n.data.get(i.dataId).values,[I,C,E,A]=d,$=n.data.get(s.dataId).values,[_,R,F,D]=c,O=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let a=0;a<g;++a){const e=Math.max(0,Math.ceil((O-a)/p)),t=Math.min(h.outDepth,(h.inDepth+O-a)/p),n=a*w;for(let r=0;r<y;++r){const s=Math.max(0,Math.ceil((z-r)/f)),i=Math.min(h.outHeight,(h.inHeight+z-r)/f),o=r*k+n;for(let n=0;n<b;++n){const l=Math.max(0,Math.ceil((M-n)/m)),u=Math.min(h.outWidth,(h.inWidth+M-n)/m),c=n*S+o;for(let o=0;o<h.inChannels;++o){const d=o*T+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*_,y=d*I;for(let d=e;d<t;++d){const e=(a+d*p-O)*R+h,t=d*C+y;for(let a=s;a<i;++a){const s=(r+a*f-z)*F+e,i=a*E+t;for(let e=l;e<u;++e){const t=e*A+i;g+=$[(n+e*m-M)*D+s+o]*N[t+c]}}}}x[d+c]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const gh={kernelName:a.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:l,inputShape:u}=r;xc([s],"conv3dBackpropInputV2");const c=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),h=a.backend_util.computeConv3DInfo(u,i.shape,l,1,o),p=new a.TensorBuffer(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,v=n.data.get(s.dataId).values,[x,w,k,S]=c,T=n.data.get(i.dataId).values,[N,I,C,E]=d,{batchSize:A,filterDepth:$,filterHeight:_,filterWidth:R,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=$-1-h.padInfo.front,j=_-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let a=0;a<A;++a)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-G,r=Math.max(0,Math.ceil(n/W)),s=Math.min(L,($+n)/W);for(let i=0;i<O;++i){const o=i-j,l=Math.max(0,Math.ceil(o/V)),u=Math.min(P,(_+o)/V);for(let c=0;c<M;++c){const d=c-H,h=Math.max(0,Math.ceil(d/U)),p=Math.min(B,(R+d)/U);let A=0;for(let t=r;t<s;++t){const r=t*W-n;for(let n=l;n<u;++n){const s=n*V-o;for(let i=h;i<p;++i){const o=x*a+w*t+k*n+S*i,l=N*($-1-r)+I*(_-1-s)+C*(R-1-(i*U-d))+E*e;for(let e=0;e<z;++e){A+=v[o+e]*T[l+e]}}}}f[m*a+g*t+y*i+b*c+e]=A}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},yh=Tc(a.Cos,(e=>Math.cos(e))),bh={kernelName:a.Cos,backendName:"cpu",kernelFunc:yh},vh=Tc(a.Cosh,(e=>Math.cosh(e))),xh={kernelName:a.Cosh,backendName:"cpu",kernelFunc:vh};const wh={kernelName:a.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=r,[d,h,p,f]=s.shape,m=i.shape[0],[g,y]=l,b=(0,a.buffer)([m,g,y,f],"float32"),v=n.data.get(i.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,k=a.util.computeStrides(s.shape),S=a.util.computeStrides(b.shape);for(let a=0;a<m;a++){const e=4*a,t=v[e],n=v[e+1],r=v[e+2],s=v[e+3],i=x[a];if(i>=d)continue;const o=g>1?(r-t)*(h-1)/(g-1):0,l=y>1?(s-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*o:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+a*S[0];b.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const u=y>1?n*(p-1)+e*l:.5*(n+s)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+a*S[0];b.values[n]=c}continue}const h=Math.floor(u),m=Math.ceil(u),g=u-h;for(let n=0;n<f;n++){let s=n+h*k[2]+t*k[1]+i*k[0];const l=w[s];s=n+m*k[2]+t*k[1]+i*k[0];const u=w[s];s=n+h*k[2]+r*k[1]+i*k[0];const c=w[s];s=n+m*k[2]+r*k[1]+i*k[0];const p=l+(u-l)*g,f=c+(w[s]-c)*g;s=n+e*S[2]+d*S[1]+a*S[0],b.values[s]=p+(f-p)*o}}}else for(let t=0;t<y;++t){const r=y>1?n*(p-1)+t*l:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+a*S[0];b.values[n]=c}continue}const o=Math.round(r),u=Math.round(e);for(let e=0;e<f;e++){const n=e+o*k[2]+u*k[1]+i*k[0],r=e+t*S[2]+d*S[1]+a*S[0];b.values[r]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const kh={kernelName:a.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r;xc(s,"cumprod");const u=a.backend_util.getAxesPermutation([i],s.shape.length);let c=s;null!=u&&(c=yd({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=a.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,a.upcastType)(c.dtype,"int32"),p=a.util.makeOnesTypedArray(a.util.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=l?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let a=0;a<f.length;a+=m)for(let e=0;e<m;e++){const t=g(a,e);if(0===e)p[t]=o?1:f[t];else{const n=g(a,e-1);p[t]=o?f[n]*p[n]:f[t]*p[n]}}const y=n.makeTensorInfo(c.shape,h,p);if(null!=u){const e=yd({inputs:{x:y},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(c),e}return y}};const Sh={kernelName:a.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r;xc(s,"cumsum");const u=a.backend_util.getAxesPermutation([i],s.shape.length);let c=s;null!=u&&(c=yd({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=a.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=(0,a.upcastType)(c.dtype,"int32"),p=a.util.makeZerosTypedArray(a.util.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=l?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let a=0;a<f.length;a+=m)for(let e=0;e<m;e++){const t=g(a,e);if(0===e)p[t]=o?0:f[t];else{const n=g(a,e-1);p[t]=o?f[n]+p[n]:f[t]+p[n]}}const y=n.makeTensorInfo(c.shape,h,p);if(null!=u){const e=yd({inputs:{x:y},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(c),e}return y}};const Th={kernelName:a.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Hd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=Yd(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Nh={kernelName:a.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:o}=r;a.util.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const l=s.shape[0],u=s.shape[1],c=s.shape[2],d=s.shape[3],h=u*i,p=c*i,f=d/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(l*h*p*f);let y=0;for(let a=0;a<l;++a)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const r=Math.floor(e/i),s=(n*i+e%i)*f;for(let e=0;e<f;++e){const n=e+s+d*(r+c*(t+u*a));g[y++]=m[n]}}}return n.makeTensorInfo([l,h,p,f],s.dtype,g)}};function Ih(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;xc([s,i],"depthwiseConv2DNative");const d=a.util.computeStrides(s.shape),h=a.util.computeStrides(i.shape);let p=u;null==p&&(p=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const f=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,p,l,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,S=new a.TensorBuffer(f.outShape,s.dtype),T=n.data.get(s.dataId).values,N=n.data.get(i.dataId).values,I=S.values;for(let a=0;a<f.batchSize;++a){const e=a*d[0],t=a*S.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*S.strides[1],a=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=a+t*y;if(n<0||n>=f.inHeight)continue;const s=t*h[0],i=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*S.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const a=s+e*h[1],o=i+r*f.inChannels;let l=t,u=a;for(let e=0;e<f.inChannels;++e){const t=T[o+e];for(let e=0;e<k;++e)I[l+e]+=t*N[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Ch={kernelName:a.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Ih};const Eh={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r;xc([s,i],"depthwiseConv2dNativeBackpropFilter");const h=a.backend_util.computeConv2DInfo(s.shape,d,o,l,u,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new a.TensorBuffer(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,k=new a.TensorBuffer(s.shape,s.dtype,w),S=n.data.get(i.dataId).values,T=new a.TensorBuffer(i.shape,i.dtype,S);for(let a=0;a<m;++a){const e=Math.max(0,Math.ceil((v-a)/p)),t=Math.min(h.outHeight,(h.inHeight+v-a)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/f)),s=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let c=0;c<h.batchSize;++c)for(let l=e;l<t;++l){const e=a+l*p-v;for(let t=r;t<s;++t){const r=n+t*f-b;u+=k.get(c,e,r,o)*T.get(c,l,t,i)}}y.set(u,a,n,o,l)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ah={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r;xc([s,i],"depthwiseConv2DNativeBackpropInput");const h=a.util.computeStrides(s.shape),p=a.util.computeStrides(i.shape),f=a.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),m=new a.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,v]=m.strides,x=n.data.get(s.dataId).values,[w,k,S]=h,T=n.data.get(i.dataId).values,[N,I,C]=p,{batchSize:E,filterHeight:A,filterWidth:$,inChannels:_,inHeight:R,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:z,strideWidth:L}=f,P=A-1-f.padInfo.top,B=$-1-f.padInfo.left,W=D/_;for(let a=0;a<E;++a)for(let e=0;e<_;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/z)),s=Math.min(O,(A+n)/z);for(let i=0;i<F;++i){const o=i-B,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,($+o)/L);let c=0;for(let t=r;t<s;++t){const r=t*z-n;for(let n=l;n<u;++n){const s=w*a+k*t+S*n,i=N*(A-1-r)+I*($-1-(n*L-o))+C*e;for(let t=0;t<W;++t){c+=x[s+(e*W+t)]*T[i+t]}}}g[y*a+b*t+v*i+e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const $h={kernelName:a.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=a.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,o=(0,a.buffer)([s,s],r.dtype),l=o.values;for(let a=0;a<i.length;a++)l[a*s+a]=i[a];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},_h={kernelName:a.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,d=c.data.get(s.dataId).values,h=s.shape.length,p=c.data.get(i.dataId).values,f=i.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:T,filterWidth:N,dilationHeight:I,dilationWidth:C,outShape:E}=a.backend_util.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),A=a.util.sizeFromShape(E),$=E.length,_=a.util.getArrayFromDType(s.dtype,A);for(let R=0;R<m;++R)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const r=n*S-w.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<T;++e){const n=t+e*I;if(n>=0&&n<g)for(let t=0;t<N;++t){const u=r+t*C;if(u>=0&&u<y){const r=a.util.locToIndex([R,n,u,o],h,a.util.computeStrides(s.shape)),c=a.util.locToIndex([e,t,o],f,a.util.computeStrides(i.shape)),m=d[r]+p[c];m>l&&(l=m)}}}_[a.util.locToIndex([R,e,n,o],$,a.util.computeStrides(E))]=l}}}return{dataId:c.write(a.util.toTypedArray(_,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}},Rh={kernelName:a.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i,dy:o}=t,{strides:l,pad:u,dilations:c}=r,d=n,h=a.util.toNestedArray(s.shape,d.data.get(s.dataId).values),p=a.util.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=a.backend_util.computeDilation2DInfo(s.shape,i.shape,l,u,"NHWC",c);a.util.assert(o.rank===C.length,(()=>`Error in ${a.Dilation2DBackpropFilter}, dy must have the same rank as output ${C.length}, but got ${o.rank}`));const E=a.util.toNestedArray(C,d.data.get(o.dataId).values),A=a.util.makeZerosNestedTypedArray(i.shape,i.dtype);for(let a=0;a<f;++a)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let s=0;s<y;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const u=r+t*I;if(u>=0&&u<g){const r=h[a][n][u][s]+p[e][t][s];r>i&&(i=r,o=e,l=t)}}}A[o][l][s]+=E[a][e][n][s]}}}return{dataId:d.write(a.util.toTypedArray(A,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},Fh={kernelName:a.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:i,dy:o}=t,{strides:l,pad:u,dilations:c}=r,d=n,h=a.util.toNestedArray(s.shape,d.data.get(s.dataId).values),p=a.util.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=a.backend_util.computeDilation2DInfo(s.shape,i.shape,l,u,"NHWC",c);a.util.assert(o.rank===C.length,(()=>`Error in ${a.Dilation2DBackpropInput}, dy must have the same rank as output ${C.length}, but got ${o.rank}`));const E=a.util.toNestedArray(C,d.data.get(o.dataId).values),A=a.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let a=0;a<f;++a)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let s=0;s<y;++s){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,l=r<0?0:r;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const u=r+t*I;if(u>=0&&u<g){const r=h[a][n][u][s]+p[e][t][s];r>i&&(i=r,o=n,l=u)}}}A[a][o][l][s]+=E[a][e][n][s]}}}return{dataId:d.write(a.util.toTypedArray(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const Dh={kernelName:a.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=s.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===a.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),a}},Oh=Rc(((e,t)=>e*t)),Mh=Jc(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),zh=Qc(a.Multiply,Oh,Mh),Lh={kernelName:a.Multiply,backendName:"cpu",kernelFunc:zh};function Ph(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;let l;xc(s,"sum"),l="bool"===s.dtype?Xc({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Ec({inputs:{x:s},backend:n});const u=l.shape.length,c=a.util.parseAxisParam(i,l.shape),d=a.backend_util.getAxesPermutation(c,u);let h=c,p=l;null!=d&&(p=yd({inputs:{x:l},backend:n,attrs:{perm:d}}),h=a.backend_util.getInnerMostAxes(h.length,u)),a.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=a.backend_util.computeOutAndReduceShapes(p.shape,h);let g=Hc(n,f,a.backend_util.upcastType(p.dtype,"int32"));const y=a.util.sizeFromShape(m),b=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let a=0;a<b.length;++a){const e=a*y;let t=0;for(let n=0;n<y;++n)t+=v[e+n];b[a]=t}if(o){const e=g;g=ad({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(g.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Bh={kernelName:a.Sum,backendName:"cpu",kernelFunc:Ph};const Wh={kernelName:a.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:l,idDims:u}=a.backend_util.decodeEinsumEquation(s,i.length);a.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=a.backend_util.getEinsumComputePath(l,u),h=d.length;let p=null,f=o.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=a.backend_util.getEinsumPermutation(f,u[e]);let s;a.backend_util.isIdentityPermutation(t)?s=i[e]:(s=yd({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.util.arraysEqual(s.shape,o)||(s=ad({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=zh({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(c[g]>=0&&(p=Ph({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const a of m)a!==p&&n.disposeIntermediateTensorInfo(a);return p}};const Vh={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;xc([r,s],"eluGrad");const i=new Float32Array(a.util.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values;for(let a=0;a<o.length;++a){const e=o[a];i[a]=e>=0?l[a]:l[a]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},Uh=Rc(((e,t)=>e===t?1:0)),Gh=Qc(a.Equal,Uh,null,"bool"),jh={kernelName:a.Equal,backendName:"cpu",kernelFunc:Gh},Hh=a.backend_util.ERF_P,Yh=a.backend_util.ERF_A1,qh=a.backend_util.ERF_A2,Kh=a.backend_util.ERF_A3,Xh=a.backend_util.ERF_A4,Zh=a.backend_util.ERF_A5,Qh=Tc(a.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Hh*n);return t*(1-((((Zh*r+Xh)*r+Kh)*r+qh)*r+Yh)*r*Math.exp(-n*n))})),Jh={kernelName:a.Erf,backendName:"cpu",kernelFunc:Qh},ep=Sc((e=>Math.exp(e))),tp=Nc(a.Exp,ep,"float32"),np={kernelName:a.Exp,backendName:"cpu",kernelFunc:tp};function rp(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,o=s.shape.length,l=s.shape.slice();let u=i;return i<0&&(a.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+i+1),l.splice(u,0,1),ad({inputs:{x:s},backend:n,attrs:{shape:l}})}const ap={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:rp},sp=Sc((e=>Math.expm1(e))),ip=Nc(a.Expm1,sp),op={kernelName:a.Expm1,backendName:"cpu",kernelFunc:ip},lp=Rc(((e,t)=>e/t)),up=Qc(a.RealDiv,lp),cp={kernelName:a.RealDiv,backendName:"cpu",kernelFunc:up},dp=Rc(((e,t)=>e-t)),hp=Jc(((e,t,n,r)=>({real:e-n,imag:t-r}))),pp=Qc(a.Sub,dp,hp),fp={kernelName:a.Sub,backendName:"cpu",kernelFunc:pp};function mp(e,t,n){const r=e.shape,s=r[0],i=r[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[s,i],d=a.util.sizeFromShape(c),h=a.util.getTypedArrayFromDType("float32",d),p=a.util.getTypedArrayFromDType("float32",d);for(let y=0;y<s;y++){const e=Ud({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,i]}}),r=Ud({inputs:{x:u},backend:n,attrs:{begin:[y,0],size:[1,i]}}),s=Gc({inputs:{real:e,imag:r},backend:n}),{real:o,imag:c}=gp(s,t,n),d=a.backend_util.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=a.backend_util.getComplexWithIndex(d,t);h[y*i+t]=e.real,p[y*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),g=Gc({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function gp(e,t,n){const r=a.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((l=r)&l-1)){const s=yp(i,o,r,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",s.real),t=n.makeTensorInfo(l,"float32",s.imag),i=n.makeTensorInfo([],"float32",a.util.createScalarValue(r,"float32")),o=Ec({inputs:{x:i},backend:n}),u=cp.kernelFunc({inputs:{a:e,b:i},backend:n}),c=cp.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,o=0;for(let r=0;r<t;r++){const l=a.backend_util.exponent(s*r,t,n),u=a.backend_util.getComplexWithIndex(e,r);i+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(i/=t,o/=t),a.backend_util.assignToTypedArray(r,i,o,s)}return r}(a.backend_util.mergeRealAndImagArrays(i,o),r,t);return a.backend_util.splitRealAndImagArrays(e)}var l}function yp(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=a.backend_util.mergeRealAndImagArrays(e,t),o=n/2,l=a.backend_util.complexWithEvenIndex(i),u=l.real,c=l.imag,d=[u.length],h=s.makeTensorInfo(d,"float32",u),p=s.makeTensorInfo(d,"float32",c),f=Gc({inputs:{real:h,imag:p},backend:s}),m=a.backend_util.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],v=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",y),w=Gc({inputs:{real:v,imag:x},backend:s}),k=yp(u,c,o,r,s),S=k.real,T=k.imag,N=[S.length],I=s.makeTensorInfo(N,"float32",S),C=s.makeTensorInfo(N,"float32",T),E=Gc({inputs:{real:I,imag:C},backend:s}),A=yp(g,y,o,r,s),$=A.real,_=A.imag,R=[$.length],F=s.makeTensorInfo(R,"float32",$),D=s.makeTensorInfo(R,"float32",_),O=Gc({inputs:{real:F,imag:D},backend:s}),M=a.backend_util.exponents(n,r),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),P=s.makeTensorInfo(z,"float32",M.imag),B=Gc({inputs:{real:L,imag:P},backend:s}),W=zh({inputs:{a:B,b:O},backend:s}),V=nd({inputs:{a:E,b:W},backend:s}),U=pp({inputs:{a:E,b:W},backend:s}),G=Yc({inputs:{input:V},backend:s}),j=Yc({inputs:{input:U},backend:s}),H=ih({inputs:{input:V},backend:s}),Y=ih({inputs:{input:U},backend:s}),q=lh({inputs:[G,j],backend:s,attrs:{axis:0}}),K=lh({inputs:[H,Y],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Z=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}const bp={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=ad({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),l=mp(o,!1,n),u=ad({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function vp(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,o=i||a.util.inferDtype(s),l=a.util.getArrayFromDType(o,a.util.sizeFromShape(r));return function(e,t){e.fill(t)}(l,s),t.makeTensorInfo(r,o,l)}const xp={kernelName:a.Fill,backendName:"cpu",kernelFunc:vp};const wp={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,i=r,o=a.util.getTypedArrayFromDType(s.dtype,a.util.sizeFromShape(s.shape)),[l,u,c,d]=s.shape,h=i.data.get(s.dataId).values;for(let a=0;a<l;a++){const e=a*c*u*d;for(let t=0;t<u;t++){const n=t*(c*d);for(let t=0;t<c;t++){const r=t*d;for(let a=0;a<d;a++){const s=Math.round(c-t-1),i=e+n+r+a;let l=h[i];if(s>=0&&s<c){l=h[e+n+s*d+a]}o[i]=l}}}}return{dataId:i.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},kp=Sc((e=>Math.floor(e))),Sp=Nc(a.Floor,kp),Tp={kernelName:a.Floor,backendName:"cpu",kernelFunc:Sp},Np=Rc(((e,t)=>Math.floor(e/t))),Ip=Qc(a.FloorDiv,Np,null,"int32"),Cp={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:Ip};const Ep={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=ch({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=ad({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=nd({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=nd({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=ad({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Uc(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Uc(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const Ap={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Ih({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=nd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Uc(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function $p(e,t,n,r,s,i,o,l,u){const c=(0,a.buffer)([r,i],n);for(let a=0;a<r;a++){const n=[];let r=0;for(let t=0;t<s;t++){const i=e[a*s+t];r+=i*o[t],n.push(i)}if(r<0||r>=u/i)throw new Error(`Invalid indices: ${n} does not index into ${l}`);for(let e=0;e<i;e++)c.values[a*i+e]=t.get(...t.indexToLoc(r*i+e))}return c}const _p={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=a.util.sizeFromShape(r.shape),o=s.shape,l=o[o.length-1],[u,c,d,h]=a.backend_util.prepareAndValidate(r,s);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const p=$p(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,c,l,d,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,p.values)}};function Rp(e,t,n){const r=(0,a.buffer)(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[a]=e.values[l])}return r}const Fp={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:l}=r;xc([s,i],"gatherV2");const u=a.util.parseAxisParam(o,s.shape)[0],c=n.data.get(i.dataId).values,d=s.shape[u];for(let x=0;x<c.length;++x){const e=c[x];a.util.assert(e<=d-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`))}let h=l;null==l&&(h=0);const p=a.util.sizeFromShape(i.shape),f=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,u,h),m=ad({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=ad({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),v=Rp(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Dp=Rc(((e,t)=>e>t?1:0)),Op=Qc(a.Greater,Dp,null,"bool"),Mp={kernelName:a.Greater,backendName:"cpu",kernelFunc:Op},zp=Rc(((e,t)=>e>=t?1:0)),Lp=Qc(a.GreaterEqual,zp,null,"bool"),Pp={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:Lp};const Bp={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=ad({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),l=mp(o,!0,n),u=ad({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},Wp=Tc(a.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Vp={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:Wp},Up=Tc(a.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Gp={kernelName:a.IsInf,backendName:"cpu",kernelFunc:Up},jp=Tc(a.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Hp={kernelName:a.IsNan,backendName:"cpu",kernelFunc:jp},Yp=Rc(((e,t)=>e<t?1:0)),qp=Qc(a.Less,Yp,null,"bool"),Kp={kernelName:a.Less,backendName:"cpu",kernelFunc:qp},Xp=Rc(((e,t)=>e<=t?1:0)),Zp=Qc(a.LessEqual,Xp,null,"bool"),Qp={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:Zp};function Jp(e,t,n){const r=(t-e)/(n-1),s=a.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const ef={kernelName:a.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Jp(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},tf=Sc((e=>Math.log(e))),nf=Nc(a.Log,tf),rf={kernelName:a.Log,backendName:"cpu",kernelFunc:nf},af=Tc(a.Log1p,(e=>Math.log1p(e))),sf={kernelName:a.Log1p,backendName:"cpu",kernelFunc:af},of=Rc(((e,t)=>e&&t)),lf=Qc(a.LogicalAnd,of,null,"bool"),uf={kernelName:a.LogicalAnd,backendName:"cpu",kernelFunc:lf},cf=Tc(a.LogicalNot,(e=>e?0:1),"bool"),df={kernelName:a.LogicalNot,backendName:"cpu",kernelFunc:cf},hf=Rc(((e,t)=>e||t)),pf=Qc(a.LogicalOr,hf,null,"bool"),ff={kernelName:a.LogicalOr,backendName:"cpu",kernelFunc:pf};const mf={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r;xc(s,"LRN");const c=s.shape[3],d=c-1,h=n.data.get(s.dataId).values,p=a.util.sizeFromShape(s.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let a=0;a<p;a++){const e=m(a),t=h[a]*Math.pow(o+l*e,-u);f[a]=t}return n.makeTensorInfo(s.shape,s.dtype,f)}};const gf={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:d}=r;xc(o,"LRNGrad");const h=a.util.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(h),b=h;for(let a=0;a<b;a++){const e=a%p,t=a-e+Math.max(0,e-l),n=a-e+Math.min(p,e+l+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(m[a],2);r=c*r+u;for(let s=t;s<n;s++){let e=-2*c*d*m[s]*g[a]/r;a===s&&(e+=Math.pow(r,-d)),e*=f[a],y[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,y)}};function yf(e,t,n,r){const s=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}function bf(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,l=n;let u=s.shape;const c=u.length,d=a.util.parseAxisParam(i,u);let h=d;const p=a.backend_util.getAxesPermutation(h,c);let f=l.data.get(s.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[p[t]];f=gd(f,u,s.dtype,p,e),h=a.backend_util.getInnerMostAxes(h.length,c),u=e}xc(s,"max"),a.backend_util.assertAxesAreInnerMostDims("max",h,c);const[m,g]=a.backend_util.computeOutAndReduceShapes(u,h),y=yf(f,a.util.sizeFromShape(g),m,s.dtype),b=l.write(y,m,s.dtype);let v=m;if(o){v=a.backend_util.expandShapeToKeepDim(m,d)}return{dataId:b,shape:v,dtype:s.dtype}}const vf={kernelName:a.Max,backendName:"cpu",kernelFunc:bf},xf=Rc(((e,t)=>Math.max(e,t))),wf=Qc(a.Maximum,xf),kf={kernelName:a.Maximum,backendName:"cpu",kernelFunc:wf};const Sf={kernelName:a.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;xc(s,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))d=Ec({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.util.computeStrides(s.shape),r=Dd(e,s.shape,s.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}};const Tf={kernelName:a.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;xc(s,"maxPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,l,u,c),h=Md(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Nf={kernelName:a.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;xc([s,i],"maxPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),h=function(e,t){const n=(0,a.buffer)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let a=0;a<t.batchSize;++a)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,c+b);for(let r=0;r<t.outHeight;++r){const c=r*s-f;let p=c;for(;p<0;)p+=l;const w=Math.min(t.inHeight,d+c);for(let s=0;s<t.outWidth;++s){const f=s*i-m;let k=f;for(;k<0;)k+=u;const S=Math.min(t.inWidth,h+f);let T=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let r=p;r<w;r+=l){const s=r-c;for(let i=k;i<S;i+=u){const o=i-f,l=e.get(a,t,r,i,g);l>=T&&(T=l,N=n*d*h+s*d+o)}}}n.set(N,a,y,r,s,g)}}}return n}(n.bufferSync(i),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,S=w-1-d.padInfo.left,T=x-1-d.padInfo.top,N=(0,a.buffer)(i.shape,"float32"),I=n.bufferSync(s);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=t-k,i=n-T,o=r-S;let l=0;for(let t=0;t<v;t+=g){const n=(s+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=y){const s=(i+r)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=b){const u=(o+i)/m;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;const c=v*x*w-1-h.get(a,n,s,u,e)===t*x*w+r*w+i?1:0;if(0===c)continue;l+=I.get(a,n,s,u,e)*c}}}N.set(l,a,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const If={kernelName:a.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,l=i;xc([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(l.shape,u,c,1,d,h),f=n.data.get(l.dataId).values,m=(0,a.buffer)(p.outShape,l.dtype,Od(f,l.shape,l.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=x-1-p.padInfo.top,T=(0,a.buffer)(l.shape,"float32"),N=n.data.get(s.dataId).values,I=(0,a.buffer)(s.shape,"float32",N);for(let a=0;a<p.batchSize;++a)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-S,s=n-k;let i=0;for(let t=0;t<x;t+=b){const n=(r+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=v){const o=(s+r)/y;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-m.get(a,n,o,e)===t*w+r?1:0;if(0===l)continue;i+=I.get(a,n,o,e)*l}}T.set(i,a,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Cf={kernelName:a.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:i,strides:o,pad:l,includeBatchInIndex:u}=n,c=r;xc(s,"MaxPoolWithArgmax");const d=c.data.get(s.dataId).values,h=a.backend_util.computePool2DInfo(s.shape,i,o,[1,1],l),[p,f]=function(e,t,n,r,s){const i=Dd(e,0,n,a.util.computeStrides(t),s,"max"),o=Od(e,t,n,s,!0,r);return[i.values,o.values]}(d,s.shape,s.dtype,u,h),m=c.write(p,h.outShape,s.dtype),g=c.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Ef={kernelName:a.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=a.util.parseAxisParam(i,s.shape),u=a.backend_util.computeOutAndReduceShapes(s.shape,l)[1],c=a.util.sizeFromShape(u),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=Xc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=up({inputs:{a:p,b:h},backend:n});d.push(f);const m=Ph({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const Af={kernelName:a.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;xc(s,"min");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}m[a]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=ad({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}},$f=Rc(((e,t)=>Math.min(e,t))),_f=Qc(a.Minimum,$f),Rf={kernelName:a.Minimum,backendName:"cpu",kernelFunc:_f};const Ff={kernelName:a.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:o}=r;xc(s,"mirrorPad");const l=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+s.shape[t])),d="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=a.util.computeStrides(s.shape),m=a.util.sizeFromShape(l),g=l.length,y=a.util.computeStrides(l),b=a.util.getTypedArrayFromDType(s.dtype,m);for(let v=0;v<m;v++){let e=a.util.indexToLoc(v,g,y);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-d:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+d);e=e.map(((e,t)=>e-u[t]));const t=a.util.locToIndex(e,p,f);b[v]=h[t]}return{dataId:n.write(b,l,s.dtype),shape:l,dtype:s.dtype}}},Df=Rc(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Of=Qc(a.Mod,Df),Mf={kernelName:a.Mod,backendName:"cpu",kernelFunc:Of};function zf(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=s.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=a.util.parseAxisParam([l],s.shape),c=bf({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=a.backend_util.expandShapeToKeepDim(c.shape,u),h=ad({inputs:{x:c},backend:n,attrs:{shape:d}}),p=pp({inputs:{a:s,b:h},backend:n}),f=tp({inputs:{x:p},backend:n}),m=Ph({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:d}}),y=up({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Lf={kernelName:a.Softmax,backendName:"cpu",kernelFunc:zf};const Pf={kernelName:a.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:o,normalized:l}=r;xc(s,"multinomial");const u=l?s:zf({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=u.shape[0],d=u.shape[1],h=n.data.get(u.dataId).values,p=[c,i],f=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),"int32");for(let a=0;a<c;++a){const e=a*d,t=new Float32Array(d-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];const n=Uu.alea(o.toString()),r=a*i;for(let a=0;a<i;++a){const e=n();f[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[r+a]=n;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function Bf(e,t,n){const r=a.util.createScalarValue(-1,n);return Oh([],t,r,e,n)}const Wf={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;xc(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Bf(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Vf=a.kernel_impls.nonMaxSuppressionV3Impl;const Uf={kernelName:a.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;xc(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=Vf(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Gf=a.kernel_impls.nonMaxSuppressionV4Impl;const jf={kernelName:a.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;xc(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Gf(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Hf=a.kernel_impls.nonMaxSuppressionV5Impl;const Yf={kernelName:a.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;xc(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Hf(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},qf=Rc(((e,t)=>e!==t?1:0)),Kf=Qc(a.NotEqual,qf,null,"bool"),Xf={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:Kf};const Zf={kernelName:a.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:o,onValue:l,offValue:u}=r;xc(s,"oneHot");const c=a.util.sizeFromShape(s.shape),d=new Float32Array(c*o);d.fill(u);const h=n.data.get(s.dataId).values;for(let a=0;a<c;++a)h[a]>=0&&h[a]<o&&(d[a*o+h[a]]=l);return n.makeTensorInfo([...s.shape,o],i,d)}};function Qf(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Yc({inputs:{input:r},backend:n}),t=Qf({inputs:{x:e},backend:n}),a=ih({inputs:{input:r},backend:n}),s=Qf({inputs:{x:a},backend:n}),i=Gc({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return vp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Jf={kernelName:a.ZerosLike,backendName:"cpu",kernelFunc:Qf};const em={kernelName:a.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Yc({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=ih({inputs:{input:a},backend:r}),i=Qf({inputs:{x:s},backend:r}),o=Gc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return vp({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function tm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return rp({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=lh({inputs:t.map((e=>{const t=rp({inputs:{input:e},backend:n,attrs:{dim:s}});return l.push(t),t})),backend:n,attrs:{axis:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const nm={kernelName:a.Pack,backendName:"cpu",kernelFunc:tm};const rm={kernelName:a.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r;xc(s,"pad");const l=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),c=n.data.get(s.dataId).values,d=a.util.sizeFromShape(s.shape),h=s.shape.length,p=a.util.computeStrides(s.shape),f=a.util.sizeFromShape(l),m=l.length,g=a.util.computeStrides(l),y=a.util.getTypedArrayFromDType(s.dtype,f);0!==o&&y.fill(o);for(let b=0;b<d;b++){const e=a.util.indexToLoc(b,h,p).map(((e,t)=>e+u[t]));y[a.util.locToIndex(e,m,g)]=c[b]}return{dataId:n.write(y,l,s.dtype),shape:l,dtype:s.dtype}}},am=Rc(((e,t)=>Math.pow(e,t))),sm=Qc(a.Pow,am),im={kernelName:a.Pow,backendName:"cpu",kernelFunc:sm};function om(e,t,n,r){const[s,i]=a.backend_util.computeOutAndReduceShapes(e,r),o=(0,a.upcastType)(t,"int32"),l=a.util.makeZerosTypedArray(a.util.sizeFromShape(s),o),u=a.util.sizeFromShape(i);for(let a=0;a<l.length;++a){const e=a*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[a]=t}return{outVals:l,outShape:s,outDtype:o}}const lm={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;xc(s,"prod");const l=s.shape.length,u=a.util.parseAxisParam(i,s.shape),c=a.backend_util.getAxesPermutation(u,l);let d=u,h=s;const p=[];null!=c&&(h=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),p.push(h),d=a.backend_util.getInnerMostAxes(d.length,l));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=om(h.shape,h.dtype,f,d);let b=g;return o&&(b=a.backend_util.expandShapeToKeepDim(g,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,y,m)}};function um(e,t,n,r){const a=[];let s=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const a=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-a[r];for(let n=r;n<i;++n)o[s].push(a[n+1]+t)}r=a[r],i=a[i]}i!==r&&(a.push([r,i]),s+=i-r)}return{outSplits:o,valueSlices:a,numValues:s}}function cm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function dm(e,t,n,r,s){const i=t.slice();i[0]=s;const o=a.util.getArrayFromDType(n,a.util.sizeFromShape(i)),l=e.length;return function(e,t,n,r,a,s){const i=cm(t,2)[1],o=cm(s,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[l*o+n]=e[t*i+n];++l}}(e,t,r,0===l?0:l/t[0],o,i),[o,i]}function hm(e,t,n,r,s,i,o,l){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=a.util.indexToLoc(r,t.length,a.util.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(i,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:c,valueSlices:d,numValues:h}=um(i,o,e,u),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=a.util.getArrayFromDType("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(c),f=dm(n,r,s,d,h);return[p,f[0],f[1]]}const pm={kernelName:a.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,[h,p,f]=hm(l,u,c,s.shape,s.dtype,d,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},fm=2147483647;function mm(e,t,n,r,s,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,u=0===s.length,c=0===o.length,d=[];l||d.push(t[0]),u||d.push(s[0]),c||d.push(o[0]);for(let a=1;a<d.length;++a)if(d[a]!==d[a-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=a.util.getArrayFromDType("int32",h+1);p[0]=0;for(let a=0;a<h;++a){const t=l?e[0]:e[a],n=u?r[0]:r[a],s=c?i[0]:i[a];if(0===s)throw new Error("Requires delta != 0");let o;if(s>0&&n<t||s<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/s)),o>fm)throw new Error(`Requires ((limit - start) / delta) <= ${fm}`);p[a+1]=p[a]+o}const f=p[h],m=a.util.getArrayFromDType(n,f);let g=0;for(let a=0;a<h;++a){const t=p[a+1]-p[a];let n=l?e[0]:e[a];const r=c?i[0]:i[a];for(let e=0;e<t;++e)m[g++]=n,n+=r}return[p,m]}const gm={kernelName:a.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=mm(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var ym=a.backend_util.RowPartitionType;class bm{constructor(e,t,n,r,s,i,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=a.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=a.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ym.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ym.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ym.VALUE_ROWIDS:return bm.getMaxWidthValueRowID(t);case ym.ROW_SPLITS:return bm.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ym[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return xm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.backend_util.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=a.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let a=0;a<r;++a,i+=t)s.push(i);for(let a=r;a<e;++a)s.push(-1);return a.util.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let i=0;i<a-1;++i){const a=e[i+1]-e[i];let o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){const a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case ym.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case ym.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${ym[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ym.FIRST_DIM_SIZE:return e[0];case ym.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ym.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ym[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const r=xm(t,!1),s=a.util.getArrayFromDType(this.valuesDType,a.util.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let o=r.slice();o=o.slice(e+1);const l=a.util.sizeFromShape(o),u=t.length;let c=this.defaultValue;if(c.length!==l&&1!==c.length){const e=this.defaultValueShape;(0,a.tidy)((()=>{const t=(0,a.reshape)(c,e),n=(0,a.broadcastTo)(t,o);c=n.dataSync()}))}let d=0,h=0,p=0;for(let a=0;a<=u;++a){let e=a<u?t[a]:-1;if(e!==p){if(h<p){const e=s.subarray(d*l);vm(i.subarray(h*l),e,(p-h)*l)}if(a>=u){const t=n.length;e=Math.floor(t/l)}if(e>p)if(1===this.defaultValue.length)i.subarray(p*l,e*l).fill(this.defaultValue[0]),p=e;else for(;e>p;){vm(i.slice(p*l),c,l),++p}e<0?(d=a+1,h=p):(d=a,h=p,p=h+1)}else++p}}}function vm(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function xm(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function wm(e,t,n,r,a,s,i,o,l,u){return new bm(e,t,n,r,a,s,i,o,l,u).compute()}const km={kernelName:a.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=wm(u,a.shape,c,s.shape,s.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,s.dtype,m)}};function Sm(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.util.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),i=a.util.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),i[0]=e;for(let a=1;a<i.length;a++)i[a]=i[a-1]+n;return i}const Tm={kernelName:a.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Sm(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Nm=Tc(a.Reciprocal,(e=>1/e)),Im={kernelName:a.Reciprocal,backendName:"cpu",kernelFunc:Nm};const Cm={kernelName:a.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;xc(s,"resizeBilinear");const u=a.util.computeStrides(s.shape),[c,d]=l,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(a.util.sizeFromShape([h,c,d,m])),b=[i&&c>1?p-1:p,i&&d>1?f-1:f],v=[i&&c>1?c-1:c,i&&d>1?d-1:d];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let a=0;a<h;a++)for(let e=0;e<c;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),i=a*u[0]+n*u[1],l=a*u[0]+s*u[1];for(let e=0;e<d;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),c=i+n*u[2],d=l+n*u[2],h=i+s*u[2],p=l+s*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[d+e],s=t+(g[h+e]-t)*a,i=s+(n+(g[p+e]-n)*a-s)*r;y[x++]=i}}}return n.makeTensorInfo([h,c,d,m],"float32",y)}};const Em={kernelName:a.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;xc([i,s],"resizeBilinearGrad");const l=a.util.computeStrides(s.shape),[u,c,d,h]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*c*d*h),g=[o&&p>1?c-1:c,o&&f>1?d-1:d],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],v=g[1]/y[1],x=n.data.get(i.dataId).values;let w=0;for(let a=0;a<u;a++){const e=a*l[0];for(let t=0;t<p;t++){const n=t*b,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=e+r*l[1],i=e+a*l[1],o=n-r,u=1-o;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,c=1-a,p=s+n*l[2],f=s+r*l[2],g=i+n*l[2],y=i+r*l[2],b=u*c,k=u*a,S=o*c,T=o*a;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*T}}}}return n.makeTensorInfo([u,d,c,h],"float32",m)}};const Am={kernelName:a.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;xc(s,"resizeNearestNeighbor");const u=a.util.computeStrides(s.shape),[c,d]=l,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(h*c*d*m),b=[i&&c>1?p-1:p,i&&d>1?f-1:f],v=[i&&c>1?c-1:c,i&&d>1?d-1:d],x=b[0]/v[0],w=b[1]/v[1];let k=0;for(let a=0;a<h;a++){const e=a*u[0];for(let t=0;t<c;t++){const n=o?x*(t+.5):x*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const a=e+r*u[1];for(let e=0;e<d;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<m;e++){const t=g[r+e];y[k++]=t}}}}return n.makeTensorInfo([h,c,d,m],s.dtype,y)}};const $m={kernelName:a.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;xc([i,s],"resizeNearestNeighborGrad");const l=a.util.computeStrides(s.shape),u=a.util.computeStrides(i.shape),[c,d,h,p]=s.shape,[,f,m]=i.shape,g=new Float32Array(c*d*h*p),y=n.data.get(i.dataId).values,b=[o&&f>1?d-1:d,o&&m>1?h-1:h],v=[o&&f>1?f-1:f,o&&m>1?m-1:m],x=b[0]/v[0],w=b[1]/v[1],k=1/x,S=1/w,T=2*Math.ceil(k)+2,N=2*Math.ceil(S)+2;for(let a=0;a<c;a++){const e=a*l[0];for(let t=0;t<d;t++){const n=e+t*l[1],r=Math.floor(t*k),a=Math.floor(r-T/2);for(let s=0;s<h;s++){const r=n+s*l[2],i=Math.floor(s*S),c=Math.floor(i-N/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<T;r++){const l=r+a;if(l<0||l>=f)continue;const p=e+l*u[1],g=l*x;if(t===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*u[2],a=t*w;s===Math.min(h-1,o?Math.round(a):Math.floor(a))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};const _m={kernelName:a.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;xc(s,"reverse");const o=s.shape.length,l=a.util.parseAxisParam(i,s.shape);if(0===o)return Ec({inputs:{x:s},backend:n});const u=new a.TensorBuffer(s.shape,s.dtype),c=n.bufferSync(s);for(let a=0;a<u.size;a++){const e=u.indexToLoc(a),t=e.slice();l.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Rm={kernelName:a.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:i,fillValue:o,center:l}=n,u=r,c=a.util.getTypedArrayFromDType(s.dtype,a.util.sizeFromShape(s.shape)),[d,h,p,f]=s.shape,[m,g]=a.backend_util.getImageCenter(l,h,p),y=Math.sin(i),b=Math.cos(i),v=u.data.get(s.dataId).values;for(let a=0;a<d;a++){const e=a*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let r=0;r<p;r++){const a=r*f;for(let s=0;s<f;s++){const i=[d,t,r,s],l=i[2],u=i[1];let x=(l-m)*b-(u-g)*y,w=(l-m)*y+(u-g)*b;x=Math.round(x+m),w=Math.round(w+g);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),x>=0&&x<p&&w>=0&&w<h){k=v[e+w*(p*f)+x*f+s]}c[e+n+a+s]=k}}}}return{dataId:u.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Fm=Tc(a.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Dm={kernelName:a.Round,backendName:"cpu",kernelFunc:Fm},Om=Sc((e=>1/Math.sqrt(e))),Mm=Nc(a.Rsqrt,Om),zm={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:Mm};function Lm(e,t,n,r,s,i,o,l,u,c){const d=[r/s,s],h=e.values,p=t.values;if(0===r)return(0,a.buffer)(n,t.dtype);const f=u instanceof a.TensorBuffer?u:(0,a.buffer)(d,t.dtype);"string"===typeof u||"number"===typeof u?f.values.fill(u):"boolean"===typeof u&&f.values.fill(+u);for(let a=0;a<i;a++){const e=[];let i=0;for(let t=0;t<o;t++){const n=h[a*o+t];e.push(n),i+=n*l[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[i*s+n]+=p[a*s+n]:f.values[i*s+n]=0===t.rank?p[0]:p[a*s+n]}return f}const Pm={kernelName:a.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=a.backend_util.calculateShapes(i,s,o),p=Lm(n.bufferSync(s),n.bufferSync(i),o,h,c,u,l,d,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};function Bm(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function Wm(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const Vm={kernelName:a.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:o}=r,l=function(e,t,n,r,s,i){const o=a.util.getArrayFromDType("int32",n*s);for(let a=0;a<n;++a){const n=e.slice(a*r,(a+1)*r),l=a*s;for(let e=0;e<s;++e)o[l+e]="left"===i?Bm(n,t[e+l]):Wm(n,t[e+l])}return o}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",l)}};const Um={kernelName:a.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;xc([r,s,i],"select");const o=r.shape.length,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,d=(0,a.upcastType)(s.dtype,i.dtype),h=a.util.makeZerosTypedArray(a.util.sizeFromShape(s.shape),d);let p=0;const f=0===o||o>1||1===s.shape.length?1:a.util.sizeFromShape(s.shape.slice(1));for(let a=0;a<l.length;a++)for(let e=0;e<f;e++)1===l[a]?h[p++]=u[a]:h[p++]=c[a];return n.makeTensorInfo(s.shape,d,h)}},Gm=a.backend_util.SELU_SCALEALPHA,jm=a.backend_util.SELU_SCALE,Hm=Tc(a.Selu,(e=>e>=0?jm*e:Gm*(Math.exp(e)-1))),Ym={kernelName:a.Selu,backendName:"cpu",kernelFunc:Hm},qm=Tc(a.Sign,(e=>e<0?-1:e>0?1:0)),Km={kernelName:a.Sign,backendName:"cpu",kernelFunc:qm},Xm=Tc(a.Sin,(e=>Math.sin(e))),Zm={kernelName:a.Sin,backendName:"cpu",kernelFunc:Xm},Qm=Tc(a.Sinh,(e=>Math.sinh(e))),Jm={kernelName:a.Sinh,backendName:"cpu",kernelFunc:Qm},eg=Math.log(1.1920928955078125e-7)+2,tg=Tc(a.Softplus,(e=>{const t=e>-eg,n=e<eg,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),ng={kernelName:a.Softplus,backendName:"cpu",kernelFunc:tg};const rg={kernelName:a.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;xc([s],"spaceToBatchND");const l=a.util.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let a=1+i.length;a<s.shape.length;++a)u.push([0,0]);const c=rm.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=a.backend_util.getReshaped(c.shape,i,l,!1),h=a.backend_util.getPermuted(d.length,i.length,!1),p=a.backend_util.getReshapedPermuted(c.shape,i,l,!1),f=ad({inputs:{x:c},backend:n,attrs:{shape:d}}),m=yd({inputs:{x:f},backend:n,attrs:{perm:h}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ag(e,t,n,r,s,i,o){const l=t[0],u=i[0],c=new Array(u),d=new Array(l),h=t[1];if(0===u){if(0!==l)throw new Error(a.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[a.util.getArrayFromDType(n,0),[0,h],a.util.getArrayFromDType(s,0),c,d]}let p=!0,f=0;const m=new Array(u).fill(0);for(let y=0;y<l;++y){const t=e[y*h];if(t<0)throw new Error(a.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=u)throw new Error(a.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,u));++m[t],p=p&&t>=f,f=t}let g=!0;for(let a=0;a<u;++a){const e=0===m[a];c[a]=e,g=g&&!e,m[a]=Math.max(m[a],1),a>0&&(m[a]+=m[a-1])}if(g&&p){const t=e,n=r;for(let e=0;e<l;++e)d[e]=e;return[t,[l,h],n,c,d]}{const t=m[u-1],i=a.util.getArrayFromDType(n,t*h),p=a.util.getArrayFromDType(s,t),f=new Array(u).fill(0);for(let n=0;n<l;++n){const t=e[n*h],a=f[t],s=(0===t?0:m[t-1])+a;f[t]++;for(let r=0;r<h;++r)i[s*h+r]=e[n*h+r];p[s]=r[n],d[n]=s}for(let e=0;e<u;++e){if(0===f[e]){const t=0===e?0:m[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=o}}return[i,[t,h],p,c,d]}}const sg={kernelName:a.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=ag(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function ig(e,t,n,r,s){const i=a.util.sizeFromShape(r),o=t[0],l=s.length,u=[];let c=1,d=-1;for(let g=0;g<l;++g){const e=s[g];if(-1===e){if(-1!==d)throw new Error(a.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,u.push(1)}else{if(e<0)throw new Error(a.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));c*=e,u.push(e)}}if(-1!==d){if(c<=0)throw new Error(a.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(a.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[d]=e}if(a.util.sizeFromShape(u)!==i)throw new Error(a.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(l>0){f[l-1]=1;for(let e=l-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=a.util.getArrayFromDType(n,o*l);for(let a=0;a<o;++a){let t=0;for(let n=0;n<h;++n)t+=e[a*h+n]*p[n];for(let e=0;e<l;++e)m[a*l+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,l],u]}const og={kernelName:a.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,d]=ig(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function lg(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const l=r.length,u=[t[0],e.length/t[0]],c=u[1],d=l>0?s[l-1]+1:0;if(d<0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=a.util.getArrayFromDType(n,p);if(0===l)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<l){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(a.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(a.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(o,y*c,b*c);for(let n=m;n<g;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(a.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],u[0]));for(let n=0;n<c;n++)f[b*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>l)break}return y<d&&f.fill(o,y*c,d*c),[f,h]}const ug={kernelName:a.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=lg(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const cg={kernelName:a.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=lg(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const dg={kernelName:a.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=a.backend_util.calculateShapes(i,s,l),f=!1,m=n.bufferSync(s);let g;switch(i.dtype){case"bool":g=Lm(m,n.bufferSync(i),l,p,d,c,u,h,Boolean(n.data.get(o.dataId).values[0]),f);break;case"float32":g=Lm(m,n.bufferSync(i),l,p,d,c,u,h,n.data.get(o.dataId).values[0],f);break;case"int32":g=Lm(m,n.bufferSync(i),l,p,d,c,u,h,n.data.get(o.dataId).values[0],f);break;case"string":g=Lm(m,n.bufferSync(i),l,p,d,c,u,h,a.util.decodeString(n.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(l,g.dtype,g.values)}};const hg={kernelName:a.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,l=a.util.parseAxisParam(o,s.shape)[0],u=a.backend_util.prepareSplitSize(s,i,l),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map((e=>{const t=[...d];t[l]=e;const r=Ud({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r}))}},pg=Sc((e=>Math.sqrt(e))),fg=Tc(a.Sqrt,(e=>Math.sqrt(e))),mg={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:fg},gg={kernelName:a.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,a=n;xc(r,"square");const s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];i[o]=e*e}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yg=Rc(((e,t)=>{const n=e-t;return n*n})),bg=Qc(a.SquaredDifference,yg),vg={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:bg},xg=Sc(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),wg=Nc(a.StaticRegexReplace,xg),kg={kernelName:a.StaticRegexReplace,backendName:"cpu",kernelFunc:wg},Sg=Tc(a.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Tg={kernelName:a.Step,backendName:"cpu",kernelFunc:Sg};function Ng(e,t,n,r){const s=(0,a.buffer)(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const Ig={kernelName:a.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;xc(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=a.slice_util.sliceInfo(s.shape,i,o,l,u,c,d,h,p);let k;if(g)k=ad({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){a.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.slice_util.computeOutShape(v,x,w),t=Ud({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});k=ad({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Ng(f,n.bufferSync(s),w,v);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class Cg{constructor(e,t,n,r,s,i){this.separator=a.util.encodeString(e),this.nGramWidths=t,this.leftPad=a.util.encodeString(n),this.rightPad=a.util.encodeString(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),c=s-(l+u),d=t+(l>0?0:i-o);let h=0;h+=l*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=u*this.rightPad.length;h+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=a.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let a=1;a<=s;++a){const e=t[a]-t[a-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[a]=i[a-1]+n}const o=new Array(i[s]);for(let a=0;a<s;++a){const n=t[a];let r=i[a];if(this.nGramWidths.forEach((s=>{const i=t[a+1]-t[a],l=this.getNumNGrams(i,s);this.createNGrams(e,n,o,r,l,s),r+=l})),this.preserveShort&&r===i[a]){const s=t[a+1]-t[a];if(0===s)continue;const i=s+2*this.padWidth,l=1;this.createNGrams(e,n,o,r,l,i)}}return[o,i]}}function Eg(e,t,n,r,a,s,i,o){return new Cg(n,r,a,s,i,o).compute(e,t)}const Ag={kernelName:a.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Eg(h,p,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function $g(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function _g(e,t,n){const r=e.length,s=[];let i=0,o=0;const l=new Array(r);for(let a=0;a<r;++a){const r=s.length;$g(e[a],t,n,s);const u=s.length-r;l[a]=u,i+=u,o=Math.max(o,u)}const u=a.util.getArrayFromDType("int32",2*i),c=new Array(i),d=[r,o];let h=0;for(let a=0;a<r;++a)for(let e=0;e<l[a];++e)u[2*h]=a,u[2*h+1]=e,c[h]=s[h],++h;return[u,c,d]}const Rg={kernelName:a.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=_g(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Fg(e,t){const n=a.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Dg={kernelName:a.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=Fg(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},Og=Tc(a.Tan,(e=>Math.tan(e))),Mg={kernelName:a.Tan,backendName:"cpu",kernelFunc:Og},zg=Tc(a.Tanh,(e=>Math.tanh(e))),Lg={kernelName:a.Tanh,backendName:"cpu",kernelFunc:zg};const Pg={kernelName:a.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=a.backend_util.calculateShapes(i,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(i),f=n.bufferSync(r),m=Lm(h,p,r.shape,d,u,l,o,c,f,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}};function Bg(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=(0,a.buffer)(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}const Wg={kernelName:a.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;xc(a,"tile");const i=Bg(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Vg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Ug(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);Ug(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}const s=e[t];let i=n,o=r;for(a.util.swap(e,n,t),Vg(e[r],s)>0&&a.util.swap(e,n,r);i<o;){for(a.util.swap(e,i,o),i++,o--;Vg(e[i],s)<0;)i+=1;for(;Vg(e[o],s)>0;)o-=1}0===Vg(e[n],s)?a.util.swap(e,n,o):(o+=1,a.util.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function Gg(e,t,n,r,s){const i=t[t.length-1],[o,l]=[e.length/i,i],u=a.util.getTypedArrayFromDType(n,o*r),c=a.util.getTypedArrayFromDType("int32",o*r);for(let a=0;a<o;a++){const t=a*l,n=e.subarray(t,t+l);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Ug(i,r),i=i.slice(0,r)),s&&i.sort(Vg);const o=a*r,d=u.subarray(o,o+r),h=c.subarray(o,o+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const d=t.slice();return d[d.length-1]=r,[(0,a.buffer)(d,n,u),(0,a.buffer)(d,"int32",c)]}const jg={kernelName:a.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;xc(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=Gg(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const Hg={kernelName:a.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:c}=n,[d,h,p,f]=s.shape,[m,g]=null!=c?c:[h,p],y=[d,m,g,f],b=a.util.computeStrides(s.shape),v=b[0],x=b[1],w=b[2],k=a.util.computeStrides(y),S=k[0],T=k[1],N=k[2],I=a.util.getTypedArrayFromDType(s.dtype,a.util.sizeFromShape(y));I.fill(u);const C=r.data.get(s.dataId).values,E=r.data.get(i.dataId).values;for(let a=0;a<d;++a){const e=1===i.shape[0]?E:E.subarray(8*a,8*a+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let r=0;r<f;++r){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const c=(e[0]*n+e[1]*t+e[2])/i,d=(e[3]*n+e[4]*t+e[5])/i,f=Yg(c,p,l),m=Yg(d,h,l);switch(o){case"nearest":s=Kg(C,h,p,v,x,w,a,m,f,r,u);break;case"bilinear":s=Xg(C,h,p,v,x,w,a,m,f,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}I[a*S+t*T+n*N+r]=s}return r.makeTensorInfo(y,s.dtype,I)}return{dataId:r.write(I,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function Yg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return a.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return a.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return a.util.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function qg(e,t,n,r,a,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:c}function Kg(e,t,n,r,a,s,i,o,l,u,c){return qg(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,c)}function Xg(e,t,n,r,a,s,i,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,f=h+1;return(p-o)*((f-l)*qg(e,t,n,r,a,s,i,d,h,u,c)+(l-h)*qg(e,t,n,r,a,s,i,d,f,u,c))+(o-d)*((f-l)*qg(e,t,n,r,a,s,i,p,h,u,c)+(l-h)*qg(e,t,n,r,a,s,i,p,f,u,c))}function Zg(e,t,n,r){const s=a.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let a=0;a<s;a++)i[0]*=n[a];i[1]=n[s];for(let a=s+1;a<n.length;a++)i[2]*=n[a];const o=new Map,l=new Int32Array(n[s]),u=new a.TensorBuffer(i,r,e),c=[],d=1===i[0]&&1===i[2];for(let a=0;a<n[s];a++){let t;if(d)t=e[a].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,a,n));t=e.join(",")}const n=o.get(t);if(null!=n)l[a]=n;else{const e=o.size;o.set(t,e),l[a]=e,c.push(a)}}const h=i.slice();h[1]=o.size;const p=new a.TensorBuffer(h,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:l}}const Qg={kernelName:a.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;xc(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Zg(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const Jg={kernelName:a.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==s&&(l[u++]=a.shape[p]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[s]=p;const e=Ud({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[p]=ad({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return h}};const ey={kernelName:a.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r;xc(s,"unsortedSegmentSum");const l=[],u=[],c=s.shape.length-i.shape.length;let d=i;for(let a=0;a<c;++a){const e=rp({inputs:{input:d},backend:n,attrs:{dim:a+1}});d=e,u.push(e)}for(let p=0;p<o;++p){const e=a.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=Gh({inputs:{a:t,b:d},backend:n}),i=Xc({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=zh({inputs:{a:i,b:s},backend:n}),c=Ph({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(c),u.push(t),u.push(r),u.push(i),u.push(o),u.push(c)}const h=tm({inputs:l,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ty=[ld,cd,hd,fd,rd,md,vd,xd,wd,kd,Td,Id,Ed,_d,Fd,zd,Ld,Pd,Bd,od,Wd,jd,qd,Zd,Qd,Zc,th,rh,jc,ah,uh,dh,hh,ph,fh,mh,gh,bh,xh,wh,kh,Sh,Th,Nh,Ch,Eh,Ah,$h,_h,Rh,Fh,Dh,Wh,Cc,Vh,jh,Jh,np,ap,op,bp,xp,wp,Tp,Cp,Ep,Ap,_p,Fp,Mp,Pp,Ac,Bp,oh,Vp,Gp,Hp,_c,Kp,Qp,ef,rf,sf,uf,df,ff,mf,gf,vf,kf,Sf,Tf,Nf,If,Cf,Ef,Af,Rf,Ff,Mf,Pf,Lh,Wf,Uf,jf,Yf,Xf,Zf,em,nm,rm,im,Oc,lm,pm,gm,km,Tm,qc,cp,Im,zc,Pc,sd,Cm,Em,Am,$m,_m,Rm,Dm,zm,Pm,Vm,Um,Ym,Vc,Km,Zm,Jm,Gd,Lf,ng,rg,sg,og,ug,cg,dg,hg,mg,gg,vg,kg,Tg,Ig,Ag,Rg,Dg,fp,Bh,Mg,Lg,Pg,Wg,jg,Hg,bd,Qg,Jg,ey,Jf];for(const n of ty)(0,a.registerKernel)(n);const ny={},ry={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ay(e,t){if(!(e in ny)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,a.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ny[e]}),!1),(0,a.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(ry.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",ry)||n.getContext("experimental-webgl",ry);return n.getContext("webgl2",ry)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ny[e]=n}const n=ny[e];return null==n||n.isContextLost()?(delete ny[e],ay(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ny[e])}var sy,iy,oy;function ly(e,t){return[t,e]}function uy(e){const t=a.util.sizeFromShape(e),n=Math.ceil(t/4);return a.util.sizeToSquarishShape(n)}function cy(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function dy(e,t){const n=e;let r,s,i,o,l,u,c,d,h,p;return 2===(0,a.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function hy(e,t){const n=t();return(0,a.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(sy||(sy={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(iy||(iy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oy||(oy={}));function py(e){return!!((0,a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function fy(e,t){return Sy(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const my=/ERROR: [0-9]+:([0-9]+):/g;function gy(e,t){const n=my.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map(((e,t)=>a.util.rightPad((t+1).toString(),i)+e));let l=0;for(let a=0;a<o.length;a++)l=Math.max(o[a].length,l);const u=o.slice(0,r-1),c=o.slice(r-1,r),d=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${a.util.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function yy(e,t){if(hy(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function by(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(hy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),hy(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),hy(e,(()=>e.enableVertexAttribArray(o))),!0)}function vy(e,t,n,r){hy(e,(()=>function(e,t,n){Ty(e,n),hy(e,(()=>e.activeTexture(e.TEXTURE0+n))),hy(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),hy(e,(()=>e.uniform1i(n,r)))}function xy(e,t,n){hy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),hy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function wy(e,t){hy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),hy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function ky(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Sy(e,t,n){const r=hy(e,(()=>t()));if(null==r)throw new Error(n);return r}function Ty(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return a.util.sizeFromShape(e.slice(0,e.length-t))}function Iy(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cy(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Ny(e),...Iy(e)]),t}function Ey(e){return e%2===0}function Ay(e,t){if(e=e.slice(-2),t=t.slice(-2),a.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(Ey(n)&&Ey(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Ey(e[0])&&Ey(t[0])}let $y,_y;function Ry(e,t){return null!=e.getExtension(t)}function Fy(e){try{if(null!=ay(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Dy(e){if(0===e)return!1;const t=ay(e);if(1!==e){if(Ry(t,"EXT_color_buffer_float"))return Oy(t);const e="EXT_color_buffer_half_float";if(Ry(t,e)){const n=t.getExtension(e);return function(e,t){const n=dy(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!Ry(t,"OES_texture_float"))return!1;if(!Ry(t,"WEBGL_color_buffer_float"))return!1;return Oy(t)}function Oy(e){const t=dy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function My(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const zy=(0,a.env)();function Ly(){let e,t,n,r,s,i,o,l,u,c;return 2===(0,a.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",l=(0,a.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function Py(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.util.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function By(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.util.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function Wy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function Vy(e){const t=a.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}zy.registerFlag("HAS_WEBGL",(()=>zy.getNumber("WEBGL_VERSION")>0)),zy.registerFlag("WEBGL_VERSION",(()=>Fy(2)?2:Fy(1)?1:0)),zy.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),zy.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===zy.get("WEBGL_VERSION"))),zy.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),zy.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),zy.registerFlag("WEBGL_PACK",(()=>zy.getBool("HAS_WEBGL"))),zy.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_CLIP",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_REDUCE",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_LAZILY_UNPACK",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_CONV_IM2COL",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>zy.getBool("WEBGL_PACK"))),zy.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==$y){const t=ay(e);$y=t.getParameter(t.MAX_TEXTURE_SIZE)}return $y}(zy.getNumber("WEBGL_VERSION")))),zy.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==_y){const t=ay(e);_y=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_y)}(zy.getNumber("WEBGL_VERSION")))),zy.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=zy.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ay(e);return t=Ry(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ry(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),zy.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>zy.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.device_util.isMobile())),zy.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=ay(e);if(1===e){if(!Ry(t,"OES_texture_float"))return!1}else if(!Ry(t,"EXT_color_buffer_float"))return!1;return Oy(t)}(zy.getNumber("WEBGL_VERSION")))),zy.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!zy.getBool("WEBGL_FORCE_F16_TEXTURES")&&zy.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),zy.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Dy(zy.getNumber("WEBGL_VERSION")))),zy.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=zy.getNumber("WEBGL_VERSION"))&&null!=ay(e).fenceSync;var e})),zy.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>zy.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),zy.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),zy.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>a.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),zy.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),zy.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),zy.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),zy.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),zy.registerFlag("WEBGL_EXP_CONV",(()=>!1)),zy.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>zy.getBool("IS_TEST"))),zy.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),zy.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),zy.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),zy.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Uy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Gy}=a.backend_util;function jy(e,t,n){const r=[];if(e.forEach((e=>{const t=a.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=nb(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,s="";s+=n?Yy(e,r):Hy(e,r);const i=e.shapeInfo.logicalShape,o=t.logicalShape;i.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=Gy(e.shapeInfo.logicalShape,t.logicalShape),u=tb(o),c=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let f="return outputValue;";const m=1===a.util.sizeFromShape(e.shapeInfo.logicalShape),g=a.util.sizeFromShape(t.logicalShape),y=1===g;if(1!==i||m||y){if(m&&!y)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&a.util.arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=tb(u),d=Gy(e.shapeInfo.logicalShape,t.logicalShape),h=u-l;let p;const f=["x","y","z","w","u","v"];p=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+h]} = 0;`)).join("\n");let m="";m=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+h]}`)).join(", ");return`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,l=Ly(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,d,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qy}\n    ${Ky}\n    ${Xy}\n  `;return t}(l);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return Qy();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t,n){switch(e.length){case 0:return Qy();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(a.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${By(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=Py(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${By(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=Py(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Py(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Py(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),n.packedInputs&&(h+=Zy);return[h,u,d,s,c,i,n.userCode].join("\n")}function Hy(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Jy(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${eb(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Jy(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&a.util.arraysEqual(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:l}=a.util.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${Hy(rb(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${ab(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${eb(e)}\n      }\n    `;const c=i[0],d=i[1],h=Jy(r);if(1===d)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:l,keptDims:u}=a.util.squeezeShape(n),c=l;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Hy(rb(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${ab(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${eb(e)}\n      }\n    `;const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Jy(r);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:c}=a.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Hy(rb(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${ab(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${l}, ${o}, ${i}, 1)));\n        ${eb(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=Jy(r);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=a.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Hy(rb(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ab(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${eb(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Jy(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=a.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Hy(rb(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ab(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${eb(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=Jy(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Yy(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Ly();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=Ly();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=i[0],l=i[1],u=Ly();if(null!=i&&a.util.arraysEqual(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${Yy(rb(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ab(s,r)});\n        }\n      `}const o=Ly();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Ly();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,h*=s[i-m-1],f=`b${m} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const qy="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ky="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xy="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zy="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Qy(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Jy(e){return`offset${e}`}function eb(e){const t=e.name,n=a.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function tb(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function nb(e,t,n){const{newShape:r,keptDims:s}=a.util.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],l=o?t.slice(1):r,u=!e&&i>1&&!a.util.arraysEqual(t,n)&&r.length<i||o;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:s}}function rb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ab(e,t){return t.map((t=>e[t])).join(", ")}function sb(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=jy(s,o,t),u=function(e,t){const n=Sy(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(hy(e,(()=>e.shaderSource(n,t))),hy(e,(()=>e.compileShader(n))),(0,a.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw gy(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,l),c=e.createProgram(u);return(0,a.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},ib(e,t,c)))}function ib(e,t,n){const r=[],s=[];let i,o,l,u=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,a.env)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const a of t.variableNames){const s={name:a,uniform:e.getUniformLocation(n,a,d),offset:e.getUniformLocation(n,`offset${a}`,d)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${a}Shape`,d),s.texShape=e.getUniformLocation(n,`${a}TexShape`,d)),r.push(s)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),o=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const a of t.customUniforms)s.push(e.getUniformLocation(n,a.name,d));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:o}}function ob(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!a.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!a.util.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function lb(e){return(0,a.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ub{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ly();this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?By(["r","c","d"],e):Py(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class cb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ly();this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?By(["r","c","d"],e):Py(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class db{constructor(e){this.variableNames=["A"],this.outTexUsage=iy.DOWNLOAD;const t=Ly();this.outputShape=e,this.userCode=`\n      ${Uy}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class hb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iy.DOWNLOAD;const t=Ly();this.outputShape=e,this.userCode=`\n      ${Uy}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const pb={R:0,G:1,B:2,A:3};class fb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ly();this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){const e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${pb[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Vy(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class mb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Ly();this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Vy(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function gb(e){const t=Ly();return function(e,t){const n=Sy(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(hy(e,(()=>e.shaderSource(n,t))),hy(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function yb(e){return function(e,t){const n=Sy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),hy(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function bb(e){return function(e,t){const n=Sy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),hy(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function vb(e,t,n,r,s,i){!function(e,t){const n=(0,a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return Sy(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),l=e.TEXTURE_2D;return hy(e,(()=>e.bindTexture(l,o))),hy(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),hy(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),hy(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),hy(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,a.env)().getNumber("WEBGL_VERSION")?hy(e,(()=>e.texImage2D(l,0,r,t,n,0,s,i,null))):hy(e,(()=>e.texStorage2D(l,1,r,t,n))),hy(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function xb(e){return e.internalFormatFloat}function wb(e){return e.internalFormatHalfFloat}function kb(e){return e.downloadTextureFormat}function Sb(e){return e.internalFormatPackedFloat}function Tb(e){return e.internalFormatPackedHalfFloat}function Nb(e,t,n,r,a,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=cy(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class Ib{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,a.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){ny[e]=t}(t,e)):this.gl=ay(t),e=this.gl,2===(0,a.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>hy(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>hy(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>hy(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>hy(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>hy(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>hy(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>hy(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>hy(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,a.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fy(this.gl,e),Ry(this.gl,t))this.textureHalfFloatExtension=fy(this.gl,t);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ry(this.gl,r))this.colorBufferHalfFloatExtension=fy(this.gl,r);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ry(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ry(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=yb(this.gl),this.indexBuffer=bb(this.gl),this.framebuffer=function(e){return Sy(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=dy(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;hy(e,(()=>e.finish())),hy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),hy(e,(()=>e.deleteFramebuffer(this.framebuffer))),hy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),hy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),hy(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=ly(t,n);return vb(e,a,s,xb(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=ly(t,n);return vb(e,a,s,wb(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=ly(t,n);return vb(e,a,s,kb(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){hy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,a.env)().getNumber("WEBGL_VERSION")?hy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):hy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,a.env)().getNumber("WEBGL_VERSION")?hy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):hy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),hy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let o,l,u;hy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),l=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),l=e.FLOAT,u=i.internalFormatPackedFloat),o.set(s),2===(0,a.env)().getNumber("WEBGL_VERSION")?hy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,l,o))):hy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,l,o))),hy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=cy(t,n);return vb(e,a,s,Tb(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=cy(t,n);return vb(e,a,s,Sb(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(wy(this.gl,this.framebuffer),this.outputTexture=null),hy(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=ly(t,n),i=new Uint8Array(t*n*4);return hy(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Nb(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();hy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return hy(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),hy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),hy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,a.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return hy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=gb(t));const n=function(e){return Sy(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);hy(t,(()=>t.attachShader(n,this.vertexShader))),hy(t,(()=>t.attachShader(n,e))),function(e,t){if(hy(e,(()=>e.linkProgram(t))),!(0,a.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&yy(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;hy(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){hy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),by(e,t,"clipSpacePos",n,3,20,0)&&by(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(hy(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&yy(this.gl,this.program),hy(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return Sy(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),hy(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=cy(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&yy(this.gl,this.program),ky(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}hy(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),hy(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fy(this.gl,2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,a.env)().platform&&(n=(0,a.env)().platform.setTimeoutCustom.bind((0,a.env)().platform)),a.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),xy(this.gl,e,this.framebuffer),this.debug&&ky(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(xy(this.gl,this.outputTexture,this.framebuffer),this.debug&&ky(this.gl)):wy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;xy(r,e,this.framebuffer),this.debug&&ky(r),this.outputTexture=e,hy(r,(()=>r.viewport(0,0,t,n))),hy(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),hy(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:Cb,XI:Eb,Nk:Ab,f6:$b,ct:_b,YG:Rb,hH:Fb,z3:Db,sG:Ob,uM:Mb,vS:zb,qB:Lb,GG:Pb,rq:Bb,lg:Wb,WR:Vb,cu:Ub,GE:Gb,px:jb,jC:Hb,He:Yb,hE:qb,BF:Kb,Dk:Xb,cl:Zb,_B:Qb,ub:Jb,_f:ev,Ku:tv,qy:nv,Zy:rv,bu:av,zv:sv,dH:iv,HS:ov,yH:lv,l3:uv,z9:cv,x6:dv,_m:hv,eW:pv,GK:fv,SP:mv,yr:gv,dl:yv,Dw:bv,xT:vv,_X:xv,wz:wv}=e;function kv(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Sv(e,t){return 1===t?[e]:kv(e,t)}class Tv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=lb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Sv("rc",this.rank),t=tb(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Nv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?Wy(["r","c","d"],"inputShape"):Py(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Vy(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Iv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=Ev(t,n),a=Av(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Cv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let i;return r===oy.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===oy.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===oy.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===oy.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===oy.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Ev(n,r),i=Av(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Cv(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,a.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Cv(e,t,n,r,a){const s=function(e,t){switch(e){case oy.PACKED_2X2_FLOAT32:return Sb(t);case oy.PACKED_2X2_FLOAT16:return Tb(t);case oy.UNPACKED_FLOAT32:return xb(t);case oy.UNPACKED_FLOAT16:return wb(t);case oy.PACKED_4X1_UNSIGNED_BYTE:return kb(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=cy(e[0],e[1]);i=t*n}else{const[t,n]=ly(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function Ev(e,t){if(e===iy.UPLOAD)return oy.PACKED_2X2_FLOAT32;if(e===iy.RENDER||null==e)return function(e){return(0,a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oy.PACKED_2X2_FLOAT32:oy.UNPACKED_FLOAT32:e?oy.PACKED_2X2_FLOAT16:oy.UNPACKED_FLOAT16}(t);if(e===iy.DOWNLOAD||e===iy.PIXELS)return oy.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Av(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class $v{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const _v="if (isnan(x)) return x;",Rv="return x;",Fv="return abs(x);";const Dv="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ov=_v+"\n  return (x < 0.0) ? 0.0 : x;\n",Mv=_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",zv="return x;",Lv="return 1.0 / (1.0 + exp(-1.0 * x));",Pv="return x;",Bv="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Wv="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Vv="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Uv="return 1.0 / (1.0 + exp(-1.0 * x));";class Gv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class jv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length);const t=e.length,n=Sv("rc",t),r=tb(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Hv=a.kernel_impls.whereImpl,Yv={};const qv=(0,a.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Kv extends a.KernelBackend{nextDataId(){return Kv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,a.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Ib)t=e;else{const n=ay((0,a.env)().getNumber("WEBGL_VERSION"),e);t=new Ib(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=ay((0,a.env)().getNumber("WEBGL_VERSION"));t=new Ib(e),this.binaryCache=((n=(0,a.env)().getNumber("WEBGL_VERSION"))in Yv||(Yv[n]={}),Yv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Iv(this.gpgpu),this.numMBBeforeWarning=null==(0,a.env)().global.screen?1024:(0,a.env)().global.screen.height*(0,a.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.DataStorage(this,(0,a.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];const l=Cy(t),u=new fb(l,!1,s),c=this.runWebGLProgram(u,[i],n,[[r,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,a.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,a.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:iy.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if((0,a.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:iy.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new Gv(o,zv):new $v(o,zv);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,d;if(u&&(c=a.util.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=a.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=a.util.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=s){let t;t=l?new Gv(r,zv):new $v(r,zv);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,a.env)().getBool("DEBUG")&&!(0,a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,a.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,d=null;if("complex64"!==i&&(0,a.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...uy(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=a.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=a.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=d){const e=this.gpgpu.gl;hy(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,a.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:o,isPacked:l,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=l?new Gv(s,zv):new $v(s,zv);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,a.engine)().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>a.util.decodeString(e)));return(0,a.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!py(n)){if((0,a.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.util.sizeFromShape(t);if((0,a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...uy(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=(0,a.env)().getBool("WEBGL_PACK")&&!0===r,o=i?Cy(t):t,l=i?new hb(o):new db(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=a.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=a.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.util.now(),endMs:null}}endTimer(e){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.util.now(),e)}async getQueryTime(e){if((0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:qv;return(0,a.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&a.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){a.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Hv(e.shape,t)}packedUnaryOp(e,t,n){const r=new Gv(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,a.engine)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=iv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Fv,e.dtype);const t=new $v(e.shape,Fv),n=this.compileAndRun(t,[e]);return(0,a.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map((e=>a.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,a.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new jv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Tv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Ny(e.shape),...Iy(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Ny(t),...Iy(t)],s=new Nv(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;if(null!=t){const e=a.util.sizeFromShape(s),n=t[0]*t[1]*4;a.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=Cy(s);let l;l=r?new cb(o):new ub(o);const u=[null!=t?t:uy(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===sy.DENSE){const t=null!=i?i:uy(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===a.util.sizeFromShape(o.shape))return l.values=a.util.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.util.sizeFromShape(t.shape)<=(0,a.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Ay(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:l,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:l,keptDims:u}=nb(e.packedInputs,t.shape,i);let c="",d="",h="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=a.util.computeStrides(l);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${l[0]>1}_${l[1]>1}`;const p=t.shape.length,f=2===l.length&&a.util.arraysEqual(t.shape,i),m=1===a.util.sizeFromShape(t.shape),g=a.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&p===n.shape.length&&a.util.arraysEqual(i,n.texData.texShape),b=e.packedInputs||l.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${p}_${y}_${o?u:""}_${l.length}_${m}_${g}_${f}_${c}_${d}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${(0,a.env)().getNumber("WEBGL_VERSION")}`,i}(e,c,d),p=this.getAndSaveBinary(h,(()=>sb(this.gpgpu,e,c,d))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,a.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(ob(t.inShapeInfos,n),ob([t.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,a.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const r=n[u],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[u];if(o){const{uniformShape:n}=nb(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(a.util.sizeFromShape(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,u)}const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let a=0;a<t.program.customUniforms.length;++a){const n=t.program.customUniforms[a],r=t.customUniformLocations[a],i=s[a];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}}e.executeProgram()}(this.gpgpu,p,c,d,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,a.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=a.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,a.env)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,a.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,a.tidy)((()=>{if(!(0,a.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,a.env)().getBool("DEBUG");(0,a.env)().set("DEBUG",!1);const t=this.abs((0,a.scalar)(1e-8)).dataSync()[0];if((0,a.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=a.util.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,a.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,a.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=a.util.squeezeShape(e);e=t.newShape}let s=a.util.sizeFromShape(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=Ny(e);let n=2,r=2;e.length&&([n,r]=Iy(e)),s=t*(n/2)*(r/2),i=a.util.sizeToSquarishShape(s).map((e=>2*e))}else i=a.util.sizeToSquarishShape(s);return i}(n,l),t.texShape=d),null!=s){const e=Cy(n);let i,o=d[1],h=d[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!l&&p||([o,h]=cy(d[0],d[1])),i=l?new mb(e,p):new fb(e,p);const f=p?[h,o]:d,m=this.makeTensorInfo(f,r),g=this.texData.get(m.dataId);g.usage=p?iy.PIXELS:iy.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,h,s);const y=[[h,o]],b=!0,v=this.runWebGLProgram(i,[m],r,y,b),x=this.texData.get(v.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,a.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(m),u&&(this.uploadWaitMs+=a.util.now()-c)}else{const e=this.acquireTexture(d,o,r,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,a.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw gy(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=ib(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:i,channels:o}=e,l=(0,a.engine)().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,n,s,i,o);return(0,a.engine)().makeTensorFromDataId(u,t,n,l)}}Kv.nextDataId=0;a.device_util.isBrowser()&&(0,a.registerBackend)("webgl",(()=>new Kv),2);const Xv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Zv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=lb(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Qv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Jv{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=lb(s);let i="";if(r)if(0===s||1===a.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${tb(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Sv("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function ex(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const tx={kernelName:a.Identity,backendName:"webgl",kernelFunc:ex};function nx(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=ex({inputs:{x:r},backend:n}),l=ex({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}const rx={kernelName:a.Complex,backendName:"webgl",kernelFunc:nx},ax="return (a < 0.) ? b * a : a;",sx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ix={kernelName:a.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,o=n.makeTensorInfo([],"float32",a.util.createScalarValue(i,"float32")),l=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jv(sx,s.shape,o.shape):new Zv(ax,s.shape,o.shape),u=n.runWebGLProgram(l,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},ox="return (a < 0.) ? b * a : a;",lx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ux={kernelName:a.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jv(lx,r.shape,s.shape):new Zv(ox,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},cx="if (isnan(x)) return x;";function dx(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:s}=e;return e=>{let{inputs:i,backend:o}=e;const{x:l}=i,u=o,c=s||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){const e=u.texData.get(l.dataId),t=r(e.values,c);return u.makeTensorInfo(l.shape,c,t)}let d;return d=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Gv(l.shape,n):new $v(l.shape,t),u.runWebGLProgram(d,[l],c)}}function hx(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:o}=e;return e=>{let{inputs:l,backend:u}=e;const{a:c,b:d}=l,h=u;if(s&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(d.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i={dataId:r.dataId,dtype:r.dtype,shape:d.shape},o=new Zv(t,c.shape,d.shape);return h.runWebGLProgram(o,[s,i],(0,a.upcastType)(n.dtype,r.dtype))})),i=nx({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),i}const p=o||(0,a.upcastType)(c.dtype,d.dtype);if(("string"===c.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([c,d]))&&null!=i){const e=h.texData.get(c.dataId).values,t=h.texData.get(d.dataId).values,n="string"===c.dtype?a.backend_util.fromUint8ToStringArray(e):e,r="string"===c.dtype?a.backend_util.fromUint8ToStringArray(t):t,[s,o]=i(c.shape,d.shape,n,r,p),l=h.makeTensorInfo(o,p);return h.texData.get(l.dataId).values=s,l}let f;return f=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Jv(n,c.shape,d.shape,r):new Zv(t,c.shape,d.shape),h.runWebGLProgram(f,[c,d],p)}}function px(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?Pv:Rv;if("relu"===e)return t?Wv:Ov;if("elu"===e)return t?Bv:Dv;if("relu6"===e)return t?Vv:Mv;if("prelu"===e)return t?lx:ox;if("leakyrelu"===e)return t?sx:ax;if("sigmoid"===e)return t?Uv:Lv;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class fx{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=lb(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${v};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const mx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class gx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const yx="return a * b;";function bx(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=a.backend_util.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new gx(mx.REAL,r.shape,s.shape),i=new gx(mx.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=nx({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=Kb(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let o;return o=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jv(yx,r.shape,s.shape):new Zv(yx,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}const vx={kernelName:a.Multiply,backendName:"webgl",kernelFunc:bx};function xx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=n,l=a.util.sizeFromShape(s.shape),u=a.util.inferFromImplicitShape(i,l),c=a.util.sizeFromShape(u);a.util.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(s.dataId);return!d.isPacked||Ay(s.shape,u)||null!==d.texture&&Ay(d.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[Ny(e.shape),...Iy(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Ny(t),...Iy(t)],i=new Nv(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,u,o)}const wx={kernelName:a.Reshape,backendName:"webgl",kernelFunc:xx};class kx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${a.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Sx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function Tx(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,d;c="mean"===n?0===a?new kx({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new kx({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Sx({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=i,i=r.runWebGLProgram(c,[i],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return i}class Nx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=tb(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Ix{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=tb(this.rank),a=kv("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Cx(e,t,n){const r=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ix(e.shape,t):new Nx(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Ex(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;return function(e,t,n,r){const s=t,i=e.shape.length,o=a.util.parseAxisParam(s,e.shape);let l=o;const u=a.backend_util.getAxesPermutation(l,i),c=null!=u;let d=e;c&&(d=Cx(e,u,r),l=a.backend_util.getInnerMostAxes(l.length,i)),a.backend_util.assertAxesAreInnerMostDims("sum",l,i);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,l);let f=h;n&&(f=a.backend_util.expandShapeToKeepDim(h,o));const m=a.util.sizeFromShape(p),g=xx({inputs:{x:d},attrs:{shape:[a.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Tx(g,(0,a.sumOutType)(e.dtype),"sum",r),b=xx({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(d),b}(s,i,o,n)}const Ax={kernelName:a.Sum,backendName:"webgl",kernelFunc:Ex};function $x(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[s[c]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=xv(e,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype);i.texData.get(u.dataId).values=t}else u=Cx(a,s,i);return u}const _x={kernelName:a.Transpose,backendName:"webgl",kernelFunc:$x},Rx=1e3;function Fx(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:i,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:c=null}=e;const d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],f=s?n.shape[h-1]:n.shape[h-2],m=r?t.shape[d-1]:t.shape[d-2],g=s?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=a.util.sizeFromShape(y),x=a.util.sizeFromShape(b),w=a.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);a.util.assert(p===f,(()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${s} must match.`));const k=r?[v,p,m]:[v,m,p],S=s?[x,g,f]:[x,f,g],T=xx({inputs:{x:t},backend:i,attrs:{shape:k}}),N=xx({inputs:{x:n},backend:i,attrs:{shape:S}}),I=[T,N],C=Math.max(v,x),E=r?T.shape[1]:T.shape[2],A=null!=o,$=null!=l,_="leakyrelu"===c,R=null!=c?px(c,!0):null;let F;if((1===m||1===g)&&E>Rx&&!1===(A||$||_||null!=R)){let e=T,t=N;r&&(e=$x({inputs:{x:T},backend:i,attrs:{perm:[0,2,1]}}),I.push(e)),s&&(t=$x({inputs:{x:N},backend:i,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===g;let a=e;1!==g&&(a=xx({inputs:{x:e},backend:i,attrs:{shape:[C,E,1]}}),I.push(a));const o=1===g?2:1;let l=t;n&&(l=xx({inputs:{x:t},backend:i,attrs:{shape:[C,1,E]}}),I.push(l));const u=bx({inputs:{a:a,b:l},backend:i});F=Ex({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const e=(0,a.upcastType)(t.dtype,n.dtype),c=new fx(k,S,[C,m,g],r,s,A,R,$,_),d=[T,N];if(null!=o&&d.push(o),$&&d.push(l),_){const e=i.makeTensorInfo([],"float32",a.util.createScalarValue(u,"float32"));d.push(e),I.push(e)}F=i.runWebGLProgram(c,d,e)}const D=xx({inputs:{x:F},backend:i,attrs:{shape:w}});I.push(F);for(const a of I)i.disposeIntermediateTensorInfo(a);return D}const Dx={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return Fx({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},Ox="return abs(x);";const Mx={kernelName:a.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=iv(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Gv(r.shape,Ox):new $v(r.shape,Ox),n.runWebGLProgram(s,[r],r.dtype)}},zx=dx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Lx={kernelName:a.Acos,backendName:"webgl",kernelFunc:zx},Px=dx({opSnippet:_v+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Bx={kernelName:a.Acosh,backendName:"webgl",kernelFunc:Px},Wx="return a + b;",Vx=hx({opSnippet:Wx,packedOpSnippet:Wx,supportsComplex:!0,cpuKernelImpl:Cb}),Ux={kernelName:a.Add,backendName:"webgl",kernelFunc:Vx};class Gx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class jx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Hx={kernelName:a.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return ex({inputs:{x:s[0]},backend:r});if(s.length>(0,a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>(0,a.upcastType)(e,t))),o=s.map((e=>e.shape)),l=(0,a.env)().getBool("WEBGL_PACK")?new jx(s[0].shape,o):new Gx(s[0].shape,o);return r.runWebGLProgram(l,s,i)}};const Yx={kernelName:a.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let h=s;null!=d&&(h=$x({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,l)),a.backend_util.assertAxesAreInnerMostDims("all",c,l);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,c),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"all",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};const qx={kernelName:a.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let h=s;null!=d&&(h=$x({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,l)),a.backend_util.assertAxesAreInnerMostDims("any",c,l);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,c),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"any",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};class Kx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Xx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=tb(l),c=Sv("coords",l);let d,h;if(1===i){h=l+1;const e=tb(h);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else h=l,d=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=Sv("sourceLocR",h-1).concat("inIdx.r"),y=Sv("sourceLocG",h-1).concat("inIdx.g"),b=Sv("sourceLocB",h-1).concat("inIdx.b"),v=Sv("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Zx(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const o=a.backend_util.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new Kx(l,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(u,c,"int32");if(1===d.shape[1])return d;const h=Zx(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Qx(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=r?r.shape:t.shape,i=s[s.length-1],o=a.backend_util.computeOptimalWindowSize(i),l=new Xx(s,o,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const r=Qx(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Jx(e,t,n,r){const s=[n];if(a.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,a.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[l,u]=a.backend_util.computeOutAndReduceShapes(o.shape,s),c=a.util.sizeFromShape(u),d=xx({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(d);const h=Zx(e,d,r);n.push(h);const p=xx({inputs:{x:h},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Qx(e,t,r)}const ew={kernelName:a.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=$x({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const d=Jx(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const tw={kernelName:a.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=$x({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const d=Jx(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},nw=dx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),rw={kernelName:a.Asin,backendName:"webgl",kernelFunc:nw},aw=dx({opSnippet:_v+"return log(x + sqrt(x * x + 1.0));"}),sw={kernelName:a.Asinh,backendName:"webgl",kernelFunc:aw},iw=dx({opSnippet:_v+"\n  return atan(x);\n"}),ow={kernelName:a.Atan,backendName:"webgl",kernelFunc:iw},lw=hx({opSnippet:Xv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n"}),uw={kernelName:a.Atan2,backendName:"webgl",kernelFunc:lw},cw=dx({opSnippet:_v+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dw={kernelName:a.Atanh,backendName:"webgl",kernelFunc:cw};class hw{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class pw{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}const fw={kernelName:a.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;My(s,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))return ex({inputs:{x:s},backend:n});const d=new hw(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};const mw={kernelName:a.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],l,u,c),h=new pw(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class gw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bw={kernelName:a.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),p=new yw(h);return n.runWebGLProgram(p,[s],o.dtype)}};const vw={kernelName:a.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;My([s,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=a.backend_util.computePool2DInfo(o.shape,l,u,1,c),h=new gw(d);return n.runWebGLProgram(h,[s],o.dtype)}};const xw={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return Fx({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class ww{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class kw{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Sw={kernelName:a.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,mean:i,variance:o,offset:l,scale:u}=t;a.util.assert(i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.util.assert(null==l||i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.util.assert(null==u||i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=[s,i,o];let h=null;null!=l&&(h=l.shape,d.push(l));let p=null;null!=u&&(p=u.shape,d.push(u));const f=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new kw(s.shape,i.shape,o.shape,h,p,c):new ww(s.shape,i.shape,o.shape,h,p,c);return n.runWebGLProgram(f,d,d[0].dtype)}};class Tw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=tb(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Nw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Nw[t]} = start[${t}] + coords.${Nw[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Nw=["x","y","z","w","u","v"];class Iw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=tb(this.rank),n=Sv("coords",this.rank),r=Sv("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Cw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:o}=r,[l,u]=a.slice_util.parseSliceParams(s,i,o);if(a.slice_util.assertParamsValid(s,l,u),0===a.util.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=ov(e.values,l,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),d=a.slice_util.isSliceContinous(s.shape,l,u);if(c||!d){const e=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iw(u):new Tw(u),t=[l];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=a.slice_util.computeFlatOffset(t,a.util.computeStrides(e.shape));s.slice&&(l+=s.slice.flatOffset),o.slice={flatOffset:l,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i}(s,l,u,n)}const Ew={kernelName:a.Slice,backendName:"webgl",kernelFunc:Cw},Aw={kernelName:a.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;a.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=a.backend_util.getReshaped(s.shape,i,l),c=a.backend_util.getPermuted(u.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,l),h=a.backend_util.getSliceBeginCoords(o,i.length),p=a.backend_util.getSliceSize(d,o,i.length),f=[],m=xx({inputs:{x:s},backend:n,attrs:{shape:u}}),g=$x({inputs:{x:m},backend:n,attrs:{perm:c}}),y=xx({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Cw({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const $w={kernelName:a.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=Eb(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};const _w={kernelName:a.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,a.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=$b(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let l;return l=i?new Jv("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new Zv("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(l,[r,s],r.dtype)}};const Rw={kernelName:a.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=a.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},Fw=hx({opSnippet:"return float(a != b);",cpuKernelImpl:Zb,dtype:"bool"}),Dw={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:Fw};function Ow(e){const{inputs:t,backend:n}=e,{input:r}=t;return ex({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Mw={kernelName:a.Real,backendName:"webgl",kernelFunc:Ow},zw="return float(int(x));";const Lw={kernelName:a.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return ex({inputs:{x:i},backend:r});const t=a.zeros(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=nx({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=Ow({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!a.util.hasEncodingLoss(i.dtype,o)){const e=ex({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,a]=_b(e,i.shape,i.dtype,o);return r.makeTensorInfo(t,n,a)}if("int32"===o)return function(e,t){const n=new $v(e.shape,zw),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",a.util.getTypedArrayFromDType("bool",1)),t=Fw({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Pw="return ceil(x);",Bw=dx({opSnippet:Pw,packedOpSnippet:Pw,cpuKernelImpl:Rb}),Ww={kernelName:a.Ceil,backendName:"webgl",kernelFunc:Bw};class Vw{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Uw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Gw={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=r;let l;l=(0,a.env)().getBool("WEBGL_PACK_CLIP")?new Uw(s.shape):new Vw(s.shape);const u=[[i],[o]];return n.runWebGLProgram(l,[s],s.dtype,u)}};class jw{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Hw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Yw={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new jw(r.shape),i=[Hw(r,a.complexTensorInfos.real),Hw(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class qw{constructor(e){this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Kw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=tb(r),i=Sv("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let a=1;a<l.length;a++)l[a]=l[a-1]+e[a][t];const u=o[t],c=o.slice(-2),d=o.join();let h=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let a=1;a<l.length;a++){const e=l[a-1];h+=`\n        if (${u} < ${l[a]}  && ${u} >= ${l[a-1]}) {\n          return getChannel(\n            getT${a}(${Xw(o,u,e)}),\n            vec2(${Xw(c,u,e)}));\n        }`}const p=l.length,f=l[l.length-1];h+=`\n        return getChannel(\n          getT${p}(${Xw(o,u,f)}),\n          vec2(${Xw(c,u,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Xw(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Zw(e){const{inputs:t,backend:n}=e,{input:r}=t;return ex({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Qw={kernelName:a.Imag,backendName:"webgl",kernelFunc:Zw};function Jw(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Ow({inputs:{input:e},backend:n}))),a=e.map((e=>Zw({inputs:{input:e},backend:n}))),s=Jw(r,t,n),i=Jw(a,t,n),o=nx({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=a.util.sizeFromShape(e.shape.slice(t));return xx({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=a.backend_util.computeOutShape(s.map((e=>e.shape)),1),l=1===s[0].shape[0],u=Fb(i,o,r,l),c=a.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const i=e.filter((e=>a.util.sizeFromShape(e.shape)>0)),o=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=o?new $v(e[0].shape,zv):new Gv(e[0].shape,zv);return n.runWebGLProgram(t,e,r)}const l=(0,a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>l){const e=[];for(let a=0;a<i.length;a+=l){const r=i.slice(a,a+l);e.push(Jw(r,t,n))}const r=Jw(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new Kw(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:c}=function(e,t,n){const r=a.backend_util.computeOutShape(e.map((e=>e.shape)),t),s=e.map((e=>xx({inputs:{x:e},attrs:{shape:[-1,a.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(i,t,n),d=new qw(u.map((e=>e.shape))),h=n.runWebGLProgram(d,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=xx({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),p}function ek(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.util.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));a.backend_util.assertParamsConsistent(o,i);const l=a.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===a.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>a.util.sizeFromShape(e.shape)>0));return 1===u.length?ex({inputs:{x:u[0]},backend:n}):Jw(u,i,n)}const tk={kernelName:a.Concat,backendName:"webgl",kernelFunc:ek};class nk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class rk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ak{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lb(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let a=0;a<c;a++)h+=`\n           vec4 xTexelC${2*a};\n           int xTexelC${2*a}Ready;\n           vec4 xTexelC${2*a+1};\n           int xTexelC${2*a+1}Ready;\n           vec4 xC${a};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let a=0;a<c;a++)h+=`\n           xTexelC${2*a} = vec4(0.0);\n           xTexelC${2*a}Ready = 0;\n           xTexelC${2*a+1} = vec4(0.0);\n           xTexelC${2*a+1}Ready = 0;\n           xC${a} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+=`\n           xC = xCCorner + ${t*l};\n           `,1===o){if(t<c&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===l&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=i%2===0?a.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class sk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=lb(this.outputShape.length);const{dataFormat:n}=t,r=Ly(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function ik(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ok(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape,d=s.texData.get(t.dataId),h=r.inChannels,p=c[0]*c[1]*c[2],f=r.outChannels,m="channelsLast"===r.dataFormat,g=!1;let y;const b=[];if(null!=o){const e=ik(o.shape,m);null!=e&&(o=xx({inputs:{x:o},backend:s,attrs:{shape:e}}),b.push(o))}if(null!=i){const e=ik(i.shape,m);null!=e&&(i=xx({inputs:{x:i},backend:s,attrs:{shape:e}}),b.push(i))}if(!((1===p||1===f)&&h>Rx)&&d.isPacked&&m&&null!=d.texture&&c[2]%2!==0&&a.util.arraysEqual(d.shape.slice(-3),c.slice(-3))){const e=c[0]*c[1]*(c[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,a.util.assert(Ay(d.shape,h.shape),(()=>`packed reshape ${d.shape} to ${h.shape} isn't free`));const f=xx({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});b.push(f);const m=Fx({a:h,b:f,backend:s,transposeA:false,transposeB:g,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),v=s.texData.get(m.dataId);a.util.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,v.shape=r.outShape,y=ex({inputs:{x:m},backend:s}),y.shape=r.outShape,b.push(m)}else{const e=r.outHeight*r.outWidth,a=xx({inputs:{x:t},backend:s,attrs:{shape:m?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),c=xx({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=Fx({a:m?a:c,b:m?c:a,transposeA:!m,transposeB:g,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});y=xx({inputs:{x:d},backend:s,attrs:{shape:r.outShape}}),b.push(a),b.push(c),b.push(d)}for(const a of b)s.disposeIntermediateTensorInfo(a);return y}function lk(e){let{x:t,filter:n,convInfo:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const{filterWidth:c,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=r,g="channelsLast"===m,y=c*d*h,b=f*p,v=[r.batchSize,y,b],x=[];if(null!=o){const e=ik(o.shape,g);null!=e&&(o=xx({inputs:{x:o},backend:s,attrs:{shape:e}}),x.push(o))}if(null!=i){const e=ik(i.shape,g);null!=e&&(i=xx({inputs:{x:i},backend:s,attrs:{shape:e}}),x.push(i))}const w=xx({inputs:{x:n},backend:s,attrs:{shape:[1,y,a.util.sizeFromShape(n.shape)/y]}});x.push(w);const k=new sk(v,r),S=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],T=s.runWebGLProgram(k,[t],"float32",S),N=xx({inputs:{x:T},backend:s,attrs:{shape:v}});x.push(T),x.push(N);const I=null!=i,C=null!=o,E="leakyrelu"===u,A=u?px(u,!0):null,$=new fx(g?N.shape:w.shape,g?w.shape:N.shape,g?[r.batchSize,b,r.outChannels]:[r.batchSize,r.outChannels,b],!0,!1,I,A,C,E),_=g?[N,w]:[w,N];if(i&&_.push(i),C&&_.push(o),E){const e=s.makeTensorInfo([],"float32",a.util.createScalarValue(l,"float32"));_.push(e),x.push(e)}const R=s.runWebGLProgram($,_,"float32"),F=xx({inputs:{x:R},backend:s,attrs:{shape:r.outShape}});x.push(R);for(const a of x)s.disposeIntermediateTensorInfo(a);return F}const uk={kernelName:a.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,c,l,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,a.env)().getBool("WEBGL_EXP_CONV")){const e=new ak(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[s,i],"float32",t)}else if((0,a.env)().getBool("WEBGL_CONV_IM2COL"))f=lk({x:s,filter:i,convInfo:p,backend:n});else{const e=new nk(p);f=n.runWebGLProgram(e,[s,i],"float32")}else f=ok({x:s,filter:i,convInfo:p,backend:n});const m=xx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ck{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fk={kernelName:a.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r,h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(s.shape,d,o,1,l,c,!1,h),f=new ck(p);return n.runWebGLProgram(f,[s,i],"float32")}};class mk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=lb(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const gk={kernelName:a.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(c),p=a.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,h);if((0,a.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new mk(p);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new dk(p);return n.runWebGLProgram(e,[s,i],"float32")}}};const yk={kernelName:a.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,u,l),d=new rk(c);return n.runWebGLProgram(d,[s,i],"float32")}};const bk={kernelName:a.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,filterShape:u}=r,c=a.backend_util.computeConv3DInfo(s.shape,u,o,1,l),d=new hk(c);return n.runWebGLProgram(d,[s,i],"float32")}};const vk={kernelName:a.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:l,inputShape:u}=r,c=a.backend_util.computeConv3DInfo(u,i.shape,l,1,o),d=new pk(c);return n.runWebGLProgram(d,[s,i],"float32")}},xk=dx({opSnippet:cx+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Qv}\n  return result;\n`}),wk={kernelName:a.Cos,backendName:"webgl",kernelFunc:xk},kk=dx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Sk={kernelName:a.Cosh,backendName:"webgl",kernelFunc:kk};class Tk{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,v,x]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Nk={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Tk(a.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[a,s,i],"float32")}};var Ik;!function(e){e.Prod="*",e.Sum="+"}(Ik||(Ik={}));class Ck{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===Ik.Prod?"1.0":"0.0",i=n?s:`getX(${Ek(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${tb(a)} coords = getOutputCoords();\n        int end = ${Ak(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${Ak(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Ek(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Ek(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Ak(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function $k(e,t,n,r,s,i){const o=t.shape.length,l=a.backend_util.getAxesPermutation([r],o);let u=t;null!=l&&(u=$x({inputs:{x:t},backend:n,attrs:{perm:l}}));const c=a.backend_util.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=u.shape[c];let h=ex({inputs:{x:u},backend:n});for(let a=0;a<=Math.ceil(Math.log2(d))-1;a++){const t=new Ck(e,u.shape,!1,i),r=[[a]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new Ck(e,u.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=l){const e=$x({inputs:{x:h},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const _k={kernelName:a.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return $k(Ik.Prod,a,n,s,i,o)}};const Rk={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return $k(Ik.Sum,a,n,s,i,o)}};const Fk={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Eb(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ab(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Dk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Ok={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new Dk("NHWC"===i?[o,l,u,c]:[o,c,l,u],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class Mk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lb(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class zk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lb(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let a=0;a<d;a++)p+=`\n          vec4 xTexelC${2*a};\n          int xTexelC${2*a}Ready;\n          vec4 xTexelC${2*a+1};\n          int xTexelC${2*a+1}Ready;\n          vec4 xC${a};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let a=0;a<d;a++)p+=`\n          xTexelC${2*a} = vec4(0.0);\n          xTexelC${2*a}Ready = 0;\n          xTexelC${2*a+1} = vec4(0.0);\n          xTexelC${2*a+1}Ready = 0;\n          xC${a} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(h+1)/2;y++){const e=2*y;if(p+=`\n          xC = xCCorner + ${e*u};\n          `,1===l){if(e<d&&(o%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=o%2===0?a.util.nearestLargerEven(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(o%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Lk={kernelName:a.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;let d=u;null==d&&(d=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,d,l,c,!0);let p;p=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new zk(h):new Mk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,i],"float32",f)}};class Pk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Wk={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r,h=a.backend_util.computeConv2DInfo(s.shape,d,o,l,u,c,!0),p=new Pk(h);return n.runWebGLProgram(p,[s,i],"float32")}};const Vk={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r,h=a.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),p=new Bk(h);return n.runWebGLProgram(p,[s,i],"float32")}};class Uk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Gk={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=a.util.sizeFromShape(r.shape),o=xx({inputs:{x:r},backend:n,attrs:{shape:[i]}}),l=new Uk(i),u=n.runWebGLProgram(l,[o],o.dtype),c=xx({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class jk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Hk={kernelName:a.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=a.backend_util.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u);let d;const h=new jk(c);d=n.runWebGLProgram(h,[s,i],"float32");const p=xx({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Yk={kernelName:a.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:l,idDims:u}=a.backend_util.decodeEinsumEquation(s,i.length);a.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=a.backend_util.getEinsumComputePath(l,u),h=d.length;let p=null,f=o.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=a.backend_util.getEinsumPermutation(f,u[e]);let s;a.backend_util.isIdentityPermutation(t)?s=i[e]:(s=$x({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.util.arraysEqual(s.shape,o)||(s=xx({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=bx({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(c[g]>=0&&(p=Ex({inputs:{x:p},backend:n,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const a of m)a!==p&&n.disposeIntermediateTensorInfo(a);return p}},qk=dx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Kk={kernelName:a.Elu,backendName:"webgl",kernelFunc:qk},Xk={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Zv("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},Zk=hx({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Db}),Qk={kernelName:a.Equal,backendName:"webgl",kernelFunc:Zk},Jk=dx({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.backend_util.ERF_P};\n  float a1 = ${a.backend_util.ERF_A1};\n  float a2 = ${a.backend_util.ERF_A2};\n  float a3 = ${a.backend_util.ERF_A3};\n  float a4 = ${a.backend_util.ERF_A4};\n  float a5 = ${a.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),eS={kernelName:a.Erf,backendName:"webgl",kernelFunc:Jk},tS=dx({opSnippet:cx+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ob,dtype:"float32"}),nS={kernelName:a.Exp,backendName:"webgl",kernelFunc:tS};function rS(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=s;return s<0&&(a.util.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),l.splice(u,0,1),xx({inputs:{x:i},backend:r,attrs:{shape:l}})}const aS={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:rS},sS="return exp(x) - 1.0;",iS=dx({opSnippet:sS,packedOpSnippet:sS,cpuKernelImpl:Mb}),oS={kernelName:a.Expm1,backendName:"webgl",kernelFunc:iS};class lS{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function uS(e,t,n){const r=n.texData.get(e.dataId),s=a.util.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=xx({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),l=o.shape,u=new lS("real",l,t),c=new lS("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=nx({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=xx({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const cS={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return uS(r,!1,n)}};class dS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function hS(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||a.util.inferDtype(s),"string"===i){const e=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new dS(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const pS={kernelName:a.Fill,backendName:"webgl",kernelFunc:hS};class fS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const mS={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,a=n,s=new fS(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},gS="return floor(x);",yS=dx({opSnippet:gS,packedOpSnippet:gS,cpuKernelImpl:zb}),bS={kernelName:a.Floor,backendName:"webgl",kernelFunc:yS},vS=hx({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),xS={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:vS};class wS{constructor(e){this.variableNames=["A"];const t=Ly(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class kS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ly(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const SS={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,o="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,l="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[c,u],h=[c,u,i];if(l||o){const e=(0,a.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=TS&&e===NS||(NS=e,TS=document.createElement("canvas").getContext("2d",{willReadFrequently:NS})),TS.canvas.width=u,TS.canvas.height=c,TS.drawImage(s,0,0,u,c),s=TS.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=iy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=(0,a.env)().getBool("WEBGL_PACK")?new kS(h):new wS(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let TS,NS=(0,a.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const IS={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=a.backend_util.convertConv2DDataFormat(d),y=a.backend_util.computeConv2DInfo(s.shape,i.shape,u,h,c,p,!1,g);let b;const v=[],x=null!=o,w=null!=l,k="leakyrelu"===f,S=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=xx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(o,d)),w&&e.push(t(l,d)),k){const t=n.makeTensorInfo([],"float32",a.util.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,a.env)().getBool("WEBGL_EXP_CONV")){const e=f?px(f,!0):null,t=new ak(y,x,e,w,k),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=S();b=n.runWebGLProgram(t,a,"float32",r)}else if((0,a.env)().getBool("WEBGL_CONV_IM2COL"))b=lk({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const e=f?px(f,!1):null,t=new nk(y,x,e,w,k),r=S();b=n.runWebGLProgram(t,r,"float32")}else b=ok({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});const T=xx({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};const CS={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const y=a.backend_util.computeConv2DInfo(s.shape,i.shape,u,g,c,h,!0),b=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=p?px(p,b):null,x=[s,i],w=null!=o,k=null!=l,S="leakyrelu"===p;if(w&&x.push(o),k&&x.push(l),S){const e=n.makeTensorInfo([],"float32",a.util.createScalarValue(f,"float32"));x.push(e),m.push(e)}let T;T=b?new zk(y,w,v,k,S):new Mk(y,w,v,k,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],I=n.runWebGLProgram(T,x,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class ES{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=tb(n.length);let s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const AS={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,o=i[i.length-1],l=a.util.sizeFromShape(r.shape),[u,c,d,h]=a.backend_util.prepareAndValidate(r,s),p=xx({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),f=xx({inputs:{x:r},backend:n,attrs:{shape:[a.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Lb(e,t,r.dtype,c,o,d,h,r.shape,l);return n.makeTensorInfo(u,r.dtype,a.values)}const m=new ES(o,h,[c,d],r.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=xx({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class $S{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=tb(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function _S(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:l}=r,u=a.util.parseAxisParam(o,s.shape)[0];if((0,a.env)().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];a.util.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,u,l),d=a.util.sizeFromShape(i.shape),h=[],p=xx({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=xx({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});h.push(p),h.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=Pb(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new $S(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=xx({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const RS={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:_S},FS=hx({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Bb,dtype:"bool"}),DS={kernelName:a.Greater,backendName:"webgl",kernelFunc:FS},OS=hx({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Wb}),MS={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:OS};const zS={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return uS(r,!0,n)}},LS=dx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),PS={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:LS},BS=dx({opSnippet:"return float(isinf(x));",dtype:"bool"}),WS={kernelName:a.IsInf,backendName:"webgl",kernelFunc:BS},VS=dx({opSnippet:"return float(isnan(x));",dtype:"bool"}),US={kernelName:a.IsNan,backendName:"webgl",kernelFunc:VS},GS=hx({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Vb,dtype:"bool"}),jS={kernelName:a.Less,backendName:"webgl",kernelFunc:GS},HS=hx({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ub,dtype:"bool"}),YS={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:HS};const qS={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Gb(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},KS=dx({opSnippet:cx+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:jb}),XS={kernelName:a.Log,backendName:"webgl",kernelFunc:KS},ZS=dx({opSnippet:cx+"\n  return log(1.0 + x);\n"}),QS={kernelName:a.Log1p,backendName:"webgl",kernelFunc:ZS},JS=hx({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),eT={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:JS},tT=dx({opSnippet:"return float(!(x >= 1.0));"}),nT={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:tT},rT=hx({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),aT={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:rT};class sT{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class iT{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const oT={kernelName:a.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r,c=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new iT(s.shape,i,o,l,u):new sT(s.shape,i,o,l,u);return n.runWebGLProgram(c,[s],s.dtype)}};class lT{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const uT={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,d=new lT(a.shape,o,l,u,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function cT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const r=xv(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=Cx(s,d,n);c=a.backend_util.getInnerMostAxes(c.length,l)}a.backend_util.assertAxesAreInnerMostDims("max",c,l);const[m,g]=a.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=a.backend_util.expandShapeToKeepDim(m,u)),p){const e=n.texData.get(f.dataId).values,t=Hb(e,a.util.sizeFromShape(g),b,s.dtype);y=n.makeTensorInfo(b,s.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const s=a.util.sizeFromShape(t),i=xx({inputs:{x:e},attrs:{shape:[a.util.sizeFromShape(e.shape)/s,s]},backend:r}),o=Tx(i,e.dtype,"max",r),l=xx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const dT={kernelName:a.Max,backendName:"webgl",kernelFunc:cT},hT=hx({opSnippet:Xv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n",cpuKernelImpl:Yb}),pT={kernelName:a.Maximum,backendName:"webgl",kernelFunc:hT};const fT={kernelName:a.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;My(s,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))return ex({inputs:{x:s},backend:n});const d=new hw(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};const mT={kernelName:a.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],l,c,u),h=new pw(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class gT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bT={kernelName:a.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),p=new pw(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new yT(h),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const vT={kernelName:a.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,l=i;My([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(l.shape,u,c,1,d,h),f=new hw(p,"max",!0),m=n.runWebGLProgram(f,[l],l.dtype),g=new gT(p),y=n.runWebGLProgram(g,[s,m],l.dtype);return n.disposeIntermediateTensorInfo(m),y}};const xT={kernelName:a.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:i,strides:o,pad:l,includeBatchInIndex:u}=n,c=r;a.util.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const d=[1,1];a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=a.backend_util.computePool2DInfo(s.shape,i,o,d,l),[p,f]=function(e,t,n,r){let a=new hw(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new hw(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(s,u,h,c);return[p,f]}};const wT={kernelName:a.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{keepDims:i,axis:o}=n,l=r,u=s.shape.length,c=a.util.parseAxisParam(o,s.shape);let d=c;const h=a.backend_util.getAxesPermutation(d,u),p=null!=h,f=l.shouldExecuteOnCPU([s]),m=[];let g=s;if(p){if(f){const e=l.texData.get(g.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=xv(e,s.shape,s.dtype,h,t);g=l.makeTensorInfo(t,s.dtype);l.texData.get(g.dataId).values=n}else g=Cx(s,h,l);m.push(g),d=a.backend_util.getInnerMostAxes(d.length,u)}a.backend_util.assertAxesAreInnerMostDims("sum",d,u);const[y,b]=a.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;i&&(v=a.backend_util.expandShapeToKeepDim(y,c));const x=function(e,t,n,r){const s=a.util.sizeFromShape(t),i=xx({inputs:{x:e},attrs:{shape:[a.util.sizeFromShape(e.shape)/s,s]},backend:r}),o=Tx(i,"float32","mean",r),l=xx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(g,b,v,l);for(const a of m)l.disposeIntermediateTensorInfo(a);return x}};const kT={kernelName:a.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let h=s;null!=d&&(h=$x({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",c,l);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,c),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"min",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}},ST=hx({opSnippet:Xv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n",cpuKernelImpl:qb}),TT={kernelName:a.Minimum,backendName:"webgl",kernelFunc:ST};class NT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=tb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class IT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=tb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Sv("rc",r),l=Sv("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const CT={kernelName:a.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s}=t,{paddings:i,mode:o}=r,l=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IT(s.shape,i,o):new NT(s.shape,i,o);return n.runWebGLProgram(l,[s],s.dtype)}},ET=hx({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Qv+"\n  return result;\n"}),AT={kernelName:a.Mod,backendName:"webgl",kernelFunc:ET};class $T{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const _T=hx({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),RT={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:_T},FT="return a - b;",DT=hx({opSnippet:FT,packedOpSnippet:FT,supportsComplex:!0,cpuKernelImpl:yv}),OT={kernelName:a.Sub,backendName:"webgl",kernelFunc:DT};function MT(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=a.util.parseAxisParam([i],s.shape),l=cT({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=a.backend_util.expandShapeToKeepDim(l.shape,o),c=xx({inputs:{x:l},backend:n,attrs:{shape:u}}),d=DT({inputs:{a:s,b:c},backend:n}),h=tS({inputs:{x:d},backend:n}),p=Ex({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=xx({inputs:{x:p},backend:n,attrs:{shape:u}}),m=_T({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const zT={kernelName:a.Softmax,backendName:"webgl",kernelFunc:MT};const LT={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:MT({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new $T(u,c,s),h=[[i]],p=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),p}},PT=_v+"\n  return -x;\n";const BT={kernelName:a.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Xb(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Gv(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new $v(r.shape,PT),n.runWebGLProgram(s,[r],r.dtype)}},WT=a.kernel_impls.nonMaxSuppressionV3Impl;const VT={kernelName:a.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r,c=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:h}=WT(c,d,o,l,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},UT=a.kernel_impls.nonMaxSuppressionV4Impl;const GT={kernelName:a.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=UT(d,h,o,l,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},jT=a.kernel_impls.nonMaxSuppressionV5Impl;const HT={kernelName:a.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o,f=l,m=u,g=c,{selectedIndices:y,selectedScores:b}=jT(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class YT{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const qT={kernelName:a.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:o,onValue:l,offValue:u}=r,c=a.util.sizeFromShape(s.shape),d=new YT(c,o,l,u),h=xx({inputs:{x:s},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(d,[h],i);n.disposeIntermediateTensorInfo(h);const f=xx({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(p),f}};function KT(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ow({inputs:{input:r},backend:n}),t=KT({inputs:{x:e},backend:n}),a=Zw({inputs:{input:r},backend:n}),s=KT({inputs:{x:a},backend:n}),i=nx({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return hS({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const XT={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:KT};const ZT={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Ow({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Zw({inputs:{input:a},backend:r}),i=KT({inputs:{x:s},backend:r}),o=nx({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return hS({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const QT={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return rS({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=ek({inputs:t.map((e=>{const t=rS({inputs:{input:e},backend:n,attrs:{dim:s}});return l.push(t),t})),backend:n,attrs:{axis:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class JT{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=tb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class eN{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=tb(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Sv("rc",r),l=Sv("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const tN=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r;if(0===a.util.sizeFromShape(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return hS({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const l=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eN(s.shape,i,o):new JT(s.shape,i,o),u=[[o]];return n.runWebGLProgram(l,[s],s.dtype,u)},nN={kernelName:a.PadV2,backendName:"webgl",kernelFunc:tN},rN=hx({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Qv+"\n  return result;\n"}),aN={kernelName:a.Pow,backendName:"webgl",kernelFunc:rN};const sN={kernelName:a.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=[],c=a.util.parseAxisParam(i,s.shape);let d=c;const h=a.backend_util.getAxesPermutation(d,l);let p,f=s;if(null!=h&&(f=$x({inputs:{x:s},backend:n,attrs:{perm:h}}),d=a.backend_util.getInnerMostAxes(d.length,l),u.push(f)),a.backend_util.assertAxesAreInnerMostDims("prod",d,l),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Qb(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.backend_util.computeOutAndReduceShapes(f.shape,d),r=a.util.sizeFromShape(t),i=xx({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Tx(i,(0,a.sumOutType)(s.dtype),"prod",n);p=xx({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(p);const e=a.backend_util.expandShapeToKeepDim(p.shape,c);p=xx({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const iN={kernelName:a.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),c=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,p,f]=Jb(l,u,c,s.shape,s.dtype,d,i.shape,o),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const oN={kernelName:a.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=ev(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const lN={kernelName:a.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),c=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=tv(u,a.shape,c,s.shape,s.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,s.dtype,m)}},uN=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=nv(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},cN={kernelName:a.Range,backendName:"webgl",kernelFunc:uN},dN=dx({opSnippet:"return 1.0 / x;"}),hN={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:dN},pN=dx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fN={kernelName:a.Relu,backendName:"webgl",kernelFunc:pN},mN=dx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gN={kernelName:a.Relu6,backendName:"webgl",kernelFunc:mN};class yN{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class bN{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vN={kernelName:a.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bN(s.shape,u,c,i,o):new yN(s.shape,u,c,i,o);return n.runWebGLProgram(d,[s],"float32")}};class xN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wN={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new xN(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class kN{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class SN{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const TN={kernelName:a.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SN(s.shape,u,c,i,o):new kN(s.shape,u,c,i,o);return n.runWebGLProgram(d,[s],s.dtype)}};class NN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const IN={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new NN(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class CN{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=tb(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class EN{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Sv("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=tb(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const AN={kernelName:a.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,o=s.shape.length,l=a.util.parseAxisParam(i,s.shape);if(0===o)return ex({inputs:{x:s},backend:n});const u=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EN(s.shape,l):new CN(s.shape,l);return n.runWebGLProgram(u,[s],s.dtype)}};class $N{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const _N={kernelName:a.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:i,fillValue:o,center:l}=n,u=r,c=new $N(s.shape,o),[d,h]=a.backend_util.getImageCenter(l,s.shape[1],s.shape[2]),p=[[d,h,Math.sin(i),Math.cos(i)]];return u.runWebGLProgram(c,[s],s.dtype,p)}},RN=dx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),FN={kernelName:a.Round,backendName:"webgl",kernelFunc:RN},DN=dx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:rv}),ON={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:DN};class MN{constructor(e,t,n,r,a,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=tb(a.length),l=tb(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class zN{constructor(e,t,n,r,a,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const o=tb(a.length),l=tb(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const LN={kernelName:a.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=a.backend_util.calculateShapes(i,s,o),p=[h/c,c];if(0===h)return n.makeTensorInfo(o,s.dtype);const f=xx({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=xx({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,a.env)().getBool("WEBGL_PACK")?new zN(u,l,f.shape.length,m.shape.length,d,p):new MN(u,l,f.shape.length,m.shape.length,d,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=xx({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class PN{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===(0,a.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const BN={kernelName:a.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new PN(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}};class WN{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=tb(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const VN={kernelName:a.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,o=new WN(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],(0,a.upcastType)(s.dtype,i.dtype))}},UN=dx({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.backend_util.SELU_SCALEALPHA};\n  float scale = ${a.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),GN={kernelName:a.Selu,backendName:"webgl",kernelFunc:UN},jN=dx({opSnippet:cx+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:sv}),HN={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:jN},YN=dx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qN={kernelName:a.Sign,backendName:"webgl",kernelFunc:YN},KN=dx({opSnippet:cx+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Qv}\n  return result;\n`}),XN={kernelName:a.Sin,backendName:"webgl",kernelFunc:KN},ZN=dx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),QN={kernelName:a.Sinh,backendName:"webgl",kernelFunc:ZN},JN=dx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),eI={kernelName:a.Softplus,backendName:"webgl",kernelFunc:JN},tI={kernelName:a.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;a.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let a=1+i.length;a<s.shape.length;++a)u.push([0,0]);const c=[],d=tN({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=a.backend_util.getReshaped(d.shape,i,l,!1),p=a.backend_util.getPermuted(h.length,i.length,!1),f=a.backend_util.getReshapedPermuted(d.shape,i,l,!1),m=xx({inputs:{x:d},backend:n,attrs:{shape:h}}),g=$x({inputs:{x:m},backend:n,attrs:{perm:p}}),y=xx({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const nI={kernelName:a.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=lv(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const rI={kernelName:a.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,d]=uv(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const aI={kernelName:a.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=cv(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const sI={kernelName:a.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=cv(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const iI={kernelName:a.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=a.backend_util.calculateShapes(i,s,l),f=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=a.util.decodeString(n.readSync(o.dataId)[0]),m=av(e,t,l,p,d,c,u,h,r,f);return n.makeTensorInfo(l,m.dtype,m.values)}const m=new MN(c,u,s.shape.length,i.shape.length,h,[p,1],f),g=n.runWebGLProgram(m,[i,s,o],i.dtype),y=xx({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(g),y}};const oI={kernelName:a.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,l=a.util.parseAxisParam(o,s.shape)[0],u=a.backend_util.prepareSplitSize(s,i,l),c=s.shape.length,d=new Array(c).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[l]=e;const r=Cw({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[l]+=e,r}))}},lI="return sqrt(x);",uI=dx({opSnippet:lI,packedOpSnippet:lI,cpuKernelImpl:dv}),cI={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:uI},dI=dx({opSnippet:"return x * x;"}),hI={kernelName:a.Square,backendName:"webgl",kernelFunc:dI},pI="return (a - b) * (a - b);",fI=hx({opSnippet:pI,packedOpSnippet:pI}),mI={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:fI};const gI={kernelName:a.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(s.dataId),o=a.backend_util.fromUint8ToStringArray(i),l=hv(o,"string",r);return n.makeTensorInfo(s.shape,"string",l)}};const yI={kernelName:a.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,s=_v+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new $v(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}};class bI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=tb(n.length),s=tb(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const vI={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=a.slice_util.sliceInfo(s.shape,i,o,l,u,c,d,h,p);let k;if(g)k=xx({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){a.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.slice_util.computeOutShape(v,x,w),t=Cw({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});k=xx({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,a.buffer)(s.shape,s.dtype,e),r=pv(f,t,w,v);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new bI(v,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}}const S=xx({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}};const xI={kernelName:a.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=fv(h,p,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const wI={kernelName:a.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=mv(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const kI={kernelName:a.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=gv(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},SI=dx({opSnippet:"return tan(x);"}),TI={kernelName:a.Tan,backendName:"webgl",kernelFunc:SI},NI=dx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),II={kernelName:a.Tanh,backendName:"webgl",kernelFunc:NI};const CI={kernelName:a.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:o}=t,{}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=a.backend_util.calculateShapes(o,i,s.shape),p=[h/c,c];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const f=xx({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=xx({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),g=xx({inputs:{x:s},backend:n,attrs:{shape:p}}),y=new MN(u,l,f.shape.length,m.shape.length,d,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=xx({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class EI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=tb(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function AI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>a.util.decodeString(e))):e,r=(0,a.buffer)(s.shape,s.dtype,t),o=bv(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new EI(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const $I={kernelName:a.Tile,backendName:"webgl",kernelFunc:AI};class _I{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class RI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function FI(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function DI(e){let t=1;for(;t<e;)t*=2;return t}const OI={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:o}=r,l=(0,a.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,a.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([s])||d<l||i>u){const e=n.readSync(s.dataId),[t,r]=vv(e,c,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[s,hS({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,m=a.util.sizeFromShape(c)/d,g=xx({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&FI(n,f);const y=DI(i),b=DI(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,r)=>{const a=x(),s=new _I(r),i=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=v;v=n.runWebGLProgram(s,a,"int32",i),FI(n,o)};for(let a=1;a<y;a*=2){const e=2*a;for(let t=a;t>=1;t/=2)w(e,t,[m,b])}for(let a=b;a>y;a/=2){const e=x(),t=new RI([m,a/2]),r=[[d],[null===v?1:0],[y]],s=v;v=n.runWebGLProgram(t,e,"int32",r),FI(n,s);const i=y/2,o=2*i;for(let n=i;n>=1;n/=2)w(o,n,v.shape)}let k=v;v=Cw({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,i]}}),FI(n,k);let S=_S({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});FI(n,g);const T=c.slice(0,-1);T.push(i),k=v,v=xx({inputs:{x:v},attrs:{shape:T},backend:n}),FI(n,k);const N=S;return S=xx({inputs:{x:S},attrs:{shape:T},backend:n}),FI(n,N),[S,v]}};class MI{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const zI={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,h,p]=a.shape,[f,m]=null!=u?u:[d,h],g=new MI(d,h,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[a,s],"float32")}};const LI={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;My(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=wv(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const PI={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(u[c++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[s]=m;const e=Cw({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=xx({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class BI{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const WI={kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r,l=s.shape.length,u=[];let c=0;const d=a.backend_util.getAxesPermutation([c],l);let h=s;null!=d&&(h=$x({inputs:{x:s},backend:n,attrs:{perm:d}}),u.push(h),c=a.backend_util.getInnerMostAxes(1,l)[0]);const p=a.backend_util.segment_util.computeOutShape(h.shape,c,o),f=a.util.sizeFromShape([h.shape[c]]),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=(0,a.sumOutType)(s.dtype),y=(e,t,r,s,i)=>{const o=e.shape[0],l=e.shape[1],c=a.backend_util.segment_util.segOpComputeOptimalWindowSize(l,i),d=new BI({windowSize:c,inSize:l,batchSize:o,numSegments:i},t),h=n.compileAndRun(d,[e,r],s);if(u.push(h),h.shape[1]===i)return h;const p=uN({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=AI({inputs:{x:p},backend:n,attrs:{reps:[l/c]}});u.push(p),u.push(f);return y(h,t,f,s,i)},b=xx({inputs:{x:y(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:p}});let v=b;if(null!=d){u.push(b);const e=a.backend_util.getUndoAxesPermutation(d);v=$x({inputs:{x:v},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},VI=[Dx,Mx,Lx,Bx,Ux,Hx,Yx,qx,ew,tw,rw,sw,ow,uw,dw,fw,mw,bw,vw,xw,Sw,Aw,$w,_w,Rw,Lw,Ww,Gw,rx,Yw,tk,uk,fk,gk,yk,bk,vk,wk,Sk,Nk,_k,Rk,Fk,Ok,Lk,Wk,Vk,Gk,Hk,Yk,Kk,Xk,Qk,eS,nS,aS,oS,cS,pS,mS,bS,xS,SS,IS,CS,AS,RS,DS,MS,tx,zS,Qw,PS,WS,US,ix,jS,YS,qS,XS,QS,eT,nT,aT,oT,uT,dT,pT,fT,mT,bT,vT,xT,wT,kT,TT,CT,AT,LT,vx,BT,VT,GT,HT,Dw,qT,ZT,QT,nN,aN,ux,sN,iN,oN,lN,cN,Mw,RT,hN,fN,gN,wx,vN,wN,TN,IN,AN,_N,FN,ON,LN,BN,VN,GN,HN,qN,XN,QN,Ew,zT,eI,tI,nI,rI,aI,sI,iI,oI,cI,hI,mI,gI,yI,vI,xI,wI,kI,OT,Ax,TI,II,CI,$I,OI,zI,_x,LI,PI,WI,XT];for(const n of VI)(0,a.registerKernel)(n);a.version_core,Vu.version_converter;var UI=n(3915),GI=n(579);const jI=function(){const[e,n]=(0,t.useState)(!1),[r,a]=(0,t.useState)(null),[s,i]=(0,t.useState)(null),o=(0,t.useRef)(null),l=(0,t.useRef)(null),[u,c]=(0,t.useState)(!1);(0,t.useEffect)((()=>{!async function(){c(!0);const e=await UI.load();i(e),n(!0),c(!1)}()}),[]);const d=e=>{const t=document.getElementById("output");t.innerHTML="",e.forEach((n=>{const r=document.createElement("p");r.textContent=`${n.class}: ${Math.round(100*n.score)}%`,t.appendChild(r);const a=document.createElement("canvas");console.log(e),a.id="result-canvas",a.width=l.current.width,a.height=l.current.height;const s=a.getContext("2d");s.drawImage(l.current,0,0),s.strokeStyle="red",s.lineWidth=2,s.beginPath(),s.rect(n.bbox[0],n.bbox[1],n.bbox[2],n.bbox[3]),s.stroke();const i=document.getElementById("result");i.innerHTML="",i.appendChild(a)})),document.getElementById("clear-results-btn").style.display="inline-block",document.querySelector(".progress").style.display="none"},h=async e=>{const t=document.createElement("canvas");t.width=e.width,t.height=e.height;if(t.getContext("2d").drawImage(e,0,0),s){const e=await s.detect(t);d(e)}};return(0,GI.jsx)("div",{className:"container",children:(0,GI.jsx)("div",{className:"row justify-content-center",children:(0,GI.jsxs)("div",{className:"col-md-6",children:[(0,GI.jsx)("h2",{children:"Accessing the Interface:"}),(0,GI.jsxs)("ul",{children:[(0,GI.jsx)("li",{children:(0,GI.jsx)("h3",{children:'When the page loads, users will see buttons for "Live Video" and "Upload Image"..'})}),(0,GI.jsxs)("ul",{children:[(0,GI.jsxs)("li",{children:[(0,GI.jsx)("span",{style:{fontWeight:"bold"},children:"Live Video:"}),' Click "Live Video" to detect objects via camera. Access granted triggers video stream.']}),(0,GI.jsxs)("li",{children:[(0,GI.jsx)("span",{style:{fontWeight:"bold"},children:"Upload Image:"}),' Click "Upload Image" to select image for detection.']}),(0,GI.jsxs)("li",{children:[(0,GI.jsx)("span",{style:{fontWeight:"bold"},children:"Object Detection:"})," Detect objects with confidence scores, outlined on image."]}),(0,GI.jsxs)("li",{children:[(0,GI.jsx)("span",{style:{fontWeight:"bold"},children:"Clear Results:"}),' After detection, click "Clear Results" to hide detected objects.']}),(0,GI.jsxs)("li",{children:[(0,GI.jsx)("span",{style:{fontWeight:"bold"},children:"Understanding Results:"})," List objects with names and confidence scores. Bounding boxes show object location."]})]})]}),(0,GI.jsx)("div",{className:"text-center text-danger",children:"Try now"}),(0,GI.jsxs)("div",{className:"text-center",children:[(0,GI.jsx)("button",{onClick:async()=>{try{const e=await navigator.mediaDevices.getUserMedia({video:!0});a(e),o.current.srcObject=e,o.current.play()}catch(e){console.error("Error accessing camera:",e)}},className:"btn btn-primary me-5",children:"Live Video"}),(0,GI.jsx)("button",{onClick:()=>{if(r){r.getTracks().forEach((e=>e.stop())),a(null)}},className:"btn btn-danger me-2",style:{display:r?"inline-block":"none"},children:"Stop"}),(0,GI.jsx)("button",{onClick:()=>{document.getElementById("output").innerHTML="",document.getElementById("result").innerHTML="",document.getElementById("clear-results-btn").style.display="none"},className:"btn btn-secondary me-2",id:"clear-results-btn",style:{display:"none"},children:"Clear Results"}),(0,GI.jsx)("button",{className:"btn btn-primary",onClick:()=>document.getElementById("image-upload").click(),children:"Upload Image"})]}),(0,GI.jsx)("input",{type:"file",id:"image-upload",accept:"image/*",style:{display:"none"},onChange:e=>{const t=e.target.files[0],n=new FileReader;n.onloadstart=()=>{document.querySelector(".progress").style.display="block"},n.onload=async e=>{const t=document.createElement("img");t.src=e.target.result,t.onload=async()=>{s&&await h(t)}},n.readAsDataURL(t)}}),(0,GI.jsxs)("div",{id:"video-container",style:{display:r?"block":"none"},children:[(0,GI.jsx)("video",{ref:o,autoPlay:!0,playsInline:!0}),(0,GI.jsx)("button",{onClick:async()=>{const e=l.current;e.width=o.current.videoWidth,e.height=o.current.videoHeight;if(e.getContext("2d").drawImage(o.current,0,0,e.width,e.height),s){const t=await s.detect(e);d(t)}},className:"btn btn-primary mt-2",children:"Take Picture"})]}),(0,GI.jsx)("canvas",{ref:l,style:{display:"none"}}),(0,GI.jsx)("div",{id:"output",className:"text-center mb-3"}),(0,GI.jsx)("div",{id:"result"}),(0,GI.jsx)("div",{className:"progress",style:{display:"none"},children:(0,GI.jsx)("div",{className:"progress-bar progress-bar-striped progress-bar-animated",role:"progressbar","aria-valuemin":"0","aria-valuemax":"100"})}),u&&(0,GI.jsx)("div",{id:"loading-text",className:"text-center text-danger",children:"Model loading and processing..."})]})})})},HI=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:r,getFCP:a,getLCP:s,getTTFB:i}=t;n(e),r(e),a(e),s(e),i(e)}))};r.createRoot(document.getElementById("root")).render((0,GI.jsx)(t.StrictMode,{children:(0,GI.jsx)(jI,{})})),HI()})()})();
//# sourceMappingURL=main.353fc6e2.js.map